/*! jQuery v3.4.1 | (c) JS Foundation and other contributors | jquery.org/license */
function Curtains(e){var t;if(this.planes=[],this.renderTargets=[],this.shaderPasses=[],this._imageCache=[],this._drawStacks={opaque:{length:0,programs:[]},transparent:{length:0,programs:[]},renderPasses:[],scenePasses:[]},this._drawingEnabled=!0,this._forceRender=!1,"string"==typeof e&&(console.warn("Since v4.0 you should use an object to pass your container and other parameters. Please refer to the docs: https://www.curtainsjs.com/documentation.html"),e={container:t=e}),e.container?"string"==typeof e.container?this.container=document.getElementById(e.container):e.container instanceof Element&&(this.container=e.container):((t=document.createElement("div")).setAttribute("id","curtains-canvas"),document.body.appendChild(t),this.container=t),this._autoResize=e.autoResize,null!==this._autoResize&&void 0!==this._autoResize||(this._autoResize=!0),this._autoRender=e.autoRender,null!==this._autoRender&&void 0!==this._autoRender||(this._autoRender=!0),this._watchScroll=e.watchScroll,null!==this._watchScroll&&void 0!==this._watchScroll||(this._watchScroll=!0),this.pixelRatio=e.pixelRatio||window.devicePixelRatio||1,e.renderingScale=isNaN(e.renderingScale)?1:parseFloat(e.renderingScale),this._renderingScale=Math.max(.25,Math.min(1,e.renderingScale)),this.premultipliedAlpha=e.premultipliedAlpha||!1,this.alpha=e.alpha,null!==this.alpha&&void 0!==this.alpha||(this.alpha=!0),this.productionMode=e.production||!1,!this.container)return this.productionMode||console.warn("You must specify a valid container ID"),void(this._onErrorCallback&&this._onErrorCallback());this._init()}!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,(function(e,t){"use strict";var i=[],n=e.document,r=Object.getPrototypeOf,o=i.slice,s=i.concat,a=i.push,l=i.indexOf,u={},c=u.toString,d=u.hasOwnProperty,h=d.toString,p=h.call(Object),f={},g=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},m=function(e){return null!=e&&e===e.window},v={type:!0,src:!0,nonce:!0,noModule:!0};function y(e,t,i){var r,o,s=(i=i||n).createElement("script");if(s.text=e,t)for(r in v)(o=t[r]||t.getAttribute&&t.getAttribute(r))&&s.setAttribute(r,o);i.head.appendChild(s).parentNode.removeChild(s)}function _(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?u[c.call(e)]||"object":typeof e}var x="3.4.1",b=function(e,t){return new b.fn.init(e,t)},w=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function T(e){var t=!!e&&"length"in e&&e.length,i=_(e);return!g(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}b.fn=b.prototype={jquery:x,constructor:b,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return b.each(this,e)},map:function(e){return this.pushStack(b.map(this,(function(t,i){return e.call(t,i,t)})))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:a,sort:i.sort,splice:i.splice},b.extend=b.fn.extend=function(){var e,t,i,n,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||g(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=e[t],"__proto__"!==t&&s!==n&&(u&&n&&(b.isPlainObject(n)||(r=Array.isArray(n)))?(i=s[t],o=r&&!Array.isArray(i)?[]:r||b.isPlainObject(i)?i:{},r=!1,s[t]=b.extend(u,o,n)):void 0!==n&&(s[t]=n));return s},b.extend({expando:"jQuery"+(x+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==c.call(e)||(t=r(e))&&("function"!=typeof(i=d.call(t,"constructor")&&t.constructor)||h.call(i)!==p))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){y(e,{nonce:t&&t.nonce})},each:function(e,t){var i,n=0;if(T(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(w,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(T(Object(e))?b.merge(i,"string"==typeof e?[e]:e):a.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:l.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,r=e.length;n<i;n++)e[r++]=t[n];return e.length=r,e},grep:function(e,t,i){for(var n=[],r=0,o=e.length,s=!i;r<o;r++)!t(e[r],r)!==s&&n.push(e[r]);return n},map:function(e,t,i){var n,r,o=0,a=[];if(T(e))for(n=e.length;o<n;o++)null!=(r=t(e[o],o,i))&&a.push(r);else for(o in e)null!=(r=t(e[o],o,i))&&a.push(r);return s.apply([],a)},guid:1,support:f}),"function"==typeof Symbol&&(b.fn[Symbol.iterator]=i[Symbol.iterator]),b.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){u["[object "+t+"]"]=t.toLowerCase()}));var C=function(e){var t,i,n,r,o,s,a,l,u,c,d,h,p,f,g,m,v,y,_,x="sizzle"+1*new Date,b=e.document,w=0,T=0,C=le(),S=le(),k=le(),P=le(),E=function(e,t){return e===t&&(d=!0),0},A={}.hasOwnProperty,D=[],R=D.pop,M=D.push,O=D.push,L=D.slice,N=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},$="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",I="[\\x20\\t\\r\\n\\f]",j="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",F="\\["+I+"*("+j+")(?:"+I+"*([*^$|!~]?=)"+I+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+j+"))|)"+I+"*\\]",B=":("+j+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+F+")*)|.*)\\)|)",H=new RegExp(I+"+","g"),z=new RegExp("^"+I+"+|((?:^|[^\\\\])(?:\\\\.)*)"+I+"+$","g"),q=new RegExp("^"+I+"*,"+I+"*"),U=new RegExp("^"+I+"*([>+~]|"+I+")"+I+"*"),W=new RegExp(I+"|>"),V=new RegExp(B),X=new RegExp("^"+j+"$"),Y={ID:new RegExp("^#("+j+")"),CLASS:new RegExp("^\\.("+j+")"),TAG:new RegExp("^("+j+"|[*])"),ATTR:new RegExp("^"+F),PSEUDO:new RegExp("^"+B),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+I+"*(even|odd|(([+-]|)(\\d*)n|)"+I+"*(?:([+-]|)"+I+"*(\\d+)|))"+I+"*\\)|)","i"),bool:new RegExp("^(?:"+$+")$","i"),needsContext:new RegExp("^"+I+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+I+"*((?:-\\d)?\\d*)"+I+"*\\)|)(?=[^-]|$)","i")},G=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\([\\da-f]{1,6}"+I+"?|("+I+")|.)","ig"),ie=function(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},ne=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){h()},se=xe((function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{O.apply(D=L.call(b.childNodes),b.childNodes),D[b.childNodes.length].nodeType}catch(t){O={apply:D.length?function(e,t){M.apply(e,L.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function ae(e,t,n,r){var o,a,u,c,d,f,v,y=t&&t.ownerDocument,w=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==w&&9!==w&&11!==w)return n;if(!r&&((t?t.ownerDocument||t:b)!==p&&h(t),t=t||p,g)){if(11!==w&&(d=Z.exec(e)))if(o=d[1]){if(9===w){if(!(u=t.getElementById(o)))return n;if(u.id===o)return n.push(u),n}else if(y&&(u=y.getElementById(o))&&_(t,u)&&u.id===o)return n.push(u),n}else{if(d[2])return O.apply(n,t.getElementsByTagName(e)),n;if((o=d[3])&&i.getElementsByClassName&&t.getElementsByClassName)return O.apply(n,t.getElementsByClassName(o)),n}if(i.qsa&&!P[e+" "]&&(!m||!m.test(e))&&(1!==w||"object"!==t.nodeName.toLowerCase())){if(v=e,y=t,1===w&&W.test(e)){for((c=t.getAttribute("id"))?c=c.replace(ne,re):t.setAttribute("id",c=x),a=(f=s(e)).length;a--;)f[a]="#"+c+" "+_e(f[a]);v=f.join(","),y=ee.test(e)&&ve(t.parentNode)||t}try{return O.apply(n,y.querySelectorAll(v)),n}catch(t){P(e,!0)}finally{c===x&&t.removeAttribute("id")}}}return l(e.replace(z,"$1"),t,n,r)}function le(){var e=[];return function t(i,r){return e.push(i+" ")>n.cacheLength&&delete t[e.shift()],t[i+" "]=r}}function ue(e){return e[x]=!0,e}function ce(e){var t=p.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var i=e.split("|"),r=i.length;r--;)n.attrHandle[i[r]]=t}function he(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function fe(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function ge(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&se(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function me(e){return ue((function(t){return t=+t,ue((function(i,n){for(var r,o=e([],i.length,t),s=o.length;s--;)i[r=o[s]]&&(i[r]=!(n[r]=i[r]))}))}))}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in i=ae.support={},o=ae.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!G.test(t||i&&i.nodeName||"HTML")},h=ae.setDocument=function(e){var t,r,s=e?e.ownerDocument||e:b;return s!==p&&9===s.nodeType&&s.documentElement&&(f=(p=s).documentElement,g=!o(p),b!==p&&(r=p.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",oe,!1):r.attachEvent&&r.attachEvent("onunload",oe)),i.attributes=ce((function(e){return e.className="i",!e.getAttribute("className")})),i.getElementsByTagName=ce((function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length})),i.getElementsByClassName=J.test(p.getElementsByClassName),i.getById=ce((function(e){return f.appendChild(e).id=x,!p.getElementsByName||!p.getElementsByName(x).length})),i.getById?(n.filter.ID=function(e){var t=e.replace(te,ie);return function(e){return e.getAttribute("id")===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var i=t.getElementById(e);return i?[i]:[]}}):(n.filter.ID=function(e){var t=e.replace(te,ie);return function(e){var i=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var i,n,r,o=t.getElementById(e);if(o){if((i=o.getAttributeNode("id"))&&i.value===e)return[o];for(r=t.getElementsByName(e),n=0;o=r[n++];)if((i=o.getAttributeNode("id"))&&i.value===e)return[o]}return[]}}),n.find.TAG=i.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):i.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;i=o[r++];)1===i.nodeType&&n.push(i);return n}return o},n.find.CLASS=i.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},v=[],m=[],(i.qsa=J.test(p.querySelectorAll))&&(ce((function(e){f.appendChild(e).innerHTML="<a id='"+x+"'></a><select id='"+x+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+I+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+I+"*(?:value|"+$+")"),e.querySelectorAll("[id~="+x+"-]").length||m.push("~="),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+x+"+*").length||m.push(".#.+[+~]")})),ce((function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+I+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),f.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=J.test(y=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ce((function(e){i.disconnectedMatch=y.call(e,"*"),y.call(e,"[s!='']:x"),v.push("!=",B)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),t=J.test(f.compareDocumentPosition),_=t||J.test(f.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},E=t?function(e,t){if(e===t)return d=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!i.sortDetached&&t.compareDocumentPosition(e)===n?e===p||e.ownerDocument===b&&_(b,e)?-1:t===p||t.ownerDocument===b&&_(b,t)?1:c?N(c,e)-N(c,t):0:4&n?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,r=e.parentNode,o=t.parentNode,s=[e],a=[t];if(!r||!o)return e===p?-1:t===p?1:r?-1:o?1:c?N(c,e)-N(c,t):0;if(r===o)return he(e,t);for(i=e;i=i.parentNode;)s.unshift(i);for(i=t;i=i.parentNode;)a.unshift(i);for(;s[n]===a[n];)n++;return n?he(s[n],a[n]):s[n]===b?-1:a[n]===b?1:0}),p},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&h(e),i.matchesSelector&&g&&!P[t+" "]&&(!v||!v.test(t))&&(!m||!m.test(t)))try{var n=y.call(e,t);if(n||i.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){P(t,!0)}return 0<ae(t,p,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!==p&&h(e),_(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!==p&&h(e);var r=n.attrHandle[t.toLowerCase()],o=r&&A.call(n.attrHandle,t.toLowerCase())?r(e,t,!g):void 0;return void 0!==o?o:i.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},ae.escape=function(e){return(e+"").replace(ne,re)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,n=[],r=0,o=0;if(d=!i.detectDuplicates,c=!i.sortStable&&e.slice(0),e.sort(E),d){for(;t=e[o++];)t===e[o]&&(r=n.push(o));for(;r--;)e.splice(n[r],1)}return c=null,e},r=ae.getText=function(e){var t,i="",n=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[n++];)i+=r(t);return i},(n=ae.selectors={cacheLength:50,createPseudo:ue,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ie),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ie),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return Y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&V.test(i)&&(t=s(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ie).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=C[e+" "];return t||(t=new RegExp("(^|"+I+")"+e+"("+I+"|$)"))&&C(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,t,i){return function(n){var r=ae.attr(n,e);return null==r?"!="===t:!t||(r+="","="===t?r===i:"!="===t?r!==i:"^="===t?i&&0===r.indexOf(i):"*="===t?i&&-1<r.indexOf(i):"$="===t?i&&r.slice(-i.length)===i:"~="===t?-1<(" "+r.replace(H," ")+" ").indexOf(i):"|="===t&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,i,n,r){var o="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===n&&0===r?function(e){return!!e.parentNode}:function(t,i,l){var u,c,d,h,p,f,g=o!==s?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!l&&!a,_=!1;if(m){if(o){for(;g;){for(h=t;h=h[g];)if(a?h.nodeName.toLowerCase()===v:1===h.nodeType)return!1;f=g="only"===e&&!f&&"nextSibling"}return!0}if(f=[s?m.firstChild:m.lastChild],s&&y){for(_=(p=(u=(c=(d=(h=m)[x]||(h[x]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]||[])[0]===w&&u[1])&&u[2],h=p&&m.childNodes[p];h=++p&&h&&h[g]||(_=p=0)||f.pop();)if(1===h.nodeType&&++_&&h===t){c[e]=[w,p,_];break}}else if(y&&(_=p=(u=(c=(d=(h=t)[x]||(h[x]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]||[])[0]===w&&u[1]),!1===_)for(;(h=++p&&h&&h[g]||(_=p=0)||f.pop())&&((a?h.nodeName.toLowerCase()!==v:1!==h.nodeType)||!++_||(y&&((c=(d=h[x]||(h[x]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]=[w,_]),h!==t)););return(_-=r)===n||_%n==0&&0<=_/n}}},PSEUDO:function(e,t){var i,r=n.pseudos[e]||n.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return r[x]?r(t):1<r.length?(i=[e,e,"",t],n.setFilters.hasOwnProperty(e.toLowerCase())?ue((function(e,i){for(var n,o=r(e,t),s=o.length;s--;)e[n=N(e,o[s])]=!(i[n]=o[s])})):function(e){return r(e,0,i)}):r}},pseudos:{not:ue((function(e){var t=[],i=[],n=a(e.replace(z,"$1"));return n[x]?ue((function(e,t,i,r){for(var o,s=n(e,null,r,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))})):function(e,r,o){return t[0]=e,n(t,null,o,i),t[0]=null,!i.pop()}})),has:ue((function(e){return function(t){return 0<ae(e,t).length}})),contains:ue((function(e){return e=e.replace(te,ie),function(t){return-1<(t.textContent||r(t)).indexOf(e)}})),lang:ue((function(e){return X.test(e||"")||ae.error("unsupported lang: "+e),e=e.replace(te,ie).toLowerCase(),function(t){var i;do{if(i=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(i=i.toLowerCase())===e||0===i.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!n.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:me((function(){return[0]})),last:me((function(e,t){return[t-1]})),eq:me((function(e,t,i){return[i<0?i+t:i]})),even:me((function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e})),odd:me((function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e})),lt:me((function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e})),gt:me((function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e}))}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[t]=pe(t);for(t in{submit:!0,reset:!0})n.pseudos[t]=fe(t);function ye(){}function _e(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function xe(e,t,i){var n=t.dir,r=t.next,o=r||n,s=i&&"parentNode"===o,a=T++;return t.first?function(t,i,r){for(;t=t[n];)if(1===t.nodeType||s)return e(t,i,r);return!1}:function(t,i,l){var u,c,d,h=[w,a];if(l){for(;t=t[n];)if((1===t.nodeType||s)&&e(t,i,l))return!0}else for(;t=t[n];)if(1===t.nodeType||s)if(c=(d=t[x]||(t[x]={}))[t.uniqueID]||(d[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[n]||t;else{if((u=c[o])&&u[0]===w&&u[1]===a)return h[2]=u[2];if((c[o]=h)[2]=e(t,i,l))return!0}return!1}}function be(e){return 1<e.length?function(t,i,n){for(var r=e.length;r--;)if(!e[r](t,i,n))return!1;return!0}:e[0]}function we(e,t,i,n,r){for(var o,s=[],a=0,l=e.length,u=null!=t;a<l;a++)(o=e[a])&&(i&&!i(o,n,r)||(s.push(o),u&&t.push(a)));return s}function Te(e,t,i,n,r,o){return n&&!n[x]&&(n=Te(n)),r&&!r[x]&&(r=Te(r,o)),ue((function(o,s,a,l){var u,c,d,h=[],p=[],f=s.length,g=o||function(e,t,i){for(var n=0,r=t.length;n<r;n++)ae(e,t[n],i);return i}(t||"*",a.nodeType?[a]:a,[]),m=!e||!o&&t?g:we(g,h,e,a,l),v=i?r||(o?e:f||n)?[]:s:m;if(i&&i(m,v,a,l),n)for(u=we(v,p),n(u,[],a,l),c=u.length;c--;)(d=u[c])&&(v[p[c]]=!(m[p[c]]=d));if(o){if(r||e){if(r){for(u=[],c=v.length;c--;)(d=v[c])&&u.push(m[c]=d);r(null,v=[],u,l)}for(c=v.length;c--;)(d=v[c])&&-1<(u=r?N(o,d):h[c])&&(o[u]=!(s[u]=d))}}else v=we(v===s?v.splice(f,v.length):v),r?r(null,s,v,l):O.apply(s,v)}))}function Ce(e){for(var t,i,r,o=e.length,s=n.relative[e[0].type],a=s||n.relative[" "],l=s?1:0,c=xe((function(e){return e===t}),a,!0),d=xe((function(e){return-1<N(t,e)}),a,!0),h=[function(e,i,n){var r=!s&&(n||i!==u)||((t=i).nodeType?c(e,i,n):d(e,i,n));return t=null,r}];l<o;l++)if(i=n.relative[e[l].type])h=[xe(be(h),i)];else{if((i=n.filter[e[l].type].apply(null,e[l].matches))[x]){for(r=++l;r<o&&!n.relative[e[r].type];r++);return Te(1<l&&be(h),1<l&&_e(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(z,"$1"),i,l<r&&Ce(e.slice(l,r)),r<o&&Ce(e=e.slice(r)),r<o&&_e(e))}h.push(i)}return be(h)}return ye.prototype=n.filters=n.pseudos,n.setFilters=new ye,s=ae.tokenize=function(e,t){var i,r,o,s,a,l,u,c=S[e+" "];if(c)return t?0:c.slice(0);for(a=e,l=[],u=n.preFilter;a;){for(s in i&&!(r=q.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),i=!1,(r=U.exec(a))&&(i=r.shift(),o.push({value:i,type:r[0].replace(z," ")}),a=a.slice(i.length)),n.filter)!(r=Y[s].exec(a))||u[s]&&!(r=u[s](r))||(i=r.shift(),o.push({value:i,type:s,matches:r}),a=a.slice(i.length));if(!i)break}return t?a.length:a?ae.error(e):S(e,l).slice(0)},a=ae.compile=function(e,t){var i,r,o,a,l,c,d=[],f=[],m=k[e+" "];if(!m){for(t||(t=s(e)),i=t.length;i--;)(m=Ce(t[i]))[x]?d.push(m):f.push(m);(m=k(e,(r=f,a=0<(o=d).length,l=0<r.length,c=function(e,t,i,s,c){var d,f,m,v=0,y="0",_=e&&[],x=[],b=u,T=e||l&&n.find.TAG("*",c),C=w+=null==b?1:Math.random()||.1,S=T.length;for(c&&(u=t===p||t||c);y!==S&&null!=(d=T[y]);y++){if(l&&d){for(f=0,t||d.ownerDocument===p||(h(d),i=!g);m=r[f++];)if(m(d,t||p,i)){s.push(d);break}c&&(w=C)}a&&((d=!m&&d)&&v--,e&&_.push(d))}if(v+=y,a&&y!==v){for(f=0;m=o[f++];)m(_,x,t,i);if(e){if(0<v)for(;y--;)_[y]||x[y]||(x[y]=R.call(s));x=we(x)}O.apply(s,x),c&&!e&&0<x.length&&1<v+o.length&&ae.uniqueSort(s)}return c&&(w=C,u=b),_},a?ue(c):c))).selector=e}return m},l=ae.select=function(e,t,i,r){var o,l,u,c,d,h="function"==typeof e&&e,p=!r&&s(e=h.selector||e);if(i=i||[],1===p.length){if(2<(l=p[0]=p[0].slice(0)).length&&"ID"===(u=l[0]).type&&9===t.nodeType&&g&&n.relative[l[1].type]){if(!(t=(n.find.ID(u.matches[0].replace(te,ie),t)||[])[0]))return i;h&&(t=t.parentNode),e=e.slice(l.shift().value.length)}for(o=Y.needsContext.test(e)?0:l.length;o--&&(u=l[o],!n.relative[c=u.type]);)if((d=n.find[c])&&(r=d(u.matches[0].replace(te,ie),ee.test(l[0].type)&&ve(t.parentNode)||t))){if(l.splice(o,1),!(e=r.length&&_e(l)))return O.apply(i,r),i;break}}return(h||a(e,p))(r,t,!g,i,!t||ee.test(e)&&ve(t.parentNode)||t),i},i.sortStable=x.split("").sort(E).join("")===x,i.detectDuplicates=!!d,h(),i.sortDetached=ce((function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))})),ce((function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")}))||de("type|href|height|width",(function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)})),i.attributes&&ce((function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}))||de("value",(function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue})),ce((function(e){return null==e.getAttribute("disabled")}))||de($,(function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null})),ae}(e);b.find=C,b.expr=C.selectors,b.expr[":"]=b.expr.pseudos,b.uniqueSort=b.unique=C.uniqueSort,b.text=C.getText,b.isXMLDoc=C.isXML,b.contains=C.contains,b.escapeSelector=C.escape;var S=function(e,t,i){for(var n=[],r=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&b(e).is(i))break;n.push(e)}return n},k=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},P=b.expr.match.needsContext;function E(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var A=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function D(e,t,i){return g(t)?b.grep(e,(function(e,n){return!!t.call(e,n,e)!==i})):t.nodeType?b.grep(e,(function(e){return e===t!==i})):"string"!=typeof t?b.grep(e,(function(e){return-1<l.call(t,e)!==i})):b.filter(t,e,i)}b.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?b.find.matchesSelector(n,e)?[n]:[]:b.find.matches(e,b.grep(t,(function(e){return 1===e.nodeType})))},b.fn.extend({find:function(e){var t,i,n=this.length,r=this;if("string"!=typeof e)return this.pushStack(b(e).filter((function(){for(t=0;t<n;t++)if(b.contains(r[t],this))return!0})));for(i=this.pushStack([]),t=0;t<n;t++)b.find(e,r[t],i);return 1<n?b.uniqueSort(i):i},filter:function(e){return this.pushStack(D(this,e||[],!1))},not:function(e){return this.pushStack(D(this,e||[],!0))},is:function(e){return!!D(this,"string"==typeof e&&P.test(e)?b(e):e||[],!1).length}});var R,M=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(b.fn.init=function(e,t,i){var r,o;if(!e)return this;if(i=i||R,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:M.exec(e))||!r[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof b?t[0]:t,b.merge(this,b.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:n,!0)),A.test(r[1])&&b.isPlainObject(t))for(r in t)g(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(o=n.getElementById(r[2]))&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):g(e)?void 0!==i.ready?i.ready(e):e(b):b.makeArray(e,this)}).prototype=b.fn,R=b(n);var O=/^(?:parents|prev(?:Until|All))/,L={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}b.fn.extend({has:function(e){var t=b(e,this),i=t.length;return this.filter((function(){for(var e=0;e<i;e++)if(b.contains(this,t[e]))return!0}))},closest:function(e,t){var i,n=0,r=this.length,o=[],s="string"!=typeof e&&b(e);if(!P.test(e))for(;n<r;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(s?-1<s.index(i):1===i.nodeType&&b.find.matchesSelector(i,e))){o.push(i);break}return this.pushStack(1<o.length?b.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?l.call(b(e),this[0]):l.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(b.uniqueSort(b.merge(this.get(),b(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return S(e,"parentNode")},parentsUntil:function(e,t,i){return S(e,"parentNode",i)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return S(e,"nextSibling")},prevAll:function(e){return S(e,"previousSibling")},nextUntil:function(e,t,i){return S(e,"nextSibling",i)},prevUntil:function(e,t,i){return S(e,"previousSibling",i)},siblings:function(e){return k((e.parentNode||{}).firstChild,e)},children:function(e){return k(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(E(e,"template")&&(e=e.content||e),b.merge([],e.childNodes))}},(function(e,t){b.fn[e]=function(i,n){var r=b.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=b.filter(n,r)),1<this.length&&(L[e]||b.uniqueSort(r),O.test(e)&&r.reverse()),this.pushStack(r)}}));var $=/[^\x20\t\r\n\f]+/g;function I(e){return e}function j(e){throw e}function F(e,t,i,n){var r;try{e&&g(r=e.promise)?r.call(e).done(t).fail(i):e&&g(r=e.then)?r.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}b.Callbacks=function(e){var t,i;e="string"==typeof e?(t=e,i={},b.each(t.match($)||[],(function(e,t){i[t]=!0})),i):b.extend({},e);var n,r,o,s,a=[],l=[],u=-1,c=function(){for(s=s||e.once,o=n=!0;l.length;u=-1)for(r=l.shift();++u<a.length;)!1===a[u].apply(r[0],r[1])&&e.stopOnFalse&&(u=a.length,r=!1);e.memory||(r=!1),n=!1,s&&(a=r?[]:"")},d={add:function(){return a&&(r&&!n&&(u=a.length-1,l.push(r)),function t(i){b.each(i,(function(i,n){g(n)?e.unique&&d.has(n)||a.push(n):n&&n.length&&"string"!==_(n)&&t(n)}))}(arguments),r&&!n&&c()),this},remove:function(){return b.each(arguments,(function(e,t){for(var i;-1<(i=b.inArray(t,a,i));)a.splice(i,1),i<=u&&u--})),this},has:function(e){return e?-1<b.inArray(e,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return s=l=[],a=r="",this},disabled:function(){return!a},lock:function(){return s=l=[],r||n||(a=r=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],l.push(t),n||c()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!o}};return d},b.extend({Deferred:function(t){var i=[["notify","progress",b.Callbacks("memory"),b.Callbacks("memory"),2],["resolve","done",b.Callbacks("once memory"),b.Callbacks("once memory"),0,"resolved"],["reject","fail",b.Callbacks("once memory"),b.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var e=arguments;return b.Deferred((function(t){b.each(i,(function(i,n){var r=g(e[n[4]])&&e[n[4]];o[n[1]]((function(){var e=r&&r.apply(this,arguments);e&&g(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[n[0]+"With"](this,r?[e]:arguments)}))})),e=null})).promise()},then:function(t,n,r){var o=0;function s(t,i,n,r){return function(){var a=this,l=arguments,u=function(){var e,u;if(!(t<o)){if((e=n.apply(a,l))===i.promise())throw new TypeError("Thenable self-resolution");u=e&&("object"==typeof e||"function"==typeof e)&&e.then,g(u)?r?u.call(e,s(o,i,I,r),s(o,i,j,r)):(o++,u.call(e,s(o,i,I,r),s(o,i,j,r),s(o,i,I,i.notifyWith))):(n!==I&&(a=void 0,l=[e]),(r||i.resolveWith)(a,l))}},c=r?u:function(){try{u()}catch(e){b.Deferred.exceptionHook&&b.Deferred.exceptionHook(e,c.stackTrace),o<=t+1&&(n!==j&&(a=void 0,l=[e]),i.rejectWith(a,l))}};t?c():(b.Deferred.getStackHook&&(c.stackTrace=b.Deferred.getStackHook()),e.setTimeout(c))}}return b.Deferred((function(e){i[0][3].add(s(0,e,g(r)?r:I,e.notifyWith)),i[1][3].add(s(0,e,g(t)?t:I)),i[2][3].add(s(0,e,g(n)?n:j))})).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},o={};return b.each(i,(function(e,t){var s=t[2],a=t[5];r[t[1]]=s.add,a&&s.add((function(){n=a}),i[3-e][2].disable,i[3-e][3].disable,i[0][2].lock,i[0][3].lock),s.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=s.fireWith})),r.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,i=t,n=Array(i),r=o.call(arguments),s=b.Deferred(),a=function(e){return function(i){n[e]=this,r[e]=1<arguments.length?o.call(arguments):i,--t||s.resolveWith(n,r)}};if(t<=1&&(F(e,s.done(a(i)).resolve,s.reject,!t),"pending"===s.state()||g(r[i]&&r[i].then)))return s.then();for(;i--;)F(r[i],a(i),s.reject);return s.promise()}});var B=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;b.Deferred.exceptionHook=function(t,i){e.console&&e.console.warn&&t&&B.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,i)},b.readyException=function(t){e.setTimeout((function(){throw t}))};var H=b.Deferred();function z(){n.removeEventListener("DOMContentLoaded",z),e.removeEventListener("load",z),b.ready()}b.fn.ready=function(e){return H.then(e).catch((function(e){b.readyException(e)})),this},b.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--b.readyWait:b.isReady)||(b.isReady=!0)!==e&&0<--b.readyWait||H.resolveWith(n,[b])}}),b.ready.then=H.then,"complete"===n.readyState||"loading"!==n.readyState&&!n.documentElement.doScroll?e.setTimeout(b.ready):(n.addEventListener("DOMContentLoaded",z),e.addEventListener("load",z));var q=function(e,t,i,n,r,o,s){var a=0,l=e.length,u=null==i;if("object"===_(i))for(a in r=!0,i)q(e,t,a,i[a],!0,o,s);else if(void 0!==n&&(r=!0,g(n)||(s=!0),u&&(s?(t.call(e,n),t=null):(u=t,t=function(e,t,i){return u.call(b(e),i)})),t))for(;a<l;a++)t(e[a],i,s?n:n.call(e[a],a,t(e[a],i)));return r?e:u?t.call(e):l?t(e[0],i):o},U=/^-ms-/,W=/-([a-z])/g;function V(e,t){return t.toUpperCase()}function X(e){return e.replace(U,"ms-").replace(W,V)}var Y=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=b.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,r=this.cache(e);if("string"==typeof t)r[X(t)]=i;else for(n in t)r[X(n)]=t[n];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(X):(t=X(t))in n?[t]:t.match($)||[]).length;for(;i--;)delete n[t[i]]}(void 0===t||b.isEmptyObject(n))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!b.isEmptyObject(t)}};var K=new G,Q=new G,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,i){var n,r;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(r=i)||"false"!==r&&("null"===r?null:r===+r+""?+r:J.test(r)?JSON.parse(r):r)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}b.extend({hasData:function(e){return Q.hasData(e)||K.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return K.access(e,t,i)},_removeData:function(e,t){K.remove(e,t)}}),b.fn.extend({data:function(e,t){var i,n,r,o=this[0],s=o&&o.attributes;if(void 0===e){if(this.length&&(r=Q.get(o),1===o.nodeType&&!K.get(o,"hasDataAttrs"))){for(i=s.length;i--;)s[i]&&0===(n=s[i].name).indexOf("data-")&&(n=X(n.slice(5)),ee(o,n,r[n]));K.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each((function(){Q.set(this,e)})):q(this,(function(t){var i;if(o&&void 0===t)return void 0!==(i=Q.get(o,e))?i:void 0!==(i=ee(o,e))?i:void 0;this.each((function(){Q.set(this,e,t)}))}),null,t,1<arguments.length,null,!0)},removeData:function(e){return this.each((function(){Q.remove(this,e)}))}}),b.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=K.get(e,t),i&&(!n||Array.isArray(i)?n=K.access(e,t,b.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=b.queue(e,t),n=i.length,r=i.shift(),o=b._queueHooks(e,t);"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===t&&i.unshift("inprogress"),delete o.stop,r.call(e,(function(){b.dequeue(e,t)}),o)),!n&&o&&o.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return K.get(e,i)||K.access(e,i,{empty:b.Callbacks("once memory").add((function(){K.remove(e,[t+"queue",i])}))})}}),b.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?b.queue(this[0],e):void 0===t?this:this.each((function(){var i=b.queue(this,e,t);b._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&b.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){b.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,r=b.Deferred(),o=this,s=this.length,a=function(){--n||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)(i=K.get(o[s],e+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],re=n.documentElement,oe=function(e){return b.contains(e.ownerDocument,e)},se={composed:!0};re.getRootNode&&(oe=function(e){return b.contains(e.ownerDocument,e)||e.getRootNode(se)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===b.css(e,"display")},le=function(e,t,i,n){var r,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];for(o in r=i.apply(e,n||[]),t)e.style[o]=s[o];return r};function ue(e,t,i,n){var r,o,s=20,a=n?function(){return n.cur()}:function(){return b.css(e,t,"")},l=a(),u=i&&i[3]||(b.cssNumber[t]?"":"px"),c=e.nodeType&&(b.cssNumber[t]||"px"!==u&&+l)&&ie.exec(b.css(e,t));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;s--;)b.style(e,t,c+u),(1-o)*(1-(o=a()/l||.5))<=0&&(s=0),c/=o;c*=2,b.style(e,t,c+u),i=i||[]}return i&&(c=+c||+l||0,r=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=c,n.end=r)),r}var ce={};function de(e,t){for(var i,n,r,o,s,a,l,u=[],c=0,d=e.length;c<d;c++)(n=e[c]).style&&(i=n.style.display,t?("none"===i&&(u[c]=K.get(n,"display")||null,u[c]||(n.style.display="")),""===n.style.display&&ae(n)&&(u[c]=(l=s=o=void 0,s=(r=n).ownerDocument,a=r.nodeName,(l=ce[a])||(o=s.body.appendChild(s.createElement(a)),l=b.css(o,"display"),o.parentNode.removeChild(o),"none"===l&&(l="block"),ce[a]=l)))):"none"!==i&&(u[c]="none",K.set(n,"display",i)));for(c=0;c<d;c++)null!=u[c]&&(e[c].style.display=u[c]);return e}b.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){ae(this)?b(this).show():b(this).hide()}))}});var he=/^(?:checkbox|radio)$/i,pe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i,ge={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function me(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&E(e,t)?b.merge([e],i):i}function ve(e,t){for(var i=0,n=e.length;i<n;i++)K.set(e[i],"globalEval",!t||K.get(t[i],"globalEval"))}ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;var ye,_e,xe=/<|&#?\w+;/;function be(e,t,i,n,r){for(var o,s,a,l,u,c,d=t.createDocumentFragment(),h=[],p=0,f=e.length;p<f;p++)if((o=e[p])||0===o)if("object"===_(o))b.merge(h,o.nodeType?[o]:o);else if(xe.test(o)){for(s=s||d.appendChild(t.createElement("div")),a=(pe.exec(o)||["",""])[1].toLowerCase(),l=ge[a]||ge._default,s.innerHTML=l[1]+b.htmlPrefilter(o)+l[2],c=l[0];c--;)s=s.lastChild;b.merge(h,s.childNodes),(s=d.firstChild).textContent=""}else h.push(t.createTextNode(o));for(d.textContent="",p=0;o=h[p++];)if(n&&-1<b.inArray(o,n))r&&r.push(o);else if(u=oe(o),s=me(d.appendChild(o),"script"),u&&ve(s),i)for(c=0;o=s[c++];)fe.test(o.type||"")&&i.push(o);return d}ye=n.createDocumentFragment().appendChild(n.createElement("div")),(_e=n.createElement("input")).setAttribute("type","radio"),_e.setAttribute("checked","checked"),_e.setAttribute("name","t"),ye.appendChild(_e),f.checkClone=ye.cloneNode(!0).cloneNode(!0).lastChild.checked,ye.innerHTML="<textarea>x</textarea>",f.noCloneChecked=!!ye.cloneNode(!0).lastChild.defaultValue;var we=/^key/,Te=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\.(.+)|)/;function Se(){return!0}function ke(){return!1}function Pe(e,t){return e===function(){try{return n.activeElement}catch(e){}}()==("focus"===t)}function Ee(e,t,i,n,r,o){var s,a;if("object"==typeof t){for(a in"string"!=typeof i&&(n=n||i,i=void 0),t)Ee(e,a,i,n,t[a],o);return e}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),!1===r)r=ke;else if(!r)return e;return 1===o&&(s=r,(r=function(e){return b().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=b.guid++)),e.each((function(){b.event.add(this,t,r,n,i)}))}function Ae(e,t,i){i?(K.set(e,t,!1),b.event.add(e,t,{namespace:!1,handler:function(e){var n,r,s=K.get(this,t);if(1&e.isTrigger&&this[t]){if(s.length)(b.event.special[t]||{}).delegateType&&e.stopPropagation();else if(s=o.call(arguments),K.set(this,t,s),n=i(this,t),this[t](),s!==(r=K.get(this,t))||n?K.set(this,t,!1):r={},s!==r)return e.stopImmediatePropagation(),e.preventDefault(),r.value}else s.length&&(K.set(this,t,{value:b.event.trigger(b.extend(s[0],b.Event.prototype),s.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,t)&&b.event.add(e,t,Se)}b.event={global:{},add:function(e,t,i,n,r){var o,s,a,l,u,c,d,h,p,f,g,m=K.get(e);if(m)for(i.handler&&(i=(o=i).handler,r=o.selector),r&&b.find.matchesSelector(re,r),i.guid||(i.guid=b.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(t){return void 0!==b&&b.event.triggered!==t.type?b.event.dispatch.apply(e,arguments):void 0}),u=(t=(t||"").match($)||[""]).length;u--;)p=g=(a=Ce.exec(t[u])||[])[1],f=(a[2]||"").split(".").sort(),p&&(d=b.event.special[p]||{},p=(r?d.delegateType:d.bindType)||p,d=b.event.special[p]||{},c=b.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&b.expr.match.needsContext.test(r),namespace:f.join(".")},o),(h=l[p])||((h=l[p]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(e,n,f,s)||e.addEventListener&&e.addEventListener(p,s)),d.add&&(d.add.call(e,c),c.handler.guid||(c.handler.guid=i.guid)),r?h.splice(h.delegateCount++,0,c):h.push(c),b.event.global[p]=!0)},remove:function(e,t,i,n,r){var o,s,a,l,u,c,d,h,p,f,g,m=K.hasData(e)&&K.get(e);if(m&&(l=m.events)){for(u=(t=(t||"").match($)||[""]).length;u--;)if(p=g=(a=Ce.exec(t[u])||[])[1],f=(a[2]||"").split(".").sort(),p){for(d=b.event.special[p]||{},h=l[p=(n?d.delegateType:d.bindType)||p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=o=h.length;o--;)c=h[o],!r&&g!==c.origType||i&&i.guid!==c.guid||a&&!a.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(h.splice(o,1),c.selector&&h.delegateCount--,d.remove&&d.remove.call(e,c));s&&!h.length&&(d.teardown&&!1!==d.teardown.call(e,f,m.handle)||b.removeEvent(e,p,m.handle),delete l[p])}else for(p in l)b.event.remove(e,p+t[u],i,n,!0);b.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,i,n,r,o,s,a=b.event.fix(e),l=new Array(arguments.length),u=(K.get(this,"events")||{})[a.type]||[],c=b.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,a)){for(s=b.event.handlers.call(this,a,u),t=0;(r=s[t++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,i=0;(o=r.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(n=((b.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(e,t){var i,n,r,o,s,a=[],l=t.delegateCount,u=e.target;if(l&&u.nodeType&&!("click"===e.type&&1<=e.button))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==e.type||!0!==u.disabled)){for(o=[],s={},i=0;i<l;i++)void 0===s[r=(n=t[i]).selector+" "]&&(s[r]=n.needsContext?-1<b(r,this).index(u):b.find(r,this,null,[u]).length),s[r]&&o.push(n);o.length&&a.push({elem:u,handlers:o})}return u=this,l<t.length&&a.push({elem:u,handlers:t.slice(l)}),a},addProp:function(e,t){Object.defineProperty(b.Event.prototype,e,{enumerable:!0,configurable:!0,get:g(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[b.expando]?e:new b.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return he.test(t.type)&&t.click&&E(t,"input")&&Ae(t,"click",Se),!1},trigger:function(e){var t=this||e;return he.test(t.type)&&t.click&&E(t,"input")&&Ae(t,"click"),!0},_default:function(e){var t=e.target;return he.test(t.type)&&t.click&&E(t,"input")&&K.get(t,"click")||E(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},b.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},b.Event=function(e,t){if(!(this instanceof b.Event))return new b.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Se:ke,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&b.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[b.expando]=!0},b.Event.prototype={constructor:b.Event,isDefaultPrevented:ke,isPropagationStopped:ke,isImmediatePropagationStopped:ke,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Se,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Se,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Se,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},b.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&we.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Te.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},b.event.addProp),b.each({focus:"focusin",blur:"focusout"},(function(e,t){b.event.special[e]={setup:function(){return Ae(this,e,Pe),!1},trigger:function(){return Ae(this,e),!0},delegateType:t}})),b.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||b.contains(this,n))||(e.type=r.origType,i=r.handler.apply(this,arguments),e.type=t),i}}})),b.fn.extend({on:function(e,t,i,n){return Ee(this,e,t,i,n)},one:function(e,t,i,n){return Ee(this,e,t,i,n,1)},off:function(e,t,i){var n,r;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,b(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=ke),this.each((function(){b.event.remove(this,e,i,t)}))}});var De=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Re=/<script|<style|<link/i,Me=/checked\s*(?:[^=]|=\s*.checked.)/i,Oe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Le(e,t){return E(e,"table")&&E(11!==t.nodeType?t:t.firstChild,"tr")&&b(e).children("tbody")[0]||e}function Ne(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function $e(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ie(e,t){var i,n,r,o,s,a,l,u;if(1===t.nodeType){if(K.hasData(e)&&(o=K.access(e),s=K.set(t,o),u=o.events))for(r in delete s.handle,s.events={},u)for(i=0,n=u[r].length;i<n;i++)b.event.add(t,r,u[r][i]);Q.hasData(e)&&(a=Q.access(e),l=b.extend({},a),Q.set(t,l))}}function je(e,t,i,n){t=s.apply([],t);var r,o,a,l,u,c,d=0,h=e.length,p=h-1,m=t[0],v=g(m);if(v||1<h&&"string"==typeof m&&!f.checkClone&&Me.test(m))return e.each((function(r){var o=e.eq(r);v&&(t[0]=m.call(this,r,o.html())),je(o,t,i,n)}));if(h&&(o=(r=be(t,e[0].ownerDocument,!1,e,n)).firstChild,1===r.childNodes.length&&(r=o),o||n)){for(l=(a=b.map(me(r,"script"),Ne)).length;d<h;d++)u=r,d!==p&&(u=b.clone(u,!0,!0),l&&b.merge(a,me(u,"script"))),i.call(e[d],u,d);if(l)for(c=a[a.length-1].ownerDocument,b.map(a,$e),d=0;d<l;d++)u=a[d],fe.test(u.type||"")&&!K.access(u,"globalEval")&&b.contains(c,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?b._evalUrl&&!u.noModule&&b._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")}):y(u.textContent.replace(Oe,""),u,c))}return e}function Fe(e,t,i){for(var n,r=t?b.filter(t,e):e,o=0;null!=(n=r[o]);o++)i||1!==n.nodeType||b.cleanData(me(n)),n.parentNode&&(i&&oe(n)&&ve(me(n,"script")),n.parentNode.removeChild(n));return e}b.extend({htmlPrefilter:function(e){return e.replace(De,"<$1></$2>")},clone:function(e,t,i){var n,r,o,s,a,l,u,c=e.cloneNode(!0),d=oe(e);if(!(f.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(s=me(c),n=0,r=(o=me(e)).length;n<r;n++)a=o[n],"input"===(u=(l=s[n]).nodeName.toLowerCase())&&he.test(a.type)?l.checked=a.checked:"input"!==u&&"textarea"!==u||(l.defaultValue=a.defaultValue);if(t)if(i)for(o=o||me(e),s=s||me(c),n=0,r=o.length;n<r;n++)Ie(o[n],s[n]);else Ie(e,c);return 0<(s=me(c,"script")).length&&ve(s,!d&&me(e,"script")),c},cleanData:function(e){for(var t,i,n,r=b.event.special,o=0;void 0!==(i=e[o]);o++)if(Y(i)){if(t=i[K.expando]){if(t.events)for(n in t.events)r[n]?b.event.remove(i,n):b.removeEvent(i,n,t.handle);i[K.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),b.fn.extend({detach:function(e){return Fe(this,e,!0)},remove:function(e){return Fe(this,e)},text:function(e){return q(this,(function(e){return void 0===e?b.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return je(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Le(this,e).appendChild(e)}))},prepend:function(){return je(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Le(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return je(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return je(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(b.cleanData(me(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return b.clone(this,e,t)}))},html:function(e){return q(this,(function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Re.test(e)&&!ge[(pe.exec(e)||["",""])[1].toLowerCase()]){e=b.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(b.cleanData(me(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return je(this,arguments,(function(t){var i=this.parentNode;b.inArray(this,e)<0&&(b.cleanData(me(this)),i&&i.replaceChild(t,this))}),e)}}),b.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){b.fn[e]=function(e){for(var i,n=[],r=b(e),o=r.length-1,s=0;s<=o;s++)i=s===o?this:this.clone(!0),b(r[s])[t](i),a.apply(n,i.get());return this.pushStack(n)}}));var Be=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),He=function(t){var i=t.ownerDocument.defaultView;return i&&i.opener||(i=e),i.getComputedStyle(t)},ze=new RegExp(ne.join("|"),"i");function qe(e,t,i){var n,r,o,s,a=e.style;return(i=i||He(e))&&(""!==(s=i.getPropertyValue(t)||i[t])||oe(e)||(s=b.style(e,t)),!f.pixelBoxStyles()&&Be.test(s)&&ze.test(t)&&(n=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=n,a.minWidth=r,a.maxWidth=o)),void 0!==s?s+"":s}function Ue(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function t(){if(c){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(u).appendChild(c);var t=e.getComputedStyle(c);r="1%"!==t.top,l=12===i(t.marginLeft),c.style.right="60%",a=36===i(t.right),o=36===i(t.width),c.style.position="absolute",s=12===i(c.offsetWidth/3),re.removeChild(u),c=null}}function i(e){return Math.round(parseFloat(e))}var r,o,s,a,l,u=n.createElement("div"),c=n.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",f.clearCloneStyle="content-box"===c.style.backgroundClip,b.extend(f,{boxSizingReliable:function(){return t(),o},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),r},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),s}}))}();var We=["Webkit","Moz","ms"],Ve=n.createElement("div").style,Xe={};function Ye(e){return b.cssProps[e]||Xe[e]||(e in Ve?e:Xe[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=We.length;i--;)if((e=We[i]+t)in Ve)return e}(e)||e)}var Ge=/^(none|table(?!-c[ea]).+)/,Ke=/^--/,Qe={position:"absolute",visibility:"hidden",display:"block"},Je={letterSpacing:"0",fontWeight:"400"};function Ze(e,t,i){var n=ie.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function et(e,t,i,n,r,o){var s="width"===t?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;s<4;s+=2)"margin"===i&&(l+=b.css(e,i+ne[s],!0,r)),n?("content"===i&&(l-=b.css(e,"padding"+ne[s],!0,r)),"margin"!==i&&(l-=b.css(e,"border"+ne[s]+"Width",!0,r))):(l+=b.css(e,"padding"+ne[s],!0,r),"padding"!==i?l+=b.css(e,"border"+ne[s]+"Width",!0,r):a+=b.css(e,"border"+ne[s]+"Width",!0,r));return!n&&0<=o&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-l-a-.5))||0),l}function tt(e,t,i){var n=He(e),r=(!f.boxSizingReliable()||i)&&"border-box"===b.css(e,"boxSizing",!1,n),o=r,s=qe(e,t,n),a="offset"+t[0].toUpperCase()+t.slice(1);if(Be.test(s)){if(!i)return s;s="auto"}return(!f.boxSizingReliable()&&r||"auto"===s||!parseFloat(s)&&"inline"===b.css(e,"display",!1,n))&&e.getClientRects().length&&(r="border-box"===b.css(e,"boxSizing",!1,n),(o=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+et(e,t,i||(r?"border":"content"),o,n,s)+"px"}function it(e,t,i,n,r){return new it.prototype.init(e,t,i,n,r)}b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=qe(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,s,a=X(t),l=Ke.test(t),u=e.style;if(l||(t=Ye(a)),s=b.cssHooks[t]||b.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(r=s.get(e,!1,n))?r:u[t];"string"==(o=typeof i)&&(r=ie.exec(i))&&r[1]&&(i=ue(e,t,r),o="number"),null!=i&&i==i&&("number"!==o||l||(i+=r&&r[3]||(b.cssNumber[a]?"":"px")),f.clearCloneStyle||""!==i||0!==t.indexOf("background")||(u[t]="inherit"),s&&"set"in s&&void 0===(i=s.set(e,i,n))||(l?u.setProperty(t,i):u[t]=i))}},css:function(e,t,i,n){var r,o,s,a=X(t);return Ke.test(t)||(t=Ye(a)),(s=b.cssHooks[t]||b.cssHooks[a])&&"get"in s&&(r=s.get(e,!0,i)),void 0===r&&(r=qe(e,t,n)),"normal"===r&&t in Je&&(r=Je[t]),""===i||i?(o=parseFloat(r),!0===i||isFinite(o)?o||0:r):r}}),b.each(["height","width"],(function(e,t){b.cssHooks[t]={get:function(e,i,n){if(i)return!Ge.test(b.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?tt(e,t,n):le(e,Qe,(function(){return tt(e,t,n)}))},set:function(e,i,n){var r,o=He(e),s=!f.scrollboxSize()&&"absolute"===o.position,a=(s||n)&&"border-box"===b.css(e,"boxSizing",!1,o),l=n?et(e,t,n,a,o):0;return a&&s&&(l-=Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(o[t])-et(e,t,"border",!1,o)-.5)),l&&(r=ie.exec(i))&&"px"!==(r[3]||"px")&&(e.style[t]=i,i=b.css(e,t)),Ze(0,i,l)}}})),b.cssHooks.marginLeft=Ue(f.reliableMarginLeft,(function(e,t){if(t)return(parseFloat(qe(e,"marginLeft"))||e.getBoundingClientRect().left-le(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px"})),b.each({margin:"",padding:"",border:"Width"},(function(e,t){b.cssHooks[e+t]={expand:function(i){for(var n=0,r={},o="string"==typeof i?i.split(" "):[i];n<4;n++)r[e+ne[n]+t]=o[n]||o[n-2]||o[0];return r}},"margin"!==e&&(b.cssHooks[e+t].set=Ze)})),b.fn.extend({css:function(e,t){return q(this,(function(e,t,i){var n,r,o={},s=0;if(Array.isArray(t)){for(n=He(e),r=t.length;s<r;s++)o[t[s]]=b.css(e,t[s],!1,n);return o}return void 0!==i?b.style(e,t,i):b.css(e,t)}),e,t,1<arguments.length)}}),((b.Tween=it).prototype={constructor:it,init:function(e,t,i,n,r,o){this.elem=e,this.prop=i,this.easing=r||b.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=o||(b.cssNumber[i]?"":"px")},cur:function(){var e=it.propHooks[this.prop];return e&&e.get?e.get(this):it.propHooks._default.get(this)},run:function(e){var t,i=it.propHooks[this.prop];return this.options.duration?this.pos=t=b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):it.propHooks._default.set(this),this}}).init.prototype=it.prototype,(it.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=b.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):1!==e.elem.nodeType||!b.cssHooks[e.prop]&&null==e.elem.style[Ye(e.prop)]?e.elem[e.prop]=e.now:b.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=it.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},b.fx=it.prototype.init,b.fx.step={};var nt,rt,ot,st,at=/^(?:toggle|show|hide)$/,lt=/queueHooks$/;function ut(){rt&&(!1===n.hidden&&e.requestAnimationFrame?e.requestAnimationFrame(ut):e.setTimeout(ut,b.fx.interval),b.fx.tick())}function ct(){return e.setTimeout((function(){nt=void 0})),nt=Date.now()}function dt(e,t){var i,n=0,r={height:e};for(t=t?1:0;n<4;n+=2-t)r["margin"+(i=ne[n])]=r["padding"+i]=e;return t&&(r.opacity=r.width=e),r}function ht(e,t,i){for(var n,r=(pt.tweeners[t]||[]).concat(pt.tweeners["*"]),o=0,s=r.length;o<s;o++)if(n=r[o].call(i,t,e))return n}function pt(e,t,i){var n,r,o=0,s=pt.prefilters.length,a=b.Deferred().always((function(){delete l.elem})),l=function(){if(r)return!1;for(var t=nt||ct(),i=Math.max(0,u.startTime+u.duration-t),n=1-(i/u.duration||0),o=0,s=u.tweens.length;o<s;o++)u.tweens[o].run(n);return a.notifyWith(e,[u,n,i]),n<1&&s?i:(s||a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u]),!1)},u=a.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{},easing:b.easing._default},i),originalProperties:t,originalOptions:i,startTime:nt||ct(),duration:i.duration,tweens:[],createTween:function(t,i){var n=b.Tween(e,u.opts,t,i,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(n),n},stop:function(t){var i=0,n=t?u.tweens.length:0;if(r)return this;for(r=!0;i<n;i++)u.tweens[i].run(1);return t?(a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u,t])):a.rejectWith(e,[u,t]),this}}),c=u.props;for(function(e,t){var i,n,r,o,s;for(i in e)if(r=t[n=X(i)],o=e[i],Array.isArray(o)&&(r=o[1],o=e[i]=o[0]),i!==n&&(e[n]=o,delete e[i]),(s=b.cssHooks[n])&&"expand"in s)for(i in o=s.expand(o),delete e[n],o)i in e||(e[i]=o[i],t[i]=r);else t[n]=r}(c,u.opts.specialEasing);o<s;o++)if(n=pt.prefilters[o].call(u,e,c,u.opts))return g(n.stop)&&(b._queueHooks(u.elem,u.opts.queue).stop=n.stop.bind(n)),n;return b.map(c,ht,u),g(u.opts.start)&&u.opts.start.call(e,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),b.fx.timer(b.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u}b.Animation=b.extend(pt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return ue(i.elem,e,ie.exec(t),i),i}]},tweener:function(e,t){g(e)?(t=e,e=["*"]):e=e.match($);for(var i,n=0,r=e.length;n<r;n++)i=e[n],pt.tweeners[i]=pt.tweeners[i]||[],pt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,r,o,s,a,l,u,c,d="width"in t||"height"in t,h=this,p={},f=e.style,g=e.nodeType&&ae(e),m=K.get(e,"fxshow");for(n in i.queue||(null==(s=b._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,h.always((function(){h.always((function(){s.unqueued--,b.queue(e,"fx").length||s.empty.fire()}))}))),t)if(r=t[n],at.test(r)){if(delete t[n],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[n])continue;g=!0}p[n]=m&&m[n]||b.style(e,n)}if((l=!b.isEmptyObject(t))||!b.isEmptyObject(p))for(n in d&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(u=m&&m.display)&&(u=K.get(e,"display")),"none"===(c=b.css(e,"display"))&&(u?c=u:(de([e],!0),u=e.style.display||u,c=b.css(e,"display"),de([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===b.css(e,"float")&&(l||(h.done((function(){f.display=u})),null==u&&(c=f.display,u="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",h.always((function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}))),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=K.access(e,"fxshow",{display:u}),o&&(m.hidden=!g),g&&de([e],!0),h.done((function(){for(n in g||de([e]),K.remove(e,"fxshow"),p)b.style(e,n,p[n])}))),l=ht(g?m[n]:0,n,h),n in m||(m[n]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?pt.prefilters.unshift(e):pt.prefilters.push(e)}}),b.speed=function(e,t,i){var n=e&&"object"==typeof e?b.extend({},e):{complete:i||!i&&t||g(e)&&e,duration:e,easing:i&&t||t&&!g(t)&&t};return b.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in b.fx.speeds?n.duration=b.fx.speeds[n.duration]:n.duration=b.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){g(n.old)&&n.old.call(this),n.queue&&b.dequeue(this,n.queue)},n},b.fn.extend({fadeTo:function(e,t,i,n){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var r=b.isEmptyObject(e),o=b.speed(t,i,n),s=function(){var t=pt(this,b.extend({},e),o);(r||K.get(this,"finish"))&&t.stop(!0)};return s.finish=s,r||!1===o.queue?this.each(s):this.queue(o.queue,s)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||"fx",[]),this.each((function(){var t=!0,r=null!=e&&e+"queueHooks",o=b.timers,s=K.get(this);if(r)s[r]&&s[r].stop&&n(s[r]);else for(r in s)s[r]&&s[r].stop&&lt.test(r)&&n(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(i),t=!1,o.splice(r,1));!t&&i||b.dequeue(this,e)}))},finish:function(e){return!1!==e&&(e=e||"fx"),this.each((function(){var t,i=K.get(this),n=i[e+"queue"],r=i[e+"queueHooks"],o=b.timers,s=n?n.length:0;for(i.finish=!0,b.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<s;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish}))}}),b.each(["toggle","show","hide"],(function(e,t){var i=b.fn[t];b.fn[t]=function(e,n,r){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(dt(t,!0),e,n,r)}})),b.each({slideDown:dt("show"),slideUp:dt("hide"),slideToggle:dt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(e,t){b.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}})),b.timers=[],b.fx.tick=function(){var e,t=0,i=b.timers;for(nt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||b.fx.stop(),nt=void 0},b.fx.timer=function(e){b.timers.push(e),b.fx.start()},b.fx.interval=13,b.fx.start=function(){rt||(rt=!0,ut())},b.fx.stop=function(){rt=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fn.delay=function(t,i){return t=b.fx&&b.fx.speeds[t]||t,i=i||"fx",this.queue(i,(function(i,n){var r=e.setTimeout(i,t);n.stop=function(){e.clearTimeout(r)}}))},ot=n.createElement("input"),st=n.createElement("select").appendChild(n.createElement("option")),ot.type="checkbox",f.checkOn=""!==ot.value,f.optSelected=st.selected,(ot=n.createElement("input")).value="t",ot.type="radio",f.radioValue="t"===ot.value;var ft,gt=b.expr.attrHandle;b.fn.extend({attr:function(e,t){return q(this,b.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each((function(){b.removeAttr(this,e)}))}}),b.extend({attr:function(e,t,i){var n,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?b.prop(e,t,i):(1===o&&b.isXMLDoc(e)||(r=b.attrHooks[t.toLowerCase()]||(b.expr.match.bool.test(t)?ft:void 0)),void 0!==i?null===i?void b.removeAttr(e,t):r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:(e.setAttribute(t,i+""),i):r&&"get"in r&&null!==(n=r.get(e,t))?n:null==(n=b.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!f.radioValue&&"radio"===t&&E(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,r=t&&t.match($);if(r&&1===e.nodeType)for(;i=r[n++];)e.removeAttribute(i)}}),ft={set:function(e,t,i){return!1===t?b.removeAttr(e,i):e.setAttribute(i,i),i}},b.each(b.expr.match.bool.source.match(/\w+/g),(function(e,t){var i=gt[t]||b.find.attr;gt[t]=function(e,t,n){var r,o,s=t.toLowerCase();return n||(o=gt[s],gt[s]=r,r=null!=i(e,t,n)?s:null,gt[s]=o),r}}));var mt=/^(?:input|select|textarea|button)$/i,vt=/^(?:a|area)$/i;function yt(e){return(e.match($)||[]).join(" ")}function _t(e){return e.getAttribute&&e.getAttribute("class")||""}function xt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match($)||[]}b.fn.extend({prop:function(e,t){return q(this,b.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each((function(){delete this[b.propFix[e]||e]}))}}),b.extend({prop:function(e,t,i){var n,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&b.isXMLDoc(e)||(t=b.propFix[t]||t,r=b.propHooks[t]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:e[t]=i:r&&"get"in r&&null!==(n=r.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=b.find.attr(e,"tabindex");return t?parseInt(t,10):mt.test(e.nodeName)||vt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),f.optSelected||(b.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),b.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){b.propFix[this.toLowerCase()]=this})),b.fn.extend({addClass:function(e){var t,i,n,r,o,s,a,l=0;if(g(e))return this.each((function(t){b(this).addClass(e.call(this,t,_t(this)))}));if((t=xt(e)).length)for(;i=this[l++];)if(r=_t(i),n=1===i.nodeType&&" "+yt(r)+" "){for(s=0;o=t[s++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");r!==(a=yt(n))&&i.setAttribute("class",a)}return this},removeClass:function(e){var t,i,n,r,o,s,a,l=0;if(g(e))return this.each((function(t){b(this).removeClass(e.call(this,t,_t(this)))}));if(!arguments.length)return this.attr("class","");if((t=xt(e)).length)for(;i=this[l++];)if(r=_t(i),n=1===i.nodeType&&" "+yt(r)+" "){for(s=0;o=t[s++];)for(;-1<n.indexOf(" "+o+" ");)n=n.replace(" "+o+" "," ");r!==(a=yt(n))&&i.setAttribute("class",a)}return this},toggleClass:function(e,t){var i=typeof e,n="string"===i||Array.isArray(e);return"boolean"==typeof t&&n?t?this.addClass(e):this.removeClass(e):g(e)?this.each((function(i){b(this).toggleClass(e.call(this,i,_t(this),t),t)})):this.each((function(){var t,r,o,s;if(n)for(r=0,o=b(this),s=xt(e);t=s[r++];)o.hasClass(t)?o.removeClass(t):o.addClass(t);else void 0!==e&&"boolean"!==i||((t=_t(this))&&K.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":K.get(this,"__className__")||""))}))},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+yt(_t(i))+" ").indexOf(t))return!0;return!1}});var bt=/\r/g;b.fn.extend({val:function(e){var t,i,n,r=this[0];return arguments.length?(n=g(e),this.each((function(i){var r;1===this.nodeType&&(null==(r=n?e.call(this,i,b(this).val()):e)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=b.map(r,(function(e){return null==e?"":e+""}))),(t=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))}))):r?(t=b.valHooks[r.type]||b.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(i=t.get(r,"value"))?i:"string"==typeof(i=r.value)?i.replace(bt,""):null==i?"":i:void 0}}),b.extend({valHooks:{option:{get:function(e){var t=b.find.attr(e,"value");return null!=t?t:yt(b.text(e))}},select:{get:function(e){var t,i,n,r=e.options,o=e.selectedIndex,s="select-one"===e.type,a=s?null:[],l=s?o+1:r.length;for(n=o<0?l:s?o:0;n<l;n++)if(((i=r[n]).selected||n===o)&&!i.disabled&&(!i.parentNode.disabled||!E(i.parentNode,"optgroup"))){if(t=b(i).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var i,n,r=e.options,o=b.makeArray(t),s=r.length;s--;)((n=r[s]).selected=-1<b.inArray(b.valHooks.option.get(n),o))&&(i=!0);return i||(e.selectedIndex=-1),o}}}}),b.each(["radio","checkbox"],(function(){b.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<b.inArray(b(e).val(),t)}},f.checkOn||(b.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})})),f.focusin="onfocusin"in e;var wt=/^(?:focusinfocus|focusoutblur)$/,Tt=function(e){e.stopPropagation()};b.extend(b.event,{trigger:function(t,i,r,o){var s,a,l,u,c,h,p,f,v=[r||n],y=d.call(t,"type")?t.type:t,_=d.call(t,"namespace")?t.namespace.split("."):[];if(a=f=l=r=r||n,3!==r.nodeType&&8!==r.nodeType&&!wt.test(y+b.event.triggered)&&(-1<y.indexOf(".")&&(y=(_=y.split(".")).shift(),_.sort()),c=y.indexOf(":")<0&&"on"+y,(t=t[b.expando]?t:new b.Event(y,"object"==typeof t&&t)).isTrigger=o?2:3,t.namespace=_.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+_.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),i=null==i?[t]:b.makeArray(i,[t]),p=b.event.special[y]||{},o||!p.trigger||!1!==p.trigger.apply(r,i))){if(!o&&!p.noBubble&&!m(r)){for(u=p.delegateType||y,wt.test(u+y)||(a=a.parentNode);a;a=a.parentNode)v.push(a),l=a;l===(r.ownerDocument||n)&&v.push(l.defaultView||l.parentWindow||e)}for(s=0;(a=v[s++])&&!t.isPropagationStopped();)f=a,t.type=1<s?u:p.bindType||y,(h=(K.get(a,"events")||{})[t.type]&&K.get(a,"handle"))&&h.apply(a,i),(h=c&&a[c])&&h.apply&&Y(a)&&(t.result=h.apply(a,i),!1===t.result&&t.preventDefault());return t.type=y,o||t.isDefaultPrevented()||p._default&&!1!==p._default.apply(v.pop(),i)||!Y(r)||c&&g(r[y])&&!m(r)&&((l=r[c])&&(r[c]=null),b.event.triggered=y,t.isPropagationStopped()&&f.addEventListener(y,Tt),r[y](),t.isPropagationStopped()&&f.removeEventListener(y,Tt),b.event.triggered=void 0,l&&(r[c]=l)),t.result}},simulate:function(e,t,i){var n=b.extend(new b.Event,i,{type:e,isSimulated:!0});b.event.trigger(n,null,t)}}),b.fn.extend({trigger:function(e,t){return this.each((function(){b.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var i=this[0];if(i)return b.event.trigger(e,t,i,!0)}}),f.focusin||b.each({focus:"focusin",blur:"focusout"},(function(e,t){var i=function(e){b.event.simulate(t,e.target,b.event.fix(e))};b.event.special[t]={setup:function(){var n=this.ownerDocument||this,r=K.access(n,t);r||n.addEventListener(e,i,!0),K.access(n,t,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=K.access(n,t)-1;r?K.access(n,t,r):(n.removeEventListener(e,i,!0),K.remove(n,t))}}}));var Ct=e.location,St=Date.now(),kt=/\?/;b.parseXML=function(t){var i;if(!t||"string"!=typeof t)return null;try{i=(new e.DOMParser).parseFromString(t,"text/xml")}catch(t){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||b.error("Invalid XML: "+t),i};var Pt=/\[\]$/,Et=/\r?\n/g,At=/^(?:submit|button|image|reset|file)$/i,Dt=/^(?:input|select|textarea|keygen)/i;function Rt(e,t,i,n){var r;if(Array.isArray(t))b.each(t,(function(t,r){i||Pt.test(e)?n(e,r):Rt(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,i,n)}));else if(i||"object"!==_(t))n(e,t);else for(r in t)Rt(e+"["+r+"]",t[r],i,n)}b.param=function(e,t){var i,n=[],r=function(e,t){var i=g(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,(function(){r(this.name,this.value)}));else for(i in e)Rt(i,e[i],t,r);return n.join("&")},b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=b.prop(this,"elements");return e?b.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!b(this).is(":disabled")&&Dt.test(this.nodeName)&&!At.test(e)&&(this.checked||!he.test(e))})).map((function(e,t){var i=b(this).val();return null==i?null:Array.isArray(i)?b.map(i,(function(e){return{name:t.name,value:e.replace(Et,"\r\n")}})):{name:t.name,value:i.replace(Et,"\r\n")}})).get()}});var Mt=/%20/g,Ot=/#.*$/,Lt=/([?&])_=[^&]*/,Nt=/^(.*?):[ \t]*([^\r\n]*)$/gm,$t=/^(?:GET|HEAD)$/,It=/^\/\//,jt={},Ft={},Bt="*/".concat("*"),Ht=n.createElement("a");function zt(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,r=0,o=t.toLowerCase().match($)||[];if(g(i))for(;n=o[r++];)"+"===n[0]?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function qt(e,t,i,n){var r={},o=e===Ft;function s(a){var l;return r[a]=!0,b.each(e[a]||[],(function(e,a){var u=a(t,i,n);return"string"!=typeof u||o||r[u]?o?!(l=u):void 0:(t.dataTypes.unshift(u),s(u),!1)})),l}return s(t.dataTypes[0])||!r["*"]&&s("*")}function Ut(e,t){var i,n,r=b.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((r[i]?e:n||(n={}))[i]=t[i]);return n&&b.extend(!0,e,n),e}Ht.href=Ct.href,b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ct.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Ct.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Bt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Ut(Ut(e,b.ajaxSettings),t):Ut(b.ajaxSettings,e)},ajaxPrefilter:zt(jt),ajaxTransport:zt(Ft),ajax:function(t,i){"object"==typeof t&&(i=t,t=void 0),i=i||{};var r,o,s,a,l,u,c,d,h,p,f=b.ajaxSetup({},i),g=f.context||f,m=f.context&&(g.nodeType||g.jquery)?b(g):b.event,v=b.Deferred(),y=b.Callbacks("once memory"),_=f.statusCode||{},x={},w={},T="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(c){if(!a)for(a={};t=Nt.exec(s);)a[t[1].toLowerCase()+" "]=(a[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=a[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(e,t){return null==c&&(e=w[e.toLowerCase()]=w[e.toLowerCase()]||e,x[e]=t),this},overrideMimeType:function(e){return null==c&&(f.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)C.always(e[C.status]);else for(t in e)_[t]=[_[t],e[t]];return this},abort:function(e){var t=e||T;return r&&r.abort(t),S(0,t),this}};if(v.promise(C),f.url=((t||f.url||Ct.href)+"").replace(It,Ct.protocol+"//"),f.type=i.method||i.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match($)||[""],null==f.crossDomain){u=n.createElement("a");try{u.href=f.url,u.href=u.href,f.crossDomain=Ht.protocol+"//"+Ht.host!=u.protocol+"//"+u.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=b.param(f.data,f.traditional)),qt(jt,f,i,C),c)return C;for(h in(d=b.event&&f.global)&&0==b.active++&&b.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!$t.test(f.type),o=f.url.replace(Ot,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Mt,"+")):(p=f.url.slice(o.length),f.data&&(f.processData||"string"==typeof f.data)&&(o+=(kt.test(o)?"&":"?")+f.data,delete f.data),!1===f.cache&&(o=o.replace(Lt,"$1"),p=(kt.test(o)?"&":"?")+"_="+St+++p),f.url=o+p),f.ifModified&&(b.lastModified[o]&&C.setRequestHeader("If-Modified-Since",b.lastModified[o]),b.etag[o]&&C.setRequestHeader("If-None-Match",b.etag[o])),(f.data&&f.hasContent&&!1!==f.contentType||i.contentType)&&C.setRequestHeader("Content-Type",f.contentType),C.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Bt+"; q=0.01":""):f.accepts["*"]),f.headers)C.setRequestHeader(h,f.headers[h]);if(f.beforeSend&&(!1===f.beforeSend.call(g,C,f)||c))return C.abort();if(T="abort",y.add(f.complete),C.done(f.success),C.fail(f.error),r=qt(Ft,f,i,C)){if(C.readyState=1,d&&m.trigger("ajaxSend",[C,f]),c)return C;f.async&&0<f.timeout&&(l=e.setTimeout((function(){C.abort("timeout")}),f.timeout));try{c=!1,r.send(x,S)}catch(t){if(c)throw t;S(-1,t)}}else S(-1,"No Transport");function S(t,i,n,a){var u,h,p,x,w,T=i;c||(c=!0,l&&e.clearTimeout(l),r=void 0,s=a||"",C.readyState=0<t?4:0,u=200<=t&&t<300||304===t,n&&(x=function(e,t,i){for(var n,r,o,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(r in a)if(a[r]&&a[r].test(n)){l.unshift(r);break}if(l[0]in i)o=l[0];else{for(r in i){if(!l[0]||e.converters[r+" "+l[0]]){o=r;break}s||(s=r)}o=o||s}if(o)return o!==l[0]&&l.unshift(o),i[o]}(f,C,n)),x=function(e,t,i,n){var r,o,s,a,l,u={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)u[s.toLowerCase()]=e.converters[s];for(o=c.shift();o;)if(e.responseFields[o]&&(i[e.responseFields[o]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(s=u[l+" "+o]||u["* "+o]))for(r in u)if((a=r.split(" "))[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){!0===s?s=u[r]:!0!==u[r]&&(o=a[0],c.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}(f,x,C,u),u?(f.ifModified&&((w=C.getResponseHeader("Last-Modified"))&&(b.lastModified[o]=w),(w=C.getResponseHeader("etag"))&&(b.etag[o]=w)),204===t||"HEAD"===f.type?T="nocontent":304===t?T="notmodified":(T=x.state,h=x.data,u=!(p=x.error))):(p=T,!t&&T||(T="error",t<0&&(t=0))),C.status=t,C.statusText=(i||T)+"",u?v.resolveWith(g,[h,T,C]):v.rejectWith(g,[C,T,p]),C.statusCode(_),_=void 0,d&&m.trigger(u?"ajaxSuccess":"ajaxError",[C,f,u?h:p]),y.fireWith(g,[C,T]),d&&(m.trigger("ajaxComplete",[C,f]),--b.active||b.event.trigger("ajaxStop")))}return C},getJSON:function(e,t,i){return b.get(e,t,i,"json")},getScript:function(e,t){return b.get(e,void 0,t,"script")}}),b.each(["get","post"],(function(e,t){b[t]=function(e,i,n,r){return g(i)&&(r=r||n,n=i,i=void 0),b.ajax(b.extend({url:e,type:t,dataType:r,data:i,success:n},b.isPlainObject(e)&&e))}})),b._evalUrl=function(e,t){return b.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){b.globalEval(e,t)}})},b.fn.extend({wrapAll:function(e){var t;return this[0]&&(g(e)&&(e=e.call(this[0])),t=b(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this},wrapInner:function(e){return g(e)?this.each((function(t){b(this).wrapInner(e.call(this,t))})):this.each((function(){var t=b(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)}))},wrap:function(e){var t=g(e);return this.each((function(i){b(this).wrapAll(t?e.call(this,i):e)}))},unwrap:function(e){return this.parent(e).not("body").each((function(){b(this).replaceWith(this.childNodes)})),this}}),b.expr.pseudos.hidden=function(e){return!b.expr.pseudos.visible(e)},b.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},b.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(e){}};var Wt={0:200,1223:204},Vt=b.ajaxSettings.xhr();f.cors=!!Vt&&"withCredentials"in Vt,f.ajax=Vt=!!Vt,b.ajaxTransport((function(t){var i,n;if(f.cors||Vt&&!t.crossDomain)return{send:function(r,o){var s,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)a[s]=t.xhrFields[s];for(s in t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)a.setRequestHeader(s,r[s]);i=function(e){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===e?a.abort():"error"===e?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(Wt[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=a.ontimeout=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&e.setTimeout((function(){i&&n()}))},i=i("abort");try{a.send(t.hasContent&&t.data||null)}catch(r){if(i)throw r}},abort:function(){i&&i()}}})),b.ajaxPrefilter((function(e){e.crossDomain&&(e.contents.script=!1)})),b.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter("script",(function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")})),b.ajaxTransport("script",(function(e){var t,i;if(e.crossDomain||e.scriptAttrs)return{send:function(r,o){t=b("<script>").attr(e.scriptAttrs||{}).prop({charset:e.scriptCharset,src:e.url}).on("load error",i=function(e){t.remove(),i=null,e&&o("error"===e.type?404:200,e.type)}),n.head.appendChild(t[0])},abort:function(){i&&i()}}}));var Xt,Yt=[],Gt=/(=)\?(?=&|$)|\?\?/;b.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Yt.pop()||b.expando+"_"+St++;return this[e]=!0,e}}),b.ajaxPrefilter("json jsonp",(function(t,i,n){var r,o,s,a=!1!==t.jsonp&&(Gt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gt.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=g(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Gt,"$1"+r):!1!==t.jsonp&&(t.url+=(kt.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return s||b.error(r+" was not called"),s[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){s=arguments},n.always((function(){void 0===o?b(e).removeProp(r):e[r]=o,t[r]&&(t.jsonpCallback=i.jsonpCallback,Yt.push(r)),s&&g(o)&&o(s[0]),s=o=void 0})),"script"})),f.createHTMLDocument=((Xt=n.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Xt.childNodes.length),b.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(f.createHTMLDocument?((r=(t=n.implementation.createHTMLDocument("")).createElement("base")).href=n.location.href,t.head.appendChild(r)):t=n),s=!i&&[],(o=A.exec(e))?[t.createElement(o[1])]:(o=be([e],t,s),s&&s.length&&b(s).remove(),b.merge([],o.childNodes)));var r,o,s},b.fn.load=function(e,t,i){var n,r,o,s=this,a=e.indexOf(" ");return-1<a&&(n=yt(e.slice(a)),e=e.slice(0,a)),g(t)?(i=t,t=void 0):t&&"object"==typeof t&&(r="POST"),0<s.length&&b.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done((function(e){o=arguments,s.html(n?b("<div>").append(b.parseHTML(e)).find(n):e)})).always(i&&function(e,t){s.each((function(){i.apply(this,o||[e.responseText,t,e])}))}),this},b.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(e,t){b.fn[t]=function(e){return this.on(t,e)}})),b.expr.pseudos.animated=function(e){return b.grep(b.timers,(function(t){return e===t.elem})).length},b.offset={setOffset:function(e,t,i){var n,r,o,s,a,l,u=b.css(e,"position"),c=b(e),d={};"static"===u&&(e.style.position="relative"),a=c.offset(),o=b.css(e,"top"),l=b.css(e,"left"),("absolute"===u||"fixed"===u)&&-1<(o+l).indexOf("auto")?(s=(n=c.position()).top,r=n.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),g(t)&&(t=t.call(e,i,b.extend({},a))),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+r),"using"in t?t.using.call(e,d):c.css(d)}},b.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){b.offset.setOffset(this,e,t)}));var t,i,n=this[0];return n?n.getClientRects().length?(t=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:t.top+i.pageYOffset,left:t.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],r={top:0,left:0};if("fixed"===b.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===b.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((r=b(e).offset()).top+=b.css(e,"borderTopWidth",!0),r.left+=b.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-b.css(n,"marginTop",!0),left:t.left-r.left-b.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===b.css(e,"position");)e=e.offsetParent;return e||re}))}}),b.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var i="pageYOffset"===t;b.fn[e]=function(n){return q(this,(function(e,n,r){var o;if(m(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===r)return o?o[t]:e[n];o?o.scrollTo(i?o.pageXOffset:r,i?r:o.pageYOffset):e[n]=r}),e,n,arguments.length)}})),b.each(["top","left"],(function(e,t){b.cssHooks[t]=Ue(f.pixelPosition,(function(e,i){if(i)return i=qe(e,t),Be.test(i)?b(e).position()[t]+"px":i}))})),b.each({Height:"height",Width:"width"},(function(e,t){b.each({padding:"inner"+e,content:t,"":"outer"+e},(function(i,n){b.fn[n]=function(r,o){var s=arguments.length&&(i||"boolean"!=typeof r),a=i||(!0===r||!0===o?"margin":"border");return q(this,(function(t,i,r){var o;return m(t)?0===n.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?b.css(t,i,a):b.style(t,i,r,a)}),t,s?r:void 0,s)}}))})),b.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(e,t){b.fn[t]=function(e,i){return 0<arguments.length?this.on(t,null,e,i):this.trigger(t)}})),b.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),b.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),b.proxy=function(e,t){var i,n,r;if("string"==typeof t&&(i=e[t],t=e,e=i),g(e))return n=o.call(arguments,2),(r=function(){return e.apply(t||this,n.concat(o.call(arguments)))}).guid=e.guid=e.guid||b.guid++,r},b.holdReady=function(e){e?b.readyWait++:b.ready(!0)},b.isArray=Array.isArray,b.parseJSON=JSON.parse,b.nodeName=E,b.isFunction=g,b.isWindow=m,b.camelCase=X,b.type=_,b.now=Date.now,b.isNumeric=function(e){var t=b.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],(function(){return b}));var Kt=e.jQuery,Qt=e.$;return b.noConflict=function(t){return e.$===b&&(e.$=Qt),t&&e.jQuery===b&&(e.jQuery=Kt),b},t||(e.jQuery=e.$=b),b})),
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.14.7
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Popper=t()}(this,(function(){"use strict";for(var e="undefined"!=typeof window&&"undefined"!=typeof document,t=["Edge","Trident","Firefox"],i=0,n=0;n<t.length;n+=1)if(e&&navigator.userAgent.indexOf(t[n])>=0){i=1;break}var r=e&&window.Promise?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then((function(){t=!1,e()})))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout((function(){t=!1,e()}),i))}};function o(e){return e&&"[object Function]"==={}.toString.call(e)}function s(e,t){if(1!==e.nodeType)return[];var i=e.ownerDocument.defaultView.getComputedStyle(e,null);return t?i[t]:i}function a(e){return"HTML"===e.nodeName?e:e.parentNode||e.host}function l(e){if(!e)return document.body;switch(e.nodeName){case"HTML":case"BODY":return e.ownerDocument.body;case"#document":return e.body}var t=s(e),i=t.overflow,n=t.overflowX,r=t.overflowY;return/(auto|scroll|overlay)/.test(i+r+n)?e:l(a(e))}var u=e&&!(!window.MSInputMethodContext||!document.documentMode),c=e&&/MSIE 10/.test(navigator.userAgent);function d(e){return 11===e?u:10===e?c:u||c}function h(e){if(!e)return document.documentElement;for(var t=d(10)?document.body:null,i=e.offsetParent||null;i===t&&e.nextElementSibling;)i=(e=e.nextElementSibling).offsetParent;var n=i&&i.nodeName;return n&&"BODY"!==n&&"HTML"!==n?-1!==["TH","TD","TABLE"].indexOf(i.nodeName)&&"static"===s(i,"position")?h(i):i:e?e.ownerDocument.documentElement:document.documentElement}function p(e){return null!==e.parentNode?p(e.parentNode):e}function f(e,t){if(!(e&&e.nodeType&&t&&t.nodeType))return document.documentElement;var i=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,n=i?e:t,r=i?t:e,o=document.createRange();o.setStart(n,0),o.setEnd(r,0);var s,a,l=o.commonAncestorContainer;if(e!==l&&t!==l||n.contains(r))return"BODY"===(a=(s=l).nodeName)||"HTML"!==a&&h(s.firstElementChild)!==s?h(l):l;var u=p(e);return u.host?f(u.host,t):f(e,p(t).host)}function g(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top",i="top"===t?"scrollTop":"scrollLeft",n=e.nodeName;if("BODY"===n||"HTML"===n){var r=e.ownerDocument.documentElement,o=e.ownerDocument.scrollingElement||r;return o[i]}return e[i]}function m(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=g(t,"top"),r=g(t,"left"),o=i?-1:1;return e.top+=n*o,e.bottom+=n*o,e.left+=r*o,e.right+=r*o,e}function v(e,t){var i="x"===t?"Left":"Top",n="Left"===i?"Right":"Bottom";return parseFloat(e["border"+i+"Width"],10)+parseFloat(e["border"+n+"Width"],10)}function y(e,t,i,n){return Math.max(t["offset"+e],t["scroll"+e],i["client"+e],i["offset"+e],i["scroll"+e],d(10)?parseInt(i["offset"+e])+parseInt(n["margin"+("Height"===e?"Top":"Left")])+parseInt(n["margin"+("Height"===e?"Bottom":"Right")]):0)}function _(e){var t=e.body,i=e.documentElement,n=d(10)&&getComputedStyle(i);return{height:y("Height",t,i,n),width:y("Width",t,i,n)}}var x=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},b=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),w=function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e},T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e};function C(e){return T({},e,{right:e.left+e.width,bottom:e.top+e.height})}function S(e){var t={};try{if(d(10)){t=e.getBoundingClientRect();var i=g(e,"top"),n=g(e,"left");t.top+=i,t.left+=n,t.bottom+=i,t.right+=n}else t=e.getBoundingClientRect()}catch(e){}var r={left:t.left,top:t.top,width:t.right-t.left,height:t.bottom-t.top},o="HTML"===e.nodeName?_(e.ownerDocument):{},a=o.width||e.clientWidth||r.right-r.left,l=o.height||e.clientHeight||r.bottom-r.top,u=e.offsetWidth-a,c=e.offsetHeight-l;if(u||c){var h=s(e);u-=v(h,"x"),c-=v(h,"y"),r.width-=u,r.height-=c}return C(r)}function k(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=d(10),r="HTML"===t.nodeName,o=S(e),a=S(t),u=l(e),c=s(t),h=parseFloat(c.borderTopWidth,10),p=parseFloat(c.borderLeftWidth,10);i&&r&&(a.top=Math.max(a.top,0),a.left=Math.max(a.left,0));var f=C({top:o.top-a.top-h,left:o.left-a.left-p,width:o.width,height:o.height});if(f.marginTop=0,f.marginLeft=0,!n&&r){var g=parseFloat(c.marginTop,10),v=parseFloat(c.marginLeft,10);f.top-=h-g,f.bottom-=h-g,f.left-=p-v,f.right-=p-v,f.marginTop=g,f.marginLeft=v}return(n&&!i?t.contains(u):t===u&&"BODY"!==u.nodeName)&&(f=m(f,t)),f}function P(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=e.ownerDocument.documentElement,n=k(e,i),r=Math.max(i.clientWidth,window.innerWidth||0),o=Math.max(i.clientHeight,window.innerHeight||0),s=t?0:g(i),a=t?0:g(i,"left"),l={top:s-n.top+n.marginTop,left:a-n.left+n.marginLeft,width:r,height:o};return C(l)}function E(e){var t=e.nodeName;if("BODY"===t||"HTML"===t)return!1;if("fixed"===s(e,"position"))return!0;var i=a(e);return!!i&&E(i)}function A(e){if(!e||!e.parentElement||d())return document.documentElement;for(var t=e.parentElement;t&&"none"===s(t,"transform");)t=t.parentElement;return t||document.documentElement}function D(e,t,i,n){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o={top:0,left:0},s=r?A(e):f(e,t);if("viewport"===n)o=P(s,r);else{var u=void 0;"scrollParent"===n?"BODY"===(u=l(a(t))).nodeName&&(u=e.ownerDocument.documentElement):u="window"===n?e.ownerDocument.documentElement:n;var c=k(u,s,r);if("HTML"!==u.nodeName||E(s))o=c;else{var d=_(e.ownerDocument),h=d.height,p=d.width;o.top+=c.top-c.marginTop,o.bottom=h+c.top,o.left+=c.left-c.marginLeft,o.right=p+c.left}}var g="number"==typeof(i=i||0);return o.left+=g?i:i.left||0,o.top+=g?i:i.top||0,o.right-=g?i:i.right||0,o.bottom-=g?i:i.bottom||0,o}function R(e){return e.width*e.height}function M(e,t,i,n,r){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf("auto"))return e;var s=D(i,n,o,r),a={top:{width:s.width,height:t.top-s.top},right:{width:s.right-t.right,height:s.height},bottom:{width:s.width,height:s.bottom-t.bottom},left:{width:t.left-s.left,height:s.height}},l=Object.keys(a).map((function(e){return T({key:e},a[e],{area:R(a[e])})})).sort((function(e,t){return t.area-e.area})),u=l.filter((function(e){var t=e.width,n=e.height;return t>=i.clientWidth&&n>=i.clientHeight})),c=u.length>0?u[0].key:l[0].key,d=e.split("-")[1];return c+(d?"-"+d:"")}function O(e,t,i){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=n?A(t):f(t,i);return k(i,r,n)}function L(e){var t=e.ownerDocument.defaultView.getComputedStyle(e),i=parseFloat(t.marginTop||0)+parseFloat(t.marginBottom||0),n=parseFloat(t.marginLeft||0)+parseFloat(t.marginRight||0);return{width:e.offsetWidth+n,height:e.offsetHeight+i}}function N(e){var t={left:"right",right:"left",bottom:"top",top:"bottom"};return e.replace(/left|right|bottom|top/g,(function(e){return t[e]}))}function $(e,t,i){i=i.split("-")[0];var n=L(e),r={width:n.width,height:n.height},o=-1!==["right","left"].indexOf(i),s=o?"top":"left",a=o?"left":"top",l=o?"height":"width",u=o?"width":"height";return r[s]=t[s]+t[l]/2-n[l]/2,r[a]=i===a?t[a]-n[u]:t[N(a)],r}function I(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function j(e,t,i){return(void 0===i?e:e.slice(0,function(e,t,i){if(Array.prototype.findIndex)return e.findIndex((function(e){return e[t]===i}));var n=I(e,(function(e){return e[t]===i}));return e.indexOf(n)}(e,"name",i))).forEach((function(e){e.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var i=e.function||e.fn;e.enabled&&o(i)&&(t.offsets.popper=C(t.offsets.popper),t.offsets.reference=C(t.offsets.reference),t=i(t,e))})),t}function F(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=O(this.state,this.popper,this.reference,this.options.positionFixed),e.placement=M(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.positionFixed=this.options.positionFixed,e.offsets.popper=$(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",e=j(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function B(e,t){return e.some((function(e){var i=e.name;return e.enabled&&i===t}))}function H(e){for(var t=[!1,"ms","Webkit","Moz","O"],i=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length;n++){var r=t[n],o=r?""+r+i:e;if(void 0!==document.body.style[o])return o}return null}function z(){return this.state.isDestroyed=!0,B(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[H("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function q(e){var t=e.ownerDocument;return t?t.defaultView:window}function U(e,t,i,n){i.updateBound=n,q(e).addEventListener("resize",i.updateBound,{passive:!0});var r=l(e);return function e(t,i,n,r){var o="BODY"===t.nodeName,s=o?t.ownerDocument.defaultView:t;s.addEventListener(i,n,{passive:!0}),o||e(l(s.parentNode),i,n,r),r.push(s)}(r,"scroll",i.updateBound,i.scrollParents),i.scrollElement=r,i.eventsEnabled=!0,i}function W(){this.state.eventsEnabled||(this.state=U(this.reference,this.options,this.state,this.scheduleUpdate))}function V(){var e,t;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(e=this.reference,t=this.state,q(e).removeEventListener("resize",t.updateBound),t.scrollParents.forEach((function(e){e.removeEventListener("scroll",t.updateBound)})),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t))}function X(e){return""!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function Y(e,t){Object.keys(t).forEach((function(i){var n="";-1!==["width","height","top","right","bottom","left"].indexOf(i)&&X(t[i])&&(n="px"),e.style[i]=t[i]+n}))}var G=e&&/Firefox/i.test(navigator.userAgent);function K(e,t,i){var n=I(e,(function(e){return e.name===t})),r=!!n&&e.some((function(e){return e.name===i&&e.enabled&&e.order<n.order}));if(!r){var o="`"+t+"`",s="`"+i+"`";console.warn(s+" modifier is required by "+o+" modifier in order to work, be sure to include it before "+o+"!")}return r}var Q=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],J=Q.slice(3);function Z(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=J.indexOf(e),n=J.slice(i+1).concat(J.slice(0,i));return t?n.reverse():n}var ee="flip",te="clockwise",ie="counterclockwise";function ne(e,t,i,n){var r=[0,0],o=-1!==["right","left"].indexOf(n),s=e.split(/(\+|\-)/).map((function(e){return e.trim()})),a=s.indexOf(I(s,(function(e){return-1!==e.search(/,|\s/)})));s[a]&&-1===s[a].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var l=/\s*,\s*|\s+/,u=-1!==a?[s.slice(0,a).concat([s[a].split(l)[0]]),[s[a].split(l)[1]].concat(s.slice(a+1))]:[s];return(u=u.map((function(e,n){var r=(1===n?!o:o)?"height":"width",s=!1;return e.reduce((function(e,t){return""===e[e.length-1]&&-1!==["+","-"].indexOf(t)?(e[e.length-1]=t,s=!0,e):s?(e[e.length-1]+=t,s=!1,e):e.concat(t)}),[]).map((function(e){return function(e,t,i,n){var r=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),o=+r[1],s=r[2];if(!o)return e;if(0===s.indexOf("%")){var a=void 0;switch(s){case"%p":a=i;break;case"%":case"%r":default:a=n}return C(a)[t]/100*o}if("vh"===s||"vw"===s){return("vh"===s?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*o}return o}(e,r,t,i)}))}))).forEach((function(e,t){e.forEach((function(i,n){X(i)&&(r[t]+=i*("-"===e[n-1]?-1:1))}))})),r}var re={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,i=t.split("-")[0],n=t.split("-")[1];if(n){var r=e.offsets,o=r.reference,s=r.popper,a=-1!==["bottom","top"].indexOf(i),l=a?"left":"top",u=a?"width":"height",c={start:w({},l,o[l]),end:w({},l,o[l]+o[u]-s[u])};e.offsets.popper=T({},s,c[n])}return e}},offset:{order:200,enabled:!0,fn:function(e,t){var i=t.offset,n=e.placement,r=e.offsets,o=r.popper,s=r.reference,a=n.split("-")[0],l=void 0;return l=X(+i)?[+i,0]:ne(i,o,s,a),"left"===a?(o.top+=l[0],o.left-=l[1]):"right"===a?(o.top+=l[0],o.left+=l[1]):"top"===a?(o.left+=l[0],o.top-=l[1]):"bottom"===a&&(o.left+=l[0],o.top+=l[1]),e.popper=o,e},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var i=t.boundariesElement||h(e.instance.popper);e.instance.reference===i&&(i=h(i));var n=H("transform"),r=e.instance.popper.style,o=r.top,s=r.left,a=r[n];r.top="",r.left="",r[n]="";var l=D(e.instance.popper,e.instance.reference,t.padding,i,e.positionFixed);r.top=o,r.left=s,r[n]=a,t.boundaries=l;var u=t.priority,c=e.offsets.popper,d={primary:function(e){var i=c[e];return c[e]<l[e]&&!t.escapeWithReference&&(i=Math.max(c[e],l[e])),w({},e,i)},secondary:function(e){var i="right"===e?"left":"top",n=c[i];return c[e]>l[e]&&!t.escapeWithReference&&(n=Math.min(c[i],l[e]-("right"===e?c.width:c.height))),w({},i,n)}};return u.forEach((function(e){var t=-1!==["left","top"].indexOf(e)?"primary":"secondary";c=T({},c,d[t](e))})),e.offsets.popper=c,e},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,i=t.popper,n=t.reference,r=e.placement.split("-")[0],o=Math.floor,s=-1!==["top","bottom"].indexOf(r),a=s?"right":"bottom",l=s?"left":"top",u=s?"width":"height";return i[a]<o(n[l])&&(e.offsets.popper[l]=o(n[l])-i[u]),i[l]>o(n[a])&&(e.offsets.popper[l]=o(n[a])),e}},arrow:{order:500,enabled:!0,fn:function(e,t){var i;if(!K(e.instance.modifiers,"arrow","keepTogether"))return e;var n=t.element;if("string"==typeof n){if(!(n=e.instance.popper.querySelector(n)))return e}else if(!e.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),e;var r=e.placement.split("-")[0],o=e.offsets,a=o.popper,l=o.reference,u=-1!==["left","right"].indexOf(r),c=u?"height":"width",d=u?"Top":"Left",h=d.toLowerCase(),p=u?"left":"top",f=u?"bottom":"right",g=L(n)[c];l[f]-g<a[h]&&(e.offsets.popper[h]-=a[h]-(l[f]-g)),l[h]+g>a[f]&&(e.offsets.popper[h]+=l[h]+g-a[f]),e.offsets.popper=C(e.offsets.popper);var m=l[h]+l[c]/2-g/2,v=s(e.instance.popper),y=parseFloat(v["margin"+d],10),_=parseFloat(v["border"+d+"Width"],10),x=m-e.offsets.popper[h]-y-_;return x=Math.max(Math.min(a[c]-g,x),0),e.arrowElement=n,e.offsets.arrow=(w(i={},h,Math.round(x)),w(i,p,""),i),e},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(e,t){if(B(e.instance.modifiers,"inner"))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var i=D(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement,e.positionFixed),n=e.placement.split("-")[0],r=N(n),o=e.placement.split("-")[1]||"",s=[];switch(t.behavior){case ee:s=[n,r];break;case te:s=Z(n);break;case ie:s=Z(n,!0);break;default:s=t.behavior}return s.forEach((function(a,l){if(n!==a||s.length===l+1)return e;n=e.placement.split("-")[0],r=N(n);var u=e.offsets.popper,c=e.offsets.reference,d=Math.floor,h="left"===n&&d(u.right)>d(c.left)||"right"===n&&d(u.left)<d(c.right)||"top"===n&&d(u.bottom)>d(c.top)||"bottom"===n&&d(u.top)<d(c.bottom),p=d(u.left)<d(i.left),f=d(u.right)>d(i.right),g=d(u.top)<d(i.top),m=d(u.bottom)>d(i.bottom),v="left"===n&&p||"right"===n&&f||"top"===n&&g||"bottom"===n&&m,y=-1!==["top","bottom"].indexOf(n),_=!!t.flipVariations&&(y&&"start"===o&&p||y&&"end"===o&&f||!y&&"start"===o&&g||!y&&"end"===o&&m);(h||v||_)&&(e.flipped=!0,(h||v)&&(n=s[l+1]),_&&(o=function(e){return"end"===e?"start":"start"===e?"end":e}(o)),e.placement=n+(o?"-"+o:""),e.offsets.popper=T({},e.offsets.popper,$(e.instance.popper,e.offsets.reference,e.placement)),e=j(e.instance.modifiers,e,"flip"))})),e},behavior:"flip",padding:5,boundariesElement:"viewport"},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,i=t.split("-")[0],n=e.offsets,r=n.popper,o=n.reference,s=-1!==["left","right"].indexOf(i),a=-1===["top","left"].indexOf(i);return r[s?"left":"top"]=o[i]-(a?r[s?"width":"height"]:0),e.placement=N(t),e.offsets.popper=C(r),e}},hide:{order:800,enabled:!0,fn:function(e){if(!K(e.instance.modifiers,"hide","preventOverflow"))return e;var t=e.offsets.reference,i=I(e.instance.modifiers,(function(e){return"preventOverflow"===e.name})).boundaries;if(t.bottom<i.top||t.left>i.right||t.top>i.bottom||t.right<i.left){if(!0===e.hide)return e;e.hide=!0,e.attributes["x-out-of-boundaries"]=""}else{if(!1===e.hide)return e;e.hide=!1,e.attributes["x-out-of-boundaries"]=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var i=t.x,n=t.y,r=e.offsets.popper,o=I(e.instance.modifiers,(function(e){return"applyStyle"===e.name})).gpuAcceleration;void 0!==o&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var s=void 0!==o?o:t.gpuAcceleration,a=h(e.instance.popper),l=S(a),u={position:r.position},c=function(e,t){var i=e.offsets,n=i.popper,r=i.reference,o=Math.round,s=Math.floor,a=function(e){return e},l=o(r.width),u=o(n.width),c=-1!==["left","right"].indexOf(e.placement),d=-1!==e.placement.indexOf("-"),h=t?c||d||l%2==u%2?o:s:a,p=t?o:a;return{left:h(l%2==1&&u%2==1&&!d&&t?n.left-1:n.left),top:p(n.top),bottom:p(n.bottom),right:h(n.right)}}(e,window.devicePixelRatio<2||!G),d="bottom"===i?"top":"bottom",p="right"===n?"left":"right",f=H("transform"),g=void 0,m=void 0;if(m="bottom"===d?"HTML"===a.nodeName?-a.clientHeight+c.bottom:-l.height+c.bottom:c.top,g="right"===p?"HTML"===a.nodeName?-a.clientWidth+c.right:-l.width+c.right:c.left,s&&f)u[f]="translate3d("+g+"px, "+m+"px, 0)",u[d]=0,u[p]=0,u.willChange="transform";else{var v="bottom"===d?-1:1,y="right"===p?-1:1;u[d]=m*v,u[p]=g*y,u.willChange=d+", "+p}var _={"x-placement":e.placement};return e.attributes=T({},_,e.attributes),e.styles=T({},u,e.styles),e.arrowStyles=T({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(e){var t,i;return Y(e.instance.popper,e.styles),t=e.instance.popper,i=e.attributes,Object.keys(i).forEach((function(e){!1!==i[e]?t.setAttribute(e,i[e]):t.removeAttribute(e)})),e.arrowElement&&Object.keys(e.arrowStyles).length&&Y(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,i,n,r){var o=O(r,t,e,i.positionFixed),s=M(i.placement,o,t,e,i.modifiers.flip.boundariesElement,i.modifiers.flip.padding);return t.setAttribute("x-placement",s),Y(t,{position:i.positionFixed?"fixed":"absolute"}),i},gpuAcceleration:void 0}}},oe=function(){function e(t,i){var n=this,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};x(this,e),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=r(this.update.bind(this)),this.options=T({},e.Defaults,s),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=t&&t.jquery?t[0]:t,this.popper=i&&i.jquery?i[0]:i,this.options.modifiers={},Object.keys(T({},e.Defaults.modifiers,s.modifiers)).forEach((function(t){n.options.modifiers[t]=T({},e.Defaults.modifiers[t]||{},s.modifiers?s.modifiers[t]:{})})),this.modifiers=Object.keys(this.options.modifiers).map((function(e){return T({name:e},n.options.modifiers[e])})).sort((function(e,t){return e.order-t.order})),this.modifiers.forEach((function(e){e.enabled&&o(e.onLoad)&&e.onLoad(n.reference,n.popper,n.options,e,n.state)})),this.update();var a=this.options.eventsEnabled;a&&this.enableEventListeners(),this.state.eventsEnabled=a}return b(e,[{key:"update",value:function(){return F.call(this)}},{key:"destroy",value:function(){return z.call(this)}},{key:"enableEventListeners",value:function(){return W.call(this)}},{key:"disableEventListeners",value:function(){return V.call(this)}}]),e}();return oe.Utils=("undefined"!=typeof window?window:global).PopperUtils,oe.placements=Q,oe.Defaults=re,oe})),Curtains.prototype._init=function(){this.glCanvas=document.createElement("canvas");var e={alpha:this.alpha,premultipliedAlpha:this.premultipliedAlpha};if(this.gl=this.glCanvas.getContext("webgl2",e),this._isWebGL2=!!this.gl,this.gl||(this.gl=this.glCanvas.getContext("webgl",e)||this.glCanvas.getContext("experimental-webgl",e)),!this.gl)return this.productionMode||console.warn("WebGL context could not be created"),void(this._onErrorCallback&&this._onErrorCallback());this._getExtensions(),this._glState={currentProgramID:null,programs:[],currentBuffersID:0,setDepth:null,frameBufferID:null,scenePassIndex:null},this._contextLostHandler=this._contextLost.bind(this),this.glCanvas.addEventListener("webglcontextlost",this._contextLostHandler,!1),this._contextRestoredHandler=this._contextRestored.bind(this),this.glCanvas.addEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this._scrollManager={handler:this._scroll.bind(this,!0),shouldWatch:this._watchScroll,xOffset:window.pageXOffset,yOffset:window.pageYOffset,lastXDelta:0,lastYDelta:0},this._watchScroll&&window.addEventListener("scroll",this._scrollManager.handler,{passive:!0}),this.setPixelRatio(this.pixelRatio,!1),this._resizeHandler=null,this._autoResize&&(this._resizeHandler=this.resize.bind(this,!0),window.addEventListener("resize",this._resizeHandler,!1)),this._readyToDraw()},Curtains.prototype._getExtensions=function(){this._extensions=[],this._isWebGL2?(this._extensions.EXT_color_buffer_float=this.gl.getExtension("EXT_color_buffer_float"),this._extensions.OES_texture_float_linear=this.gl.getExtension("OES_texture_float_linear"),this._extensions.WEBGL_lose_context=this.gl.getExtension("WEBGL_lose_context")):(this._extensions.OES_vertex_array_object=this.gl.getExtension("OES_vertex_array_object"),this._extensions.OES_texture_float=this.gl.getExtension("OES_texture_float"),this._extensions.OES_texture_float_linear=this.gl.getExtension("OES_texture_float_linear"),this._extensions.OES_texture_half_float=this.gl.getExtension("OES_texture_half_float"),this._extensions.OES_texture_half_float_linear=this.gl.getExtension("OES_texture_half_float_linear"),this._extensions.OES_element_index_uint=this.gl.getExtension("OES_element_index_uint"),this._extensions.OES_standard_derivatives=this.gl.getExtension("OES_standard_derivatives"),this._extensions.EXT_sRGB=this.gl.getExtension("EXT_sRGB"),this._extensions.WEBGL_depth_texture=this.gl.getExtension("WEBGL_depth_texture"),this._extensions.WEBGL_draw_buffers=this.gl.getExtension("WEBGL_draw_buffers"),this._extensions.WEBGL_lose_context=this.gl.getExtension("WEBGL_lose_context"))},Curtains.prototype.setPixelRatio=function(e,t){this.pixelRatio=parseFloat(Math.max(e,1))||1,this.resize(t)},Curtains.prototype._setSize=function(){var e=this.container.getBoundingClientRect();this._boundingRect={width:e.width*this.pixelRatio,height:e.height*this.pixelRatio,top:e.top*this.pixelRatio,left:e.left*this.pixelRatio};var t=!!navigator.userAgent.match(/Version\/[\d\.]+.*Safari/),i=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream;t&&i&&(this._boundingRect.top=function(e){for(var t=0;e&&!isNaN(e.offsetTop);)t+=e.offsetTop-e.scrollTop,e=e.offsetParent;return t}(this.container)*this.pixelRatio),this.glCanvas.style.width=Math.floor(this._boundingRect.width/this.pixelRatio)+"px",this.glCanvas.style.height=Math.floor(this._boundingRect.height/this.pixelRatio)+"px",this.glCanvas.width=Math.floor(this._boundingRect.width*this._renderingScale/this.pixelRatio),this.glCanvas.height=Math.floor(this._boundingRect.height*this._renderingScale/this.pixelRatio),this.gl.viewport(0,0,this.gl.drawingBufferWidth,this.gl.drawingBufferHeight),this._scrollManager.shouldWatch&&(this._scrollManager.xOffset=window.pageXOffset,this._scrollManager.yOffset=window.pageYOffset)},Curtains.prototype.getBoundingRect=function(){return this._boundingRect},Curtains.prototype.resize=function(e){this._setSize();for(var t=0;t<this.planes.length;t++)this.planes[t]._canDraw&&this.planes[t].planeResize();for(t=0;t<this.shaderPasses.length;t++)this.shaderPasses[t]._canDraw&&this.shaderPasses[t].planeResize();for(t=0;t<this.renderTargets.length;t++)this.renderTargets[t].resize();this.needRender();var i=this;setTimeout((function(){i._onAfterResizeCallback&&e&&i._onAfterResizeCallback()}),0)},Curtains.prototype._scroll=function(){var e={x:window.pageXOffset,y:window.pageYOffset};if(this.updateScrollValues(e.x,e.y),this._scrollManager.shouldWatch){for(var t=0;t<this.planes.length;t++)this.planes[t].watchScroll&&this.planes[t].updateScrollPosition();this.needRender()}var i=this;setTimeout((function(){i._onScrollCallback&&i._onScrollCallback()}),0)},Curtains.prototype.updateScrollValues=function(e,t){var i=this._scrollManager.xOffset;this._scrollManager.xOffset=e,this._scrollManager.lastXDelta=i-this._scrollManager.xOffset;var n=this._scrollManager.yOffset;this._scrollManager.yOffset=t,this._scrollManager.lastYDelta=n-this._scrollManager.yOffset},Curtains.prototype.getScrollDeltas=function(){return{x:this._scrollManager.lastXDelta,y:this._scrollManager.lastYDelta}},Curtains.prototype.getScrollValues=function(){return{x:this._scrollManager.xOffset,y:this._scrollManager.yOffset}},Curtains.prototype.enableDrawing=function(){this._drawingEnabled=!0},Curtains.prototype.disableDrawing=function(){this._drawingEnabled=!1},Curtains.prototype.needRender=function(){this._forceRender=!0},Curtains.prototype._contextLost=function(e){e.preventDefault(),this._glState={currentProgramID:null,programs:[],currentBuffersID:0,setDepth:null,frameBufferID:null,scenePassIndex:null},this._animationFrameID&&window.cancelAnimationFrame(this._animationFrameID);var t=this;setTimeout((function(){t._onContextLostCallback&&t._onContextLostCallback()}),0)},Curtains.prototype.restoreContext=function(){this.gl&&this._extensions.WEBGL_lose_context?this._extensions.WEBGL_lose_context.restoreContext():this.productionMode||(this.gl?this._extensions.WEBGL_lose_context||console.warn("Could not restore context because the restore context extension is not defined"):console.warn("Could not restore context because the context is not defined"))},Curtains.prototype._contextRestored=function(){var e=this._drawingEnabled;this._drawingEnabled=!1,this._getExtensions(),this._setBlendFunc(),this._setDepth(!0),this._drawStacks={opaque:{length:0,programs:[]},transparent:{length:0,programs:[]},renderPasses:[],scenePasses:[]},this._imageCache=[];for(var t=0;t<this.renderTargets.length;t++)this.renderTargets[t]._restoreContext();for(t=0;t<this.planes.length;t++)this.planes[t]._restoreContext();for(t=0;t<this.shaderPasses.length;t++)this.shaderPasses[t]._restoreContext();this._onContextRestoredCallback&&this._onContextRestoredCallback(),this._drawingEnabled=e,this._autoRender&&this._animate()},Curtains.prototype.dispose=function(){for(this._isDestroying=!0;this.planes.length>0;)this.removePlane(this.planes[0]);for(;this.shaderPasses.length>0;)this.removeShaderPass(this.shaderPasses[0]);for(;this.renderTargets.length>0;)this.removeRenderTarget(this.renderTargets[0]);for(var e=0;e<this._glState.programs.length;e++){var t=this._glState.programs[e];this.gl.deleteShader(t.fragmentShader),this.gl.deleteShader(t.vertexShader),this.gl.deleteProgram(t.program)}this._glState={currentProgramID:null,programs:[],currentBuffersID:0,setDepth:null,frameBufferID:null,scenePassIndex:null};var i=this,n=setInterval((function(){0===i.planes.length&&0===i.shaderPasses.length&&0===i.renderTargets.length&&(clearInterval(n),i._clear(),i._animationFrameID&&window.cancelAnimationFrame(i._animationFrameID),this._resizeHandler&&window.removeEventListener("resize",i._resizeHandler,!1),this._watchScroll&&window.removeEventListener("scroll",this._scrollManager.handler,{passive:!0}),i.glCanvas.removeEventListener("webgllost",i._contextLostHandler,!1),i.glCanvas.removeEventListener("webglrestored",i._contextRestoredHandler,!1),i.gl&&i._extensions.WEBGL_lose_context&&i._extensions.WEBGL_lose_context.loseContext(),i.glCanvas.width=i.glCanvas.width,i.gl=null,i.container.removeChild(i.glCanvas),i.container=null,i.glCanvas=null)}),100)},Curtains.prototype._createShader=function(e,t){var i=this.gl.createShader(t);if(this.gl.shaderSource(i,e),this.gl.compileShader(i),!this.productionMode&&!this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS)){for(var n=t===this.gl.VERTEX_SHADER?"vertex shader":"fragment shader",r=this.gl.getShaderSource(i).split("\n"),o=0;o<r.length;o++)r[o]=o+1+": "+r[o];return r=r.join("\n"),console.warn("Errors occurred while compiling the",n,":\n",this.gl.getShaderInfoLog(i)),console.error(r),null}return i},Curtains.prototype._isEqualShader=function(e,t){var i=!1;return 0===e.localeCompare(t)&&(i=!0),i},Curtains.prototype._setupProgram=function(e,t,i){for(var n={},r=0;r<this._glState.programs.length;r++)if(this._isEqualShader(this._glState.programs[r].vsCode,e)&&this._isEqualShader(this._glState.programs[r].fsCode,t)){n=this._glState.programs[r];break}if(n.program){if(i.shareProgram)return n;var o=this._useExistingShaders(n);return this._createProgram(o,i._type,i)}return!!(o=this._useNewShaders(e,t))&&this._createProgram(o,i._type,i)},Curtains.prototype._useExistingShaders=function(e){return{vs:{vertexShader:e.vertexShader,vsCode:e.vsCode},fs:{fragmentShader:e.fragmentShader,fsCode:e.fsCode}}},Curtains.prototype._useNewShaders=function(e,t){var i=!0,n=this._createShader(e,this.gl.VERTEX_SHADER),r=this._createShader(t,this.gl.FRAGMENT_SHADER);return n&&r||(this.productionMode||console.warn("Unable to find or compile the vertex or fragment shader"),i=!1),i?{vs:{vertexShader:n,vsCode:e},fs:{fragmentShader:r,fsCode:t}}:i},Curtains.prototype._createProgram=function(e,t,i){var n=this.gl,r=!0,o=n.createProgram();if(r&&(n.attachShader(o,e.vs.vertexShader),n.attachShader(o,e.fs.fragmentShader),n.linkProgram(o),this.productionMode||n.getProgramParameter(o,n.LINK_STATUS)||(console.warn("Unable to initialize the shader program."),r=!1)),r){var s={id:this._glState.programs.length,vsCode:e.vs.vsCode,vertexShader:e.vs.vertexShader,fsCode:e.fs.fsCode,fragmentShader:e.fs.fragmentShader,program:o,type:t};return"Plane"===t&&(this._drawStacks.opaque.programs["program-"+s.id]=[],this._drawStacks.transparent.programs["program-"+s.id]=[]),this._glState.programs.push(s),s}return r},Curtains.prototype._useProgram=function(e){null!==this._glState.currentProgramID&&this._glState.currentProgramID===e.id||(this.gl.useProgram(e.program),this._glState.currentProgramID=e.id)},Curtains.prototype.addPlane=function(e,t){if(this.gl){if(!e||0===e.length)return this.productionMode||console.warn("The html element you specified does not currently exists in the DOM"),this._onErrorCallback&&this._onErrorCallback(),!1;var i=new Curtains.Plane(this,e,t);return i._usedProgram?this.planes.push(i):i=!1,i}return this.productionMode||console.warn("Unable to create a plane. The WebGl context couldn't be created"),this._onErrorCallback&&this._onErrorCallback(),null},Curtains.prototype.removePlane=function(e){var t;e._canDraw=!1,e&&e._dispose();for(var i=0;i<this.planes.length;i++)e._uuid===this.planes[i]._uuid&&(t=i);for(e=null,this.planes[t]=null,this.planes.splice(t,1),i=0;i<this._glState.programs.length;i++)this._drawStacks.opaque.programs["program-"+this._glState.programs[i].id]=[],this._drawStacks.transparent.programs["program-"+ +this._glState.programs[i].id]=[];for(this._drawStacks.opaque.length=0,this._drawStacks.transparent.length=0,i=0;i<this.planes.length;i++)this.planes[i].index=i,this._stackPlane(this.planes[i]);this.gl&&this._clear(),this._glState.currentBuffersID=0},Curtains.prototype._stackPlane=function(e){var t=e._transparent?"transparent":"opaque";"transparent"===t?this._drawStacks[t].programs["program-"+e._usedProgram.id].unshift(e.index):this._drawStacks[t].programs["program-"+e._usedProgram.id].push(e.index),this._drawStacks[t].length++},Curtains.prototype.addRenderTarget=function(e){return this.gl?new Curtains.RenderTarget(this,e):(this.productionMode||console.warn("Unable to create a render target. The WebGl context couldn't be created"),this._onErrorCallback&&this._onErrorCallback(),null)},Curtains.prototype.removeRenderTarget=function(e){if(e._shaderPass)this.productionMode||console.warn("You're trying to remove a render target attached to a shader pass. You should remove that shader pass instead:",e._shaderPass);else{for(var t=0;t<this.planes.length;t++)this.planes[t].target&&this.planes[t].target._uuid===e._uuid&&(this.planes[t].target=null);var i;for(t=0;t<this.renderTargets.length;t++)e._uuid===this.renderTargets[t]._uuid&&(i=t);this.renderTargets[i]=null,this.renderTargets.splice(i,1),e&&e._dispose(),e=null,this.gl&&this._clear(),this._glState.currentBuffersID=0}},Curtains.prototype.addShaderPass=function(e){if(this.gl){var t=new Curtains.ShaderPass(this,e);return t._usedProgram?(e.renderTarget?this._drawStacks.renderPasses.push(t.index):this._drawStacks.scenePasses.push(t.index),this.shaderPasses.push(t)):t=!1,t}return this.productionMode||console.warn("Unable to create a shader pass. The WebGl context couldn't be created"),this._onErrorCallback&&this._onErrorCallback(),null},Curtains.prototype.removeShaderPass=function(e){var t;e._canDraw=!1,e.target&&(e.target._shaderPass=null,this.removeRenderTarget(e.target),e.target=null);for(var i=0;i<this.shaderPasses.length;i++)e._uuid===this.shaderPasses[i]._uuid&&(t=i);for(this.shaderPasses.splice(t,1),this._drawStacks.scenePasses=[],this._drawStacks.renderPasses=[],i=0;i<this.shaderPasses.length;i++)this.shaderPasses[i].index=i,this.shaderPasses[i]._isScenePass?this._drawStacks.scenePasses.push(this.shaderPasses[i].index):this._drawStacks.renderPasses.push(this.shaderPasses[i].index);0===this._drawStacks.scenePasses.length&&(this._glState.scenePassIndex=null),e&&e._dispose(),e=null,this.gl&&this._clear(),this._glState.currentBuffersID=0},Curtains.prototype._clear=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},Curtains.prototype._bindFrameBuffer=function(e,t){var i=null;e?(i=e.index)!==this._glState.frameBufferID&&(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,e._frameBuffer),this.gl.viewport(0,0,e._size.width,e._size.height),e._shouldClear&&!t&&this._clear()):null!==this._glState.frameBufferID&&(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.viewport(0,0,this.gl.drawingBufferWidth,this.gl.drawingBufferHeight)),this._glState.frameBufferID=i},Curtains.prototype._setDepth=function(e){e&&!this._glState.depthTest?(this._glState.depthTest=e,this.gl.enable(this.gl.DEPTH_TEST)):!e&&this._glState.depthTest&&(this._glState.depthTest=e,this.gl.disable(this.gl.DEPTH_TEST))},Curtains.prototype._setBlendFunc=function(){this.gl.enable(this.gl.BLEND),this.premultipliedAlpha?this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA):this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA)},Curtains.prototype._generateUUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16).toUpperCase()}))},Curtains.prototype._multiplyMatrix=function(e,t){var i=new Float32Array(16);return i[0]=t[0]*e[0]+t[1]*e[4]+t[2]*e[8]+t[3]*e[12],i[1]=t[0]*e[1]+t[1]*e[5]+t[2]*e[9]+t[3]*e[13],i[2]=t[0]*e[2]+t[1]*e[6]+t[2]*e[10]+t[3]*e[14],i[3]=t[0]*e[3]+t[1]*e[7]+t[2]*e[11]+t[3]*e[15],i[4]=t[4]*e[0]+t[5]*e[4]+t[6]*e[8]+t[7]*e[12],i[5]=t[4]*e[1]+t[5]*e[5]+t[6]*e[9]+t[7]*e[13],i[6]=t[4]*e[2]+t[5]*e[6]+t[6]*e[10]+t[7]*e[14],i[7]=t[4]*e[3]+t[5]*e[7]+t[6]*e[11]+t[7]*e[15],i[8]=t[8]*e[0]+t[9]*e[4]+t[10]*e[8]+t[11]*e[12],i[9]=t[8]*e[1]+t[9]*e[5]+t[10]*e[9]+t[11]*e[13],i[10]=t[8]*e[2]+t[9]*e[6]+t[10]*e[10]+t[11]*e[14],i[11]=t[8]*e[3]+t[9]*e[7]+t[10]*e[11]+t[11]*e[15],i[12]=t[12]*e[0]+t[13]*e[4]+t[14]*e[8]+t[15]*e[12],i[13]=t[12]*e[1]+t[13]*e[5]+t[14]*e[9]+t[15]*e[13],i[14]=t[12]*e[2]+t[13]*e[6]+t[14]*e[10]+t[15]*e[14],i[15]=t[12]*e[3]+t[13]*e[7]+t[14]*e[11]+t[15]*e[15],i},Curtains.prototype._scaleMatrix=function(e,t,i,n){var r=new Float32Array(16);return r[0]=t*e[0],r[1]=t*e[1],r[2]=t*e[2],r[3]=t*e[3],r[4]=i*e[4],r[5]=i*e[5],r[6]=i*e[6],r[7]=i*e[7],r[8]=n*e[8],r[9]=n*e[9],r[10]=n*e[10],r[11]=n*e[11],e!==r&&(r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r},Curtains.prototype._applyTransformationsMatrixFromOrigin=function(e,t,i,n){var r=new Float32Array(16),o=new Float32Array(4),s=.5*t[0],a=.5*t[1],l=.5*t[2],u=Math.sin(s),c=Math.cos(s),d=Math.sin(a),h=Math.cos(a),p=Math.sin(l),f=Math.cos(l);o[0]=u*h*f-c*d*p,o[1]=c*d*f+u*h*p,o[2]=c*h*p-u*d*f,o[3]=c*h*f+u*d*p;var g=o[0],m=o[1],v=o[2],y=o[3],_=g+g,x=m+m,b=v+v,w=g*_,T=g*x,C=g*b,S=m*x,k=m*b,P=v*b,E=y*_,A=y*x,D=y*b,R=i[0],M=i[1],O=i[2],L=n[0],N=n[1],$=n[2],I=(1-(S+P))*R,j=(T+D)*R,F=(C-A)*R,B=(T-D)*M,H=(1-(w+P))*M,z=(k+E)*M,q=(C+A)*O,U=(k-E)*O,W=(1-(w+S))*O;return r[0]=I,r[1]=j,r[2]=F,r[3]=0,r[4]=B,r[5]=H,r[6]=z,r[7]=0,r[8]=q,r[9]=U,r[10]=W,r[11]=0,r[12]=e[0]+L-(I*L+B*N+q*$),r[13]=e[1]+N-(j*L+H*N+U*$),r[14]=e[2]+$-(F*L+z*N+W*$),r[15]=1,r},Curtains.prototype._applyMatrixToPoint=function(e,t){var i=e[0],n=e[1],r=e[2],o=1/(t[3]*i+t[7]*n+t[11]*r+t[15]);return e[0]=(t[0]*i+t[4]*n+t[8]*r+t[12])*o,e[1]=(t[1]*i+t[5]*n+t[9]*r+t[13])*o,e[2]=(t[2]*i+t[6]*n+t[10]*r+t[14])*o,e},Curtains.prototype._readyToDraw=function(){this.container.appendChild(this.glCanvas),this._setBlendFunc(),this._setDepth(!0),console.log("curtains.js - v5.2"),this._animationFrameID=null,this._autoRender&&this._animate()},Curtains.prototype._animate=function(){this.render(),this._animationFrameID=window.requestAnimationFrame(this._animate.bind(this))},Curtains.prototype._drawPlaneStack=function(e){for(var t in this._drawStacks[e].programs)for(var i=this._drawStacks[e].programs[t],n=0;n<i.length;n++){var r=this.planes[i[n]];r&&r._drawPlane()}},Curtains.prototype.render=function(){if(this._drawingEnabled||this._forceRender){this._forceRender&&(this._forceRender=!1),this._onRenderCallback&&this._onRenderCallback(),this._clear(),this._drawStacks.scenePasses.length>0&&0===this._drawStacks.renderPasses.length&&(this._glState.scenePassIndex=0,this._bindFrameBuffer(this.shaderPasses[this._drawStacks.scenePasses[0]].target)),this._drawPlaneStack("opaque"),this._drawStacks.transparent.length&&(this.gl.clearDepth(1),this.gl.clear(this.gl.DEPTH_BUFFER_BIT),this._drawPlaneStack("transparent")),this._drawStacks.scenePasses.length>0&&this._drawStacks.renderPasses.length>0&&(this._glState.scenePassIndex=0,this._bindFrameBuffer(this.shaderPasses[this._drawStacks.scenePasses[0]].target));for(var e=0;e<this._drawStacks.renderPasses.length;e++)this.shaderPasses[this._drawStacks.renderPasses[e]]._drawPlane();if(this._drawStacks.scenePasses.length>0)for(e=0;e<this._drawStacks.scenePasses.length;e++)this.shaderPasses[this._drawStacks.scenePasses[e]]._drawPlane()}},Curtains.prototype.onAfterResize=function(e){return e&&(this._onAfterResizeCallback=e),this},Curtains.prototype.onError=function(e){return e&&(this._onErrorCallback=e),this},Curtains.prototype.onContextLost=function(e){return e&&(this._onContextLostCallback=e),this},Curtains.prototype.onContextRestored=function(e){return e&&(this._onContextRestoredCallback=e),this},Curtains.prototype.onRender=function(e){return e&&(this._onRenderCallback=e),this},Curtains.prototype.onScroll=function(e){return e&&(this._onScrollCallback=e),this},Curtains.BasePlane=function(e,t,i){this._type=this._type||"BasicPlane",this._curtains=e,this.htmlElement=t,this._uuid=this._curtains._generateUUID(),this._initBasePlane(i)},Curtains.BasePlane.prototype._initBasePlane=function(e){e||(e={}),this._canDraw=!1,this.shareProgram=e.shareProgram||!1,this._updatePerspectiveMatrix=!1,this._updateMVMatrix=!1,this._definition={width:parseInt(e.widthSegments)||1,height:parseInt(e.heightSegments)||1},this._definition.buffersID=this._definition.width*this._definition.height+this._definition.width,this._depthTest=e.depthTest,null!==this._depthTest&&void 0!==this._depthTest||(this._depthTest=!0),this._loadingManager={sourcesLoaded:0,initSourcesToLoad:0,complete:!1};var t=this._setupShaders(e);if(this._usedProgram=this._curtains._setupProgram(t.vertexShaderCode,t.fragmentShaderCode,this),this.images=[],this.videos=[],this.canvases=[],this.textures=[],this.crossOrigin=e.crossOrigin||"anonymous",e.uniforms||(e.uniforms={}),this.uniforms={},e.uniforms)for(var i in e.uniforms){var n=e.uniforms[i];this.uniforms[i]={name:n.name,type:n.type,value:n.value,lastValue:n.value}}return this.userData={},!!this._usedProgram&&(this._shouldDraw=!0,this.visible=!0,this._setAttributes(),this._setDocumentSizes(),this._setUniforms(this.uniforms),this._initializeBuffers(),this._canDraw=!0,this)},Curtains.BasePlane.prototype._getDefaultVS=function(){return this._curtains.productionMode||console.warn("No vertex shader provided, will use a default one"),"precision mediump float;\nattribute vec3 aVertexPosition;attribute vec2 aTextureCoord;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying vec3 vVertexPosition;varying vec2 vTextureCoord;void main() {vTextureCoord = aTextureCoord;vVertexPosition = aVertexPosition;gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);}"},Curtains.BasePlane.prototype._getDefaultFS=function(){return"precision mediump float;\nvarying vec3 vVertexPosition;varying vec2 vTextureCoord;void main( void ) {gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);}"},Curtains.BasePlane.prototype._setupShaders=function(e){var t,i,n=e.vertexShaderID||this.htmlElement.getAttribute("data-vs-id"),r=e.fragmentShaderID||this.htmlElement.getAttribute("data-fs-id");return e.vertexShader||(t=n&&document.getElementById(n)?document.getElementById(n).innerHTML:this._getDefaultVS()),e.fragmentShader||(r&&document.getElementById(r)?i=document.getElementById(r).innerHTML:(this._curtains.productionMode||console.warn("No fragment shader provided, will use a default one"),i=this._getDefaultFS())),{vertexShaderCode:e.vertexShader||t,fragmentShaderCode:e.fragmentShader||i}},Curtains.BasePlane.prototype._handleUniformSetting=function(e,t,i){var n=this._curtains.gl;switch(e){case"1i":n.uniform1i(t,i);break;case"1iv":n.uniform1iv(t,i);break;case"1f":n.uniform1f(t,i);break;case"1fv":n.uniform1fv(t,i);break;case"2i":n.uniform2i(t,i[0],i[1]);break;case"2iv":n.uniform2iv(t,i);break;case"2f":n.uniform2f(t,i[0],i[1]);break;case"2fv":n.uniform2fv(t,i);break;case"3i":n.uniform3i(t,i[0],i[1],i[2]);break;case"3iv":n.uniform3iv(t,i);break;case"3f":n.uniform3f(t,i[0],i[1],i[2]);break;case"3fv":n.uniform3fv(t,i);break;case"4i":n.uniform4i(t,i[0],i[1],i[2],i[3]);break;case"4iv":n.uniform4iv(t,i);break;case"4f":n.uniform4f(t,i[0],i[1],i[2],i[3]);break;case"4fv":n.uniform4fv(t,i);break;case"mat2":n.uniformMatrix2fv(t,!1,i);break;case"mat3":n.uniformMatrix3fv(t,!1,i);break;case"mat4":n.uniformMatrix4fv(t,!1,i);break;default:this._curtains.productionMode||console.warn("This uniform type is not handled : ",e)}},Curtains.BasePlane.prototype._setUniforms=function(e){var t=this._curtains,i=t.gl;if(t._useProgram(this._usedProgram),e)for(var n in e){var r=e[n];r.location=i.getUniformLocation(this._usedProgram.program,r.name),r.type||(Array.isArray(r.value)?4===r.value.length?(r.type="4f",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a 4f (array of 4 floats) uniform type")):3===r.value.length?(r.type="3f",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a 3f (array of 3 floats) uniform type")):2===r.value.length&&(r.type="2f",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a 2f (array of 2 floats) uniform type")):r.value.constructor===Float32Array?16===r.value.length?(r.type="mat4",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a mat4 (4x4 matrix array) uniform type")):9===r.value.length?(r.type="mat3",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a mat3 (3x3 matrix array) uniform type")):4===r.value.length&&(r.type="mat2",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a mat2 (2x2 matrix array) uniform type")):(r.type="1f",t.productionMode||console.warn("No uniform type declared for "+r.name+", applied a 1f (float) uniform type"))),this._handleUniformSetting(r.type,r.location,r.value)}},Curtains.BasePlane.prototype._updateUniforms=function(){if(this.uniforms)for(var e in this.uniforms){var t=this.uniforms[e];this.shareProgram?this._handleUniformSetting(t.type,t.location,t.value):(t.value.length||t.value===t.lastValue?JSON.stringify(t.value)!==JSON.stringify(t.lastValue)&&this._handleUniformSetting(t.type,t.location,t.value):this._handleUniformSetting(t.type,t.location,t.value),t.lastValue=t.value)}},Curtains.BasePlane.prototype._setAttributes=function(){this._attributes||(this._attributes={}),this._attributes.vertexPosition={name:"aVertexPosition",location:this._curtains.gl.getAttribLocation(this._usedProgram.program,"aVertexPosition")},this._attributes.textureCoord={name:"aTextureCoord",location:this._curtains.gl.getAttribLocation(this._usedProgram.program,"aTextureCoord")}},Curtains.BasePlane.prototype._setPlaneVertices=function(){this._geometry={vertices:[]},this._material={uvs:[]};for(var e=0;e<this._definition.height;++e)for(var t=e/this._definition.height,i=0;i<this._definition.width;++i){var n=i/this._definition.width;this._material.uvs.push(n),this._material.uvs.push(t),this._material.uvs.push(0),this._geometry.vertices.push(2*(n-.5)),this._geometry.vertices.push(2*(t-.5)),this._geometry.vertices.push(0),this._material.uvs.push(n+1/this._definition.width),this._material.uvs.push(t),this._material.uvs.push(0),this._geometry.vertices.push(2*(n+1/this._definition.width-.5)),this._geometry.vertices.push(2*(t-.5)),this._geometry.vertices.push(0),this._material.uvs.push(n),this._material.uvs.push(t+1/this._definition.height),this._material.uvs.push(0),this._geometry.vertices.push(2*(n-.5)),this._geometry.vertices.push(2*(t+1/this._definition.height-.5)),this._geometry.vertices.push(0),this._material.uvs.push(n),this._material.uvs.push(t+1/this._definition.height),this._material.uvs.push(0),this._geometry.vertices.push(2*(n-.5)),this._geometry.vertices.push(2*(t+1/this._definition.height-.5)),this._geometry.vertices.push(0),this._material.uvs.push(n+1/this._definition.width),this._material.uvs.push(t),this._material.uvs.push(0),this._geometry.vertices.push(2*(n+1/this._definition.width-.5)),this._geometry.vertices.push(2*(t-.5)),this._geometry.vertices.push(0),this._material.uvs.push(n+1/this._definition.width),this._material.uvs.push(t+1/this._definition.height),this._material.uvs.push(0),this._geometry.vertices.push(2*(n+1/this._definition.width-.5)),this._geometry.vertices.push(2*(t+1/this._definition.height-.5)),this._geometry.vertices.push(0)}},Curtains.BasePlane.prototype._initializeBuffers=function(){var e=this._curtains.gl;this._geometry||this._material||this._setPlaneVertices(),this._attributes&&(this._geometry.bufferInfos={id:e.createBuffer(),itemSize:3,numberOfItems:this._geometry.vertices.length/3},this._material.bufferInfos={id:e.createBuffer(),itemSize:3,numberOfItems:this._material.uvs.length/3},this._curtains._isWebGL2?(this._vao=e.createVertexArray(),e.bindVertexArray(this._vao)):this._curtains._extensions.OES_vertex_array_object&&(this._vao=this._curtains._extensions.OES_vertex_array_object.createVertexArrayOES(),this._curtains._extensions.OES_vertex_array_object.bindVertexArrayOES(this._vao)),e.enableVertexAttribArray(this._attributes.vertexPosition.location),e.bindBuffer(e.ARRAY_BUFFER,this._geometry.bufferInfos.id),e.bufferData(e.ARRAY_BUFFER,new Float32Array(this._geometry.vertices),e.STATIC_DRAW),e.vertexAttribPointer(this._attributes.vertexPosition.location,this._geometry.bufferInfos.itemSize,e.FLOAT,!1,0,0),e.enableVertexAttribArray(this._attributes.textureCoord.location),e.bindBuffer(e.ARRAY_BUFFER,this._material.bufferInfos.id),e.bufferData(e.ARRAY_BUFFER,new Float32Array(this._material.uvs),e.STATIC_DRAW),e.vertexAttribPointer(this._attributes.textureCoord.location,this._material.bufferInfos.itemSize,e.FLOAT,!1,0,0),this._curtains._glState.currentBuffersID=this._definition.buffersID)},Curtains.BasePlane.prototype._restoreContext=function(){var e=this._curtains;if(this._canDraw=!1,this._matrices&&(this._matrices=null),this._attributes=null,this._geometry.bufferInfos=null,this._material.bufferInfos=null,this._usedProgram=e._setupProgram(this._usedProgram.vsCode,this._usedProgram.fsCode,this),this._usedProgram){if(this._setAttributes(),this._setUniforms(this.uniforms),this._initializeBuffers(),"ShaderPass"===this._type)if(this._isScenePass)this.target._frameBuffer=null,this.target._depthBuffer=null,e.renderTargets.splice(this.target.index,1),this.textures.splice(0,1),this._createFrameBuffer(),e._drawStacks.scenePasses.push(this.index);else{var t=e.renderTargets[this.target.index];this.setRenderTarget(t),this.target._shaderPass=t,this.textures[0]._canDraw=!1,this.textures[0]._setTextureUniforms(),this.textures[0].setFromTexture(t.textures[0]),e._drawStacks.renderPasses.push(this.index)}else this.target&&this.setRenderTarget(e.renderTargets[this.target.index]);for(var i="ShaderPass"===this._type?1:0;i<this.textures.length;i++)this.textures[i]._restoreContext();"Plane"===this._type&&(this._initMatrices(),this.setPerspective(this._fov,.1,2*this._fov),this._applyCSSPositions(),e._stackPlane(this)),this._canDraw=!0}},Curtains.BasePlane.prototype._setDocumentSizes=function(){var e=this.htmlElement.getBoundingClientRect();0===e.width&&0===e.height&&(e=this._curtains._boundingRect),this._boundingRect||(this._boundingRect={}),this._boundingRect.document={width:e.width*this._curtains.pixelRatio,height:e.height*this._curtains.pixelRatio,top:e.top*this._curtains.pixelRatio,left:e.left*this._curtains.pixelRatio}},Curtains.BasePlane.prototype.getBoundingRect=function(){return{width:this._boundingRect.document.width,height:this._boundingRect.document.height,top:this._boundingRect.document.top,left:this._boundingRect.document.left,right:this._boundingRect.document.left+this._boundingRect.document.width,bottom:this._boundingRect.document.top+this._boundingRect.document.height}},Curtains.BasePlane.prototype.getWebGLBoundingRect=function(){var e=this._matrices.mVPMatrix;if(e){for(var t=[this._curtains._applyMatrixToPoint([-1,1,0],e),this._curtains._applyMatrixToPoint([1,1,0],e),this._curtains._applyMatrixToPoint([1,-1,0],e),this._curtains._applyMatrixToPoint([-1,-1,0],e)],i=1e6,n=-1e6,r=1e6,o=-1e6,s=0;s<t.length;s++){var a=t[s];a[0]=(a[0]+1)/2,a[1]=1-(a[1]+1)/2,a[0]<i&&(i=a[0]),a[0]>n&&(n=a[0]),a[1]<r&&(r=a[1]),a[1]>o&&(o=a[1])}return{width:(n-i)*this._curtains._boundingRect.width,height:(o-r)*this._curtains._boundingRect.height,top:r*this._curtains._boundingRect.height+this._curtains._boundingRect.top,left:i*this._curtains._boundingRect.width+this._curtains._boundingRect.left,right:i*this._curtains._boundingRect.width+this._curtains._boundingRect.left+(n-i)*this._curtains._boundingRect.width,bottom:r*this._curtains._boundingRect.height+this._curtains._boundingRect.top+(o-r)*this._curtains._boundingRect.height}}return this._boundingRect.document},Curtains.BasePlane.prototype.planeResize=function(){this._setDocumentSizes(),"Plane"===this._type&&(this.setPerspective(this._fov,.1,2*this._fov),this._applyCSSPositions());for(var e=0;e<this.textures.length;e++)this.textures[e].resize();var t=this;setTimeout((function(){t._onAfterResizeCallback&&t._onAfterResizeCallback()}),0)},Curtains.BasePlane.prototype.createTexture=function(e){"string"==typeof e&&(e={sampler:e},this._curtains.productionMode||console.warn("Since v5.1 you should use an object to pass your sampler name with the createTexture() method. Please refer to the docs: https://www.curtainsjs.com/documentation.html (texture concerned: ",e.sampler,")")),e||(e={});var t=new Curtains.Texture(this,{index:this.textures.length,sampler:e.sampler||null,fromTexture:e.fromTexture||null,isFBOTexture:e.isFBOTexture||!1});return this.textures.push(t),t},Curtains.BasePlane.prototype._isPlaneReady=function(){if(!this._loadingManager.complete&&this._loadingManager.sourcesLoaded>=this._loadingManager.initSourcesToLoad){this._loadingManager.complete=!0,this._curtains.needRender();var e=this;setTimeout((function(){e._onReadyCallback&&e._onReadyCallback()}),0)}},Curtains.BasePlane.prototype.loadSources=function(e){for(var t=0;t<e.length;t++)this.loadSource(e[t])},Curtains.BasePlane.prototype.loadSource=function(e){"IMG"===e.tagName.toUpperCase()?this.loadImage(e):"VIDEO"===e.tagName.toUpperCase()?this.loadVideo(e):"CANVAS"===e.tagName.toUpperCase()?this.loadCanvas(e):this._curtains.productionMode||console.warn("this HTML tag could not be converted into a texture:",e.tagName)},Curtains.BasePlane.prototype._sourceLoadError=function(e){this._curtains.productionMode||console.warn("There has been an error loading this source:",e)},Curtains.BasePlane.prototype._getTextureFromCache=function(e){var t=!1;if(this._curtains._imageCache.length>0)for(var i=0;i<this._curtains._imageCache.length;i++){var n=this._curtains._imageCache[i];n.source&&"image"===n.type&&n.source.src===e.src&&(t=n)}return t},Curtains.BasePlane.prototype.loadImage=function(e){var t=e;t.crossOrigin=this.crossOrigin||"anonymous",t.sampler=e.getAttribute("data-sampler")||null;var i=this._getTextureFromCache(e);if(i)return this.createTexture({sampler:t.sampler,fromTexture:i}),void this.images.push(i.source);var n=this.createTexture({sampler:t.sampler});n._onSourceLoadedHandler=n._onSourceLoaded.bind(n,t),t.complete?n._onSourceLoaded(t):(t.addEventListener("load",n._onSourceLoadedHandler,!1),t.addEventListener("error",this._sourceLoadError.bind(this,t),!1)),this.images.push(t)},Curtains.BasePlane.prototype.loadVideo=function(e){var t=e;t.preload=!0,t.muted=!0,t.loop=!0,t.sampler=e.getAttribute("data-sampler")||null,t.crossOrigin=this.crossOrigin||"anonymous";var i=this.createTexture({sampler:t.sampler});i._onSourceLoadedHandler=i._onVideoLoadedData.bind(i,t),t.addEventListener("canplaythrough",i._onSourceLoadedHandler,!1),t.addEventListener("error",this._sourceLoadError.bind(this,t),!1),t.readyState>=t.HAVE_FUTURE_DATA&&i._onSourceLoaded(t),t.load(),this.videos.push(t)},Curtains.BasePlane.prototype.loadCanvas=function(e){var t=e;t.sampler=e.getAttribute("data-sampler")||null;var i=this.createTexture({sampler:t.sampler});this.canvases.push(t),i._onSourceLoaded(t)},Curtains.BasePlane.prototype.loadImages=function(e){for(var t=0;t<e.length;t++)this.loadImage(e[t])},Curtains.BasePlane.prototype.loadVideos=function(e){for(var t=0;t<e.length;t++)this.loadVideo(e[t])},Curtains.BasePlane.prototype.loadCanvases=function(e){for(var t=0;t<e.length;t++)this.loadCanvas(e[t])},Curtains.BasePlane.prototype.playVideos=function(){for(var e=0;e<this.textures.length;e++){var t=this.textures[e];if("video"===t.type){var i=t.source.play(),n=this;void 0!==i&&i.catch((function(e){n._curtains.productionMode||console.warn("Could not play the video : ",e)}))}}},Curtains.BasePlane.prototype.mouseToPlaneCoords=function(e,t){var i=this.scale?this.scale:{x:1,y:1},n=(this._boundingRect.document.width-this._boundingRect.document.width*i.x)/2,r=(this._boundingRect.document.height-this._boundingRect.document.height*i.y)/2,o=this._boundingRect.document.width*i.x/this._curtains.pixelRatio,s=this._boundingRect.document.height*i.y/this._curtains.pixelRatio,a=(this._boundingRect.document.top+r)/this._curtains.pixelRatio;return{x:(e-(this._boundingRect.document.left+n)/this._curtains.pixelRatio)/o*2-1,y:1-(t-a)/s*2}},Curtains.BasePlane.prototype._bindPlaneBuffers=function(){var e=this._curtains,t=e.gl;this._vao?e._isWebGL2?e.gl.bindVertexArray(this._vao):e._extensions.OES_vertex_array_object.bindVertexArrayOES(this._vao):(t.enableVertexAttribArray(this._attributes.vertexPosition.location),t.bindBuffer(t.ARRAY_BUFFER,this._geometry.bufferInfos.id),t.vertexAttribPointer(this._attributes.vertexPosition.location,this._geometry.bufferInfos.itemSize,t.FLOAT,!1,0,0),t.enableVertexAttribArray(this._attributes.textureCoord.location),t.bindBuffer(t.ARRAY_BUFFER,this._material.bufferInfos.id),t.vertexAttribPointer(this._attributes.textureCoord.location,this._material.bufferInfos.itemSize,t.FLOAT,!1,0,0)),e._glState.currentBuffersID=this._definition.buffersID},Curtains.BasePlane.prototype._bindPlaneTexture=function(e){var t=this._curtains.gl;e._canDraw&&(t.activeTexture(t.TEXTURE0+e.index),t.bindTexture(t.TEXTURE_2D,e._sampler.texture))},Curtains.BasePlane.prototype.setRenderTarget=function(e){e&&e._type&&"RenderTarget"===e._type?this.target=e:this._curtains.productionMode||console.warn("Could not set the render target because the argument passed is not a RenderTarget class object",e)},Curtains.BasePlane.prototype._drawPlane=function(){var e=this._curtains,t=e.gl;if(this._canDraw&&(e._setDepth(this._depthTest),this._onRenderCallback&&this._onRenderCallback(),"ShaderPass"===this._type?this._isScenePass?e._glState.scenePassIndex+1<e._drawStacks.scenePasses.length?(e._bindFrameBuffer(e.shaderPasses[e._drawStacks.scenePasses[e._glState.scenePassIndex+1]].target),e._glState.scenePassIndex++):e._bindFrameBuffer(null):null===e._glState.scenePassIndex&&e._bindFrameBuffer(null):(this.target?e._bindFrameBuffer(this.target):null===e._glState.scenePassIndex&&e._bindFrameBuffer(null),this._setPerspectiveMatrix(),this._setMVMatrix()),this._shouldDraw&&this.visible)){e._useProgram(this._usedProgram),this._updateUniforms(),(e._glState.currentBuffersID!==this._definition.buffersID||this.target)&&this._bindPlaneBuffers();for(var i=0;i<this.textures.length;i++)this.textures[i]._drawTexture();t.drawArrays(t.TRIANGLES,0,this._geometry.bufferInfos.numberOfItems),this._onAfterRenderCallback&&this._onAfterRenderCallback()}},Curtains.BasePlane.prototype._dispose=function(){var e=this._curtains.gl;if(e){this._vao&&(this._curtains._isWebGL2?e.deleteVertexArray(this._vao):this._curtains._extensions.OES_vertex_array_object.deleteVertexArrayOES(this._vao)),this._geometry&&(e.bindBuffer(e.ARRAY_BUFFER,this._geometry.bufferInfos.id),e.bufferData(e.ARRAY_BUFFER,1,e.STATIC_DRAW),e.deleteBuffer(this._geometry.bufferInfos.id),this._geometry=null),this._material&&(e.bindBuffer(e.ARRAY_BUFFER,this._material.bufferInfos.id),e.bufferData(e.ARRAY_BUFFER,1,e.STATIC_DRAW),e.deleteBuffer(this._material.bufferInfos.id),this._material=null),this.target&&"ShaderPass"===this._type&&(this._curtains.removeRenderTarget(this.target),this.textures.shift());for(var t=0;t<this.textures.length;t++)this.textures[t]._dispose();this.textures=null}},Curtains.BasePlane.prototype.onAfterResize=function(e){return e&&(this._onAfterResizeCallback=e),this},Curtains.BasePlane.prototype.onLoading=function(e){return e&&(this._onPlaneLoadingCallback=e),this},Curtains.BasePlane.prototype.onReady=function(e){return e&&(this._onReadyCallback=e),this},Curtains.BasePlane.prototype.onRender=function(e){return e&&(this._onRenderCallback=e),this},Curtains.BasePlane.prototype.onAfterRender=function(e){return e&&(this._onAfterRenderCallback=e),this},Curtains.Plane=function(e,t,i){this._type="Plane",Curtains.BasePlane.call(this,e,t,i),this.index=this._curtains.planes.length,this._canDraw=!1,this.target=null,i||(i={}),this._setInitParams(i),this._usedProgram?(this._curtains._stackPlane(this),this._initPositions(),this._initSources()):this._curtains._onErrorCallback&&this._curtains._onErrorCallback()},Curtains.Plane.prototype=Object.create(Curtains.BasePlane.prototype),Curtains.Plane.prototype.constructor=Curtains.Plane,Curtains.Plane.prototype._setInitParams=function(e){this.alwaysDraw=e.alwaysDraw||!1,this._transparent=e.transparent||!1;var t={top:0,right:0,bottom:0,left:0};e.drawCheckMargins&&(t=e.drawCheckMargins),this.drawCheckMargins=t,this._initTransformValues(),this.autoloadSources=e.autoloadSources,null!==this.autoloadSources&&void 0!==this.autoloadSources||(this.autoloadSources=!0),this._fov=e.fov||75,this._nearPlane=.1,this._farPlane=2*this._fov,null===e.watchScroll||void 0===e.watchScroll?this.watchScroll=this._curtains._watchScroll:this.watchScroll=e.watchScroll||!1,this.watchScroll&&(this._curtains._scrollManager.shouldWatch=!0)},Curtains.Plane.prototype._initTransformValues=function(e){this.rotation={x:0,y:0,z:0},this.relativeTranslation={x:0,y:0},this._translation={x:0,y:0,z:0},this.scale={x:1,y:1},this.transformOrigin={x:.5,y:.5}},Curtains.Plane.prototype._initPositions=function(){this._initMatrices(),this.setPerspective(this._fov,.1,2*this._fov),this._applyCSSPositions()},Curtains.Plane.prototype._initSources=function(){if(this.autoloadSources){for(var e=[],t=0;t<this.htmlElement.getElementsByTagName("img").length;t++)e.push(this.htmlElement.getElementsByTagName("img")[t]);e.length>0&&this.loadSources(e);var i=[];for(t=0;t<this.htmlElement.getElementsByTagName("video").length;t++)i.push(this.htmlElement.getElementsByTagName("video")[t]);i.length>0&&this.loadSources(i);var n=[];for(t=0;t<this.htmlElement.getElementsByTagName("canvas").length;t++)n.push(this.htmlElement.getElementsByTagName("canvas")[t]);n.length>0&&this.loadSources(n),this._loadingManager.initSourcesToLoad=e.length+i.length+n.length}0===this._loadingManager.initSourcesToLoad&&(this._isPlaneReady(),this._curtains.productionMode||console.warn("This plane does not contain any image, video or canvas element. You may want to add some later with the loadSource() or loadSources() method.")),this._canDraw=!0,this._curtains.needRender(),this.alwaysDraw||this._shouldDrawCheck()},Curtains.Plane.prototype._initMatrices=function(){var e=this._curtains.gl;this._matrices={mvMatrix:{name:"uMVMatrix",matrix:new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),location:e.getUniformLocation(this._usedProgram.program,"uMVMatrix")},pMatrix:{name:"uPMatrix",matrix:new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),location:e.getUniformLocation(this._usedProgram.program,"uPMatrix")}}},Curtains.Plane.prototype.resetPlane=function(e){this._initTransformValues(),null!==e&&e?(this.htmlElement=e,this.updatePosition()):e||this._curtains.productionMode||console.warn("You are trying to reset a plane with a HTML element that does not exist. The old HTML element will be kept instead.")},Curtains.Plane.prototype._setComputedSizes=function(){var e=this._curtains,t=this._boundingRect.document.width/2+this._boundingRect.document.left,i=this._boundingRect.document.height/2+this._boundingRect.document.top,n=e._boundingRect.width/2+e._boundingRect.left,r=e._boundingRect.height/2+e._boundingRect.top;this._boundingRect.computed={width:this._boundingRect.document.width/e._boundingRect.width,height:this._boundingRect.document.height/e._boundingRect.height,top:(r-i)/e._boundingRect.height,left:(t-n)/e._boundingRect.height}},Curtains.Plane.prototype._setPerspectiveMatrix=function(){if(this._updatePerspectiveMatrix){var e=this._curtains._boundingRect.width/this._curtains._boundingRect.height;this._matrices.pMatrix.matrix=[this._fov/e,0,0,0,0,this._fov,0,0,0,0,(this._nearPlane+this._farPlane)*(1/(this._nearPlane-this._farPlane)),-1,0,0,this._nearPlane*this._farPlane*(1/(this._nearPlane-this._farPlane))*2,0]}(this.shareProgram||!this.shareProgram&&this._updatePerspectiveMatrix)&&(this._curtains._useProgram(this._usedProgram),this._curtains.gl.uniformMatrix4fv(this._matrices.pMatrix.location,!1,this._matrices.pMatrix.matrix)),this._updatePerspectiveMatrix=!1},Curtains.Plane.prototype.setPerspective=function(e,t,i){var n;(n=null===e||"number"!=typeof e?75:parseInt(e))<1?n=1:n>180&&(n=180),n!==this._fov&&(this._fov=n);var r=parseFloat(t)||.1;r!==this._nearPlane&&(this._nearPlane=r);var o=parseFloat(i)||2*n;o!==this._farPlane&&(this._farPlane=o),this._updatePerspectiveMatrix=!0,this._updateMVMatrix=!0},Curtains.Plane.prototype._setMVMatrix=function(){if(this._updateMVMatrix){var e={x:this._curtains._boundingRect.width/this._curtains._boundingRect.height*this._boundingRect.computed.width/2,y:this._boundingRect.computed.height/2},t=[this._translation.x,this._translation.y,this._translation.z-this._fov/2],i=[this.rotation.x,this.rotation.y,this.rotation.z],n=[this.scale.x,this.scale.y,1],r={x:2*this.transformOrigin.x-1,y:-(2*this.transformOrigin.y-1)},o=[r.x*e.x,r.y*e.y,0],s=this._curtains._applyTransformationsMatrixFromOrigin(t,i,n,o),a=new Float32Array([e.x,0,0,0,0,e.y,0,0,0,0,1,0,0,0,0,1]);this._matrices.mvMatrix.matrix=this._curtains._multiplyMatrix(s,a),this._matrices.mVPMatrix=this._curtains._multiplyMatrix(this._matrices.pMatrix.matrix,this._matrices.mvMatrix.matrix),this.alwaysDraw||this._shouldDrawCheck()}(this.shareProgram||!this.shareProgram&&this._updateMVMatrix)&&(this._curtains._useProgram(this._usedProgram),this._curtains.gl.uniformMatrix4fv(this._matrices.mvMatrix.location,!1,this._matrices.mvMatrix.matrix)),this._updateMVMatrix=!1},Curtains.Plane.prototype.setScale=function(e,t){if(e=isNaN(e)?1:parseFloat(e),t=isNaN(t)?1:parseFloat(t),e!==this.scale.x||t!==this.scale.y){this.scale={x:e,y:t};for(var i=0;i<this.textures.length;i++)this.textures[i].resize();this._updateMVMatrix=!0}},Curtains.Plane.prototype.setRotation=function(e,t,i){e=isNaN(e)?0:parseFloat(e),t=isNaN(t)?0:parseFloat(t),i=isNaN(i)?0:parseFloat(i),e===this.rotation.x&&t===this.rotation.y&&i===this.rotation.z||(this.rotation={x:e,y:t,z:i},this._updateMVMatrix=!0)},Curtains.Plane.prototype.setTransformOrigin=function(e,t){e=isNaN(e)?.5:parseFloat(e),t=isNaN(t)?.5:parseFloat(t),e===this.transformOrigin.x&&t===this.transformOrigin.y||(this.transformOrigin={x:e,y:t},this._updateMVMatrix=!0)},Curtains.Plane.prototype._setTranslation=function(){var e={x:0,y:0};0===this.relativeTranslation.x&&0===this.relativeTranslation.y||(e=this._documentToPlaneSpace(this.relativeTranslation.x,this.relativeTranslation.y)),this._translation.x=this._boundingRect.computed.left+e.x,this._translation.y=this._boundingRect.computed.top+e.y,this._updateMVMatrix=!0},Curtains.Plane.prototype.setRelativePosition=function(e,t){e=isNaN(e)?0:parseFloat(e),t=isNaN(t)?0:parseFloat(t),e===this.relativeTranslation.x&&t===this.relativeTranslation.y||(this.relativeTranslation={x:e,y:t},this._setTranslation())},Curtains.Plane.prototype._documentToPlaneSpace=function(e,t){return{x:e/(this._curtains._boundingRect.width/this._curtains.pixelRatio)*(this._curtains._boundingRect.width/this._curtains._boundingRect.height),y:-t/(this._curtains._boundingRect.height/this._curtains.pixelRatio)}},Curtains.Plane.prototype._shouldDrawCheck=function(){var e=this.getWebGLBoundingRect(),t=this;Math.round(e.right)<=this._curtains._boundingRect.left-this.drawCheckMargins.right||Math.round(e.left)>=this._curtains._boundingRect.left+this._curtains._boundingRect.width+this.drawCheckMargins.left||Math.round(e.bottom)<=this._curtains._boundingRect.top-this.drawCheckMargins.bottom||Math.round(e.top)>=this._curtains._boundingRect.top+this._curtains._boundingRect.height+this.drawCheckMargins.top?this._shouldDraw&&(this._shouldDraw=!1,setTimeout((function(){t._onLeaveViewCallback&&t._onLeaveViewCallback()}),0)):(this._shouldDraw||setTimeout((function(){t._onReEnterViewCallback&&t._onReEnterViewCallback()}),0),this._shouldDraw=!0)},Curtains.Plane.prototype._applyCSSPositions=function(){this._setComputedSizes(),this._setTranslation()},Curtains.Plane.prototype.updatePosition=function(){this._setDocumentSizes(),this._applyCSSPositions()},Curtains.Plane.prototype.updateScrollPosition=function(){(this._curtains._scrollManager.lastXDelta||this._curtains._scrollManager.lastYDelta)&&(this._boundingRect.document.top+=this._curtains._scrollManager.lastYDelta*this._curtains.pixelRatio,this._boundingRect.document.left+=this._curtains._scrollManager.lastXDelta*this._curtains.pixelRatio,this._applyCSSPositions())},Curtains.Plane.prototype.enableDepthTest=function(e){this._depthTest=e},Curtains.Plane.prototype.moveToFront=function(){this.enableDepthTest(!1);for(var e=this._transparent?"transparent":"opaque",t=this._curtains._drawStacks[e].programs["program-"+this._usedProgram.id],i=0;i<t.length;i++)this.index===t[i]&&t.splice(i,1);for(var n in"transparent"===e?t.unshift(this.index):t.push(this.index),this._curtains._drawStacks[e])n==="program-"+this._usedProgram.id&&delete this._curtains._drawStacks[e][n];this._curtains._drawStacks[e].programs["program-"+this._usedProgram.id]=t},Curtains.Plane.prototype.onReEnterView=function(e){return e&&(this._onReEnterViewCallback=e),this},Curtains.Plane.prototype.onLeaveView=function(e){return e&&(this._onLeaveViewCallback=e),this},Curtains.RenderTarget=function(e,t){t||(t={}),this._curtains=e,this.index=this._curtains.renderTargets.length,this._type="RenderTarget",this._shaderPass=t.shaderPass||null,this._depth=t.depth||!1,this._shouldClear=t.clear,null!==this._shouldClear&&void 0!==this._shouldClear||(this._shouldClear=!0),this._minSize={width:t.minWidth||1024*this._curtains.pixelRatio,height:t.minHeight||1024*this._curtains.pixelRatio},this.userData={},this._uuid=this._curtains._generateUUID(),this._curtains.renderTargets.push(this),this._initRenderTarget()},Curtains.RenderTarget.prototype._initRenderTarget=function(){this._setSize(),this.textures=[],this._createFrameBuffer()},Curtains.RenderTarget.prototype._setSize=function(){this._shaderPass&&this._shaderPass._isScenePass?this._size={width:this._curtains._boundingRect.width,height:this._curtains._boundingRect.height}:this._size={width:Math.max(this._minSize.width,this._curtains._boundingRect.width),height:Math.max(this._minSize.height,this._curtains._boundingRect.height)}},Curtains.RenderTarget.prototype.resize=function(){this._shaderPass&&this._shaderPass._isScenePass&&(this._setSize(),this._curtains._bindFrameBuffer(this,!0),this._depth&&this._bindDepthBuffer(),this._curtains._bindFrameBuffer(null))},Curtains.RenderTarget.prototype._bindDepthBuffer=function(){var e=this._curtains.gl;this._depthBuffer&&(e.bindRenderbuffer(e.RENDERBUFFER,this._depthBuffer),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,this._size.width,this._size.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,this._depthBuffer))},Curtains.RenderTarget.prototype._createFBOTexture=function(){var e=this._curtains.gl;if(this.textures.length>0)this.textures[0]._canDraw=!1,this.textures[0]._init();else{var t=new Curtains.Texture(this._shaderPass?this._shaderPass:this,{index:this.textures.length,sampler:"uRenderTexture",isFBOTexture:!0});this.textures.push(t)}e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.textures[0]._sampler.texture,0)},Curtains.RenderTarget.prototype._createFrameBuffer=function(){var e=this._curtains.gl;this._frameBuffer=e.createFramebuffer(),this._curtains._bindFrameBuffer(this,!0),this._createFBOTexture(),this._depth&&(this._depthBuffer=e.createRenderbuffer(),this._bindDepthBuffer()),this._curtains._bindFrameBuffer(null)},Curtains.RenderTarget.prototype._restoreContext=function(){this._shaderPass&&this._shaderPass._isScenePass||(this._shaderPass=null,this._createFrameBuffer())},Curtains.RenderTarget.prototype._dispose=function(){this._frameBuffer&&(this._curtains.gl.deleteFramebuffer(this._frameBuffer),this._frameBuffer=null),this._depthBuffer&&(this._curtains.gl.deleteRenderbuffer(this._depthBuffer),this._depthBuffer=null),this.textures[0]._dispose(),this.textures=[]},Curtains.ShaderPass=function(e,t){t||(t={}),t.widthSegments=1,t.heightSegments=1,this._type="ShaderPass",this._isScenePass=!0,Curtains.BasePlane.call(this,e,e.container,t),this.index=this._curtains.shaderPasses.length,this._depth=t.depth||!1,this._shouldClear=t.clear,null!==this._shouldClear&&void 0!==this._shouldClear||(this._shouldClear=!0),this.target=t.renderTarget||null,this.target&&(this._isScenePass=!1,this._shouldClear=this.target._shouldClear),this._usedProgram&&this._initShaderPassPlane()},Curtains.ShaderPass.prototype=Object.create(Curtains.BasePlane.prototype),Curtains.ShaderPass.prototype.constructor=Curtains.ShaderPass,Curtains.ShaderPass.prototype._initShaderPassPlane=function(){if(this.target){this.setRenderTarget(this.target),this.target._shaderPass=this;var e=new Curtains.Texture(this,{index:this.textures.length,sampler:"uRenderTexture",isFBOTexture:!0,fromTexture:this.target.textures[0]});this.textures.push(e)}else this._createFrameBuffer();this._isPlaneReady(),this._canDraw=!0,this._curtains.needRender()},Curtains.ShaderPass.prototype._getDefaultVS=function(e){return"precision mediump float;\nattribute vec3 aVertexPosition;attribute vec2 aTextureCoord;varying vec3 vVertexPosition;varying vec2 vTextureCoord;void main() {vTextureCoord = aTextureCoord;vVertexPosition = aVertexPosition;gl_Position = vec4(aVertexPosition, 1.0);}"},Curtains.ShaderPass.prototype._getDefaultFS=function(e){return"precision mediump float;\nvarying vec3 vVertexPosition;varying vec2 vTextureCoord;uniform sampler2D uRenderTexture;void main( void ) {gl_FragColor = texture2D(uRenderTexture, vTextureCoord);}"},Curtains.ShaderPass.prototype._createFrameBuffer=function(){var e=new Curtains.RenderTarget(this._curtains,{shaderPass:this,clear:this._shouldClear,depth:this._depth});this.setRenderTarget(e),this.textures.push(this.target.textures[0])},Curtains.Texture=function(e,t){if(this._parent=e,this._curtains=e._curtains,this._uuid=this._curtains._generateUUID(),e._usedProgram||t.isFBOTexture)return this.index=e.textures.length,this._sampler={name:t.sampler||"uSampler"+this.index},this._textureMatrix={name:t.sampler?t.sampler+"Matrix":"uTextureMatrix"+this.index,matrix:null},this._willUpdate=!1,this.shouldUpdate=!1,this._forceUpdate=!1,this.scale={x:1,y:1},this.userData={},this.type=t.isFBOTexture?"fboTexture":"empty",this._canDraw=!1,t.fromTexture?(this._initFromTexture=!0,this._parent._usedProgram&&this._setTextureUniforms(),void this.setFromTexture(t.fromTexture)):(this._initFromTexture=!1,this._init(),this);this._curtains.productionMode||console.warn("Unable to create the texture because the program is not valid")},Curtains.Texture.prototype._init=function(){var e=this._curtains.gl;if(this._sampler.texture=e.createTexture(),this._internalFormat=e.RGBA,this._format=e.RGBA,this._textureType=e.UNSIGNED_BYTE,e.bindTexture(e.TEXTURE_2D,this._sampler.texture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),e.pixelStorei(e.UNPACK_ALIGNMENT,4),this._parent._usedProgram){if(this._size={width:this._parent._boundingRect.document.width,height:this._parent._boundingRect.document.height},this._setTextureUniforms(),"empty"===this.type)e.texImage2D(e.TEXTURE_2D,0,this._internalFormat,1,1,0,this._format,this._textureType,new Uint8Array([0,0,0,255])),this._sourceLoaded=!1;else if(!this.source){var t=this._getSizes();this._updateTextureMatrix(t)}}else this._size={width:this._parent._size.width||this._curtains._boundingRect.width,height:this._parent._size.height||this._curtains._boundingRect.height};"fboTexture"===this.type&&(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),this._curtains._isWebGL2&&this._curtains._extensions.EXT_color_buffer_float?(this._internalFormat=e.RGBA16F,this._textureType=e.HALF_FLOAT):this._curtains._extensions.OES_texture_half_float&&(this._textureType=this._curtains._extensions.OES_texture_half_float.HALF_FLOAT_OES),e.texImage2D(e.TEXTURE_2D,0,this._internalFormat,this._size.width,this._size.height,0,this._format,this._textureType,null)),this._canDraw=!0},Curtains.Texture.prototype._setTextureUniforms=function(){this._sampler.location=this._curtains.gl.getUniformLocation(this._parent._usedProgram.program,this._sampler.name),this._textureMatrix.location=this._curtains.gl.getUniformLocation(this._parent._usedProgram.program,this._textureMatrix.name),this._curtains._useProgram(this._parent._usedProgram),this._curtains.gl.uniform1i(this._sampler.location,this.index)},Curtains.Texture.prototype.setFromTexture=function(e){if(e){if(this._sampler.texture=e._sampler.texture,this.source=e.source,this._size=e._size,this._internalFormat=e._internalFormat,this._format=e._format,this._textureType=e._textureType,this._originalTexture=e,this._parent._usedProgram&&(!this._canDraw||!this._textureMatrix.matrix)){var t=this._getSizes();this._updateTextureMatrix(t),this._canDraw=!0}}else this._curtains.productionMode||console.warn("Unable to set the texture from texture:",e)},Curtains.Texture.prototype.setSource=function(e){if(this._parent._usedProgram){this.source=e,"IMG"===e.tagName.toUpperCase()?this.type="image":"VIDEO"===e.tagName.toUpperCase()?(this.type="video",this.shouldUpdate=!0):"CANVAS"===e.tagName.toUpperCase()?(this.type="canvas",this._willUpdate=!0,this.shouldUpdate=!0):this._curtains.productionMode||console.warn("this HTML tag could not be converted into a texture:",e.tagName),this._size={width:this.source.naturalWidth||this.source.width||this.source.videoWidth,height:this.source.naturalHeight||this.source.height||this.source.videoHeight};var t=this._curtains.gl;t.bindTexture(t.TEXTURE_2D,this._sampler.texture),this._curtains.premultipliedAlpha&&t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._curtains.premultipliedAlpha),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),this.resize(),"video"!==this.type&&t.texImage2D(t.TEXTURE_2D,0,this._internalFormat,this._format,this._textureType,e)}else this._curtains.productionMode||console.warn("Unable to set the texture source because the program is not valid")},Curtains.Texture.prototype.needUpdate=function(){this._forceUpdate=!0},Curtains.Texture.prototype._update=function(){var e=this._curtains.gl;this.source?("canvas"!==this.type||this._yFlipped||(this._yFlipped=!0,e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0)),e.texImage2D(e.TEXTURE_2D,0,this._internalFormat,this._format,this._textureType,this.source)):e.texImage2D(e.TEXTURE_2D,0,this._internalFormat,this._size.width,this._size.height,0,this._format,this._textureType,this.source)},Curtains.Texture.prototype._getSizes=function(){var e=this._parent.scale?this._parent.scale:{x:1,y:1},t=this._parent._boundingRect.document.width*e.x,i=this._parent._boundingRect.document.height*e.y,n=this._size.width,r=this._size.height,o=n/r,s=t/i,a=0,l=0;return s>o?l=Math.min(0,i-t*(1/o)):s<o&&(a=Math.min(0,t-i*o)),{parentWidth:t,parentHeight:i,sourceWidth:n,sourceHeight:r,xOffset:a,yOffset:l}},Curtains.Texture.prototype.setScale=function(e,t){e=parseFloat(e)||1,e=Math.max(e,.001),t=parseFloat(t)||1,t=Math.max(t,.001),this.scale={x:e,y:t},this.resize()},Curtains.Texture.prototype.resize=function(){if("fboTexture"===this.type){var e=this._curtains.gl;this._size={width:this._parent._boundingRect.document.width,height:this._parent._boundingRect.document.height},this._originalTexture||(e.bindTexture(e.TEXTURE_2D,this._parent.textures[0]._sampler.texture),e.texImage2D(e.TEXTURE_2D,0,this._internalFormat,this._size.width,this._size.height,0,this._format,this._textureType,this.source))}else this.source&&(this._size={width:this.source.naturalWidth||this.source.width||this.source.videoWidth,height:this.source.naturalHeight||this.source.height||this.source.videoHeight});if(this._parent._usedProgram){var t=this._getSizes();this._updateTextureMatrix(t)}},Curtains.Texture.prototype._updateTextureMatrix=function(e){var t={x:e.parentWidth/(e.parentWidth-e.xOffset),y:e.parentHeight/(e.parentHeight-e.yOffset)};t.x/=this.scale.x,t.y/=this.scale.y;var i=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,(1-t.x)/2,(1-t.y)/2,0,1]);this._textureMatrix.matrix=this._curtains._scaleMatrix(i,t.x,t.y,1),this._curtains._useProgram(this._parent._usedProgram),this._curtains.gl.uniformMatrix4fv(this._textureMatrix.location,!1,this._textureMatrix.matrix)},Curtains.Texture.prototype._onSourceLoaded=function(e){this._parent._loadingManager.sourcesLoaded++,this.setSource(e);var t=this;if(this._sourceLoaded||setTimeout((function(){t._parent._onPlaneLoadingCallback&&t._parent._onPlaneLoadingCallback(t)}),0),this._parent._isPlaneReady(),this._sourceLoaded=!0,"image"===this.type){for(var i=!0,n=0;n<this._curtains._imageCache.length;n++)this._curtains._imageCache[n].source&&this._curtains._imageCache[n].source.src===e.src&&(i=!1);i&&this._curtains._imageCache.push(this)}},Curtains.Texture.prototype._onVideoLoadedData=function(e){this._sourceLoaded||this._onSourceLoaded(e)},Curtains.Texture.prototype._drawTexture=function(){this._parent._bindPlaneTexture(this),"video"===this.type&&this.source&&this.source.readyState>=this.source.HAVE_CURRENT_DATA&&(this._willUpdate=!0),(this._forceUpdate||this._willUpdate&&this.shouldUpdate)&&this._update(),"video"===this.type&&(this._willUpdate=!1),this._forceUpdate=!1},Curtains.Texture.prototype._restoreFromTexture=function(){this._initFromTexture?this._setTextureUniforms():this._init(),this.setFromTexture(this._originalTexture)},Curtains.Texture.prototype._restoreContext=function(){if(this._canDraw=!1,this._originalTexture){var e=this;if(this._originalTexture._canDraw)setTimeout((function(){e._restoreFromTexture()}),0);else var t=setInterval((function(){e._originalTexture._canDraw&&(e._restoreFromTexture(),clearInterval(t))}),16)}else this._init(),this.source&&("image"===this.type&&this._curtains._imageCache.push(this),this.setSource(this.source))},Curtains.Texture.prototype._dispose=function(){"video"===this.type?(this.source.removeEventListener("canplaythrough",this._onSourceLoadedHandler,!1),this.source.removeEventListener("error",this._parent._sourceLoadError,!1),this.source.pause(),this.source.removeAttribute("src"),this.source.load(),this.source=null):"canvas"===this.type?(this.source.width=this.source.width,this.source=null):"image"===this.type&&this._curtains._isDestroying&&(this.source.removeEventListener("load",this._onSourceLoadedHandler,!1),this.source.removeEventListener("error",this._parent._sourceLoadError,!1),this.source=null);var e=this._curtains.gl;e&&!this._originalTexture&&("image"!==this.type||this._curtains._isDestroying)&&(e.activeTexture(e.TEXTURE0+this.index),e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(this._sampler.texture)),this._parent._loadingManager&&this._parent._loadingManager.sourcesLoaded--},
/*!
  * Bootstrap util.js v4.4.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):(e=e||self).Util=t(e.jQuery)}(this,(function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;function t(t){var n=this,r=!1;return e(this).one(i.TRANSITION_END,(function(){r=!0})),setTimeout((function(){r||i.triggerTransitionEnd(n)}),t),this}var i={TRANSITION_END:"bsTransitionEnd",getUID:function(e){do{e+=~~(1e6*Math.random())}while(document.getElementById(e));return e},getSelectorFromElement:function(e){var t=e.getAttribute("data-target");if(!t||"#"===t){var i=e.getAttribute("href");t=i&&"#"!==i?i.trim():""}try{return document.querySelector(t)?t:null}catch(e){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var i=e(t).css("transition-duration"),n=e(t).css("transition-delay"),r=parseFloat(i),o=parseFloat(n);return r||o?(i=i.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(i)+parseFloat(n))):0},reflow:function(e){return e.offsetHeight},triggerTransitionEnd:function(t){e(t).trigger("transitionend")},supportsTransitionEnd:function(){return Boolean("transitionend")},isElement:function(e){return(e[0]||e).nodeType},typeCheckConfig:function(e,t,n){for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)){var o=n[r],s=t[r],a=s&&i.isElement(s)?"element":(l=s,{}.toString.call(l).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(o).test(a))throw new Error(e.toUpperCase()+': Option "'+r+'" provided type "'+a+'" but expected type "'+o+'".')}var l},findShadowRoot:function(e){if(!document.documentElement.attachShadow)return null;if("function"==typeof e.getRootNode){var t=e.getRootNode();return t instanceof ShadowRoot?t:null}return e instanceof ShadowRoot?e:e.parentNode?i.findShadowRoot(e.parentNode):null},jQueryDetection:function(){if(void 0===e)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||t[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};return i.jQueryDetection(),e.fn.emulateTransitionEnd=t,e.event.special[i.TRANSITION_END]={bindType:"transitionend",delegateType:"transitionend",handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}},i})),
/*!
  * Bootstrap collapse.js v4.4.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery"),require("./util.js")):"function"==typeof define&&define.amd?define(["jquery","./util.js"],t):(e=e||self).Collapse=t(e.jQuery,e.Util)}(this,(function(e,t){"use strict";function i(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t;var s="collapse",a="bs.collapse",l=e.fn[s],u={toggle:!0,parent:""},c={toggle:"boolean",parent:"(string|element)"},d={SHOW:"show.bs.collapse",SHOWN:"shown.bs.collapse",HIDE:"hide.bs.collapse",HIDDEN:"hidden.bs.collapse",CLICK_DATA_API:"click.bs.collapse.data-api"},h="show",p="collapse",f="collapsing",g="collapsed",m="width",v="height",y=".show, .collapsing",_='[data-toggle="collapse"]',x=function(){function n(e,i){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(i),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll(_)),r=0,o=n.length;r<o;r++){var s=n[r],a=t.getSelectorFromElement(s),l=[].slice.call(document.querySelectorAll(a)).filter((function(t){return t===e}));null!==a&&l.length>0&&(this._selector=a,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var r,l,x,b=n.prototype;return b.toggle=function(){e(this._element).hasClass(h)?this.hide():this.show()},b.show=function(){var i,r,o=this;if(!this._isTransitioning&&!e(this._element).hasClass(h)&&(this._parent&&0===(i=[].slice.call(this._parent.querySelectorAll(y)).filter((function(e){return"string"==typeof o._config.parent?e.getAttribute("data-parent")===o._config.parent:e.classList.contains(p)}))).length&&(i=null),!(i&&(r=e(i).not(this._selector).data(a))&&r._isTransitioning))){var s=e.Event(d.SHOW);if(e(this._element).trigger(s),!s.isDefaultPrevented()){i&&(n._jQueryInterface.call(e(i).not(this._selector),"hide"),r||e(i).data(a,null));var l=this._getDimension();e(this._element).removeClass(p).addClass(f),this._element.style[l]=0,this._triggerArray.length&&e(this._triggerArray).removeClass(g).attr("aria-expanded",!0),this.setTransitioning(!0);var u="scroll"+(l[0].toUpperCase()+l.slice(1)),c=t.getTransitionDurationFromElement(this._element);e(this._element).one(t.TRANSITION_END,(function(){e(o._element).removeClass(f).addClass(p).addClass(h),o._element.style[l]="",o.setTransitioning(!1),e(o._element).trigger(d.SHOWN)})).emulateTransitionEnd(c),this._element.style[l]=this._element[u]+"px"}}},b.hide=function(){var i=this;if(!this._isTransitioning&&e(this._element).hasClass(h)){var n=e.Event(d.HIDE);if(e(this._element).trigger(n),!n.isDefaultPrevented()){var r=this._getDimension();this._element.style[r]=this._element.getBoundingClientRect()[r]+"px",t.reflow(this._element),e(this._element).addClass(f).removeClass(p).removeClass(h);var o=this._triggerArray.length;if(o>0)for(var s=0;s<o;s++){var a=this._triggerArray[s],l=t.getSelectorFromElement(a);if(null!==l)e([].slice.call(document.querySelectorAll(l))).hasClass(h)||e(a).addClass(g).attr("aria-expanded",!1)}this.setTransitioning(!0);this._element.style[r]="";var u=t.getTransitionDurationFromElement(this._element);e(this._element).one(t.TRANSITION_END,(function(){i.setTransitioning(!1),e(i._element).removeClass(f).addClass(p).trigger(d.HIDDEN)})).emulateTransitionEnd(u)}}},b.setTransitioning=function(e){this._isTransitioning=e},b.dispose=function(){e.removeData(this._element,a),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},b._getConfig=function(e){return(e=o({},u,{},e)).toggle=Boolean(e.toggle),t.typeCheckConfig(s,e,c),e},b._getDimension=function(){return e(this._element).hasClass(m)?m:v},b._getParent=function(){var i,r=this;t.isElement(this._config.parent)?(i=this._config.parent,void 0!==this._config.parent.jquery&&(i=this._config.parent[0])):i=document.querySelector(this._config.parent);var o='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',s=[].slice.call(i.querySelectorAll(o));return e(s).each((function(e,t){r._addAriaAndCollapsedClass(n._getTargetFromElement(t),[t])})),i},b._addAriaAndCollapsedClass=function(t,i){var n=e(t).hasClass(h);i.length&&e(i).toggleClass(g,!n).attr("aria-expanded",n)},n._getTargetFromElement=function(e){var i=t.getSelectorFromElement(e);return i?document.querySelector(i):null},n._jQueryInterface=function(t){return this.each((function(){var i=e(this),r=i.data(a),s=o({},u,{},i.data(),{},"object"==typeof t&&t?t:{});if(!r&&s.toggle&&/show|hide/.test(t)&&(s.toggle=!1),r||(r=new n(this,s),i.data(a,r)),"string"==typeof t){if(void 0===r[t])throw new TypeError('No method named "'+t+'"');r[t]()}}))},r=n,x=[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return u}}],(l=null)&&i(r.prototype,l),x&&i(r,x),n}();return e(document).on(d.CLICK_DATA_API,_,(function(i){"A"===i.currentTarget.tagName&&i.preventDefault();var n=e(this),r=t.getSelectorFromElement(this),o=[].slice.call(document.querySelectorAll(r));e(o).each((function(){var t=e(this),i=t.data(a)?"toggle":n.data();x._jQueryInterface.call(t,i)}))})),e.fn[s]=x._jQueryInterface,e.fn[s].Constructor=x,e.fn[s].noConflict=function(){return e.fn[s]=l,x._jQueryInterface},x})),
/*!
  * Bootstrap dropdown.js v4.4.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery"),require("popper.js"),require("./util.js")):"function"==typeof define&&define.amd?define(["jquery","popper.js","./util.js"],t):(e=e||self).Dropdown=t(e.jQuery,e.Popper,e.Util)}(this,(function(e,t,i){"use strict";function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,i=i&&i.hasOwnProperty("default")?i.default:i;var a="dropdown",l="bs.dropdown",u="."+l,c=e.fn[a],d=new RegExp("38|40|27"),h={HIDE:"hide"+u,HIDDEN:"hidden"+u,SHOW:"show"+u,SHOWN:"shown"+u,CLICK:"click"+u,CLICK_DATA_API:"click.bs.dropdown.data-api",KEYDOWN_DATA_API:"keydown.bs.dropdown.data-api",KEYUP_DATA_API:"keyup.bs.dropdown.data-api"},p="disabled",f="show",g="dropup",m="dropright",v="dropleft",y="dropdown-menu-right",_="position-static",x='[data-toggle="dropdown"]',b=".dropdown form",w=".dropdown-menu",T=".navbar-nav",C=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",S="top-start",k="top-end",P="bottom-start",E="bottom-end",A="right-start",D="left-start",R={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},M={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},O=function(){function r(e,t){this._element=e,this._popper=null,this._config=this._getConfig(t),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var o,c,b,O=r.prototype;return O.toggle=function(){if(!this._element.disabled&&!e(this._element).hasClass(p)){var t=e(this._menu).hasClass(f);r._clearMenus(),t||this.show(!0)}},O.show=function(n){if(void 0===n&&(n=!1),!(this._element.disabled||e(this._element).hasClass(p)||e(this._menu).hasClass(f))){var o={relatedTarget:this._element},s=e.Event(h.SHOW,o),a=r._getParentFromElement(this._element);if(e(a).trigger(s),!s.isDefaultPrevented()){if(!this._inNavbar&&n){if(void 0===t)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");var l=this._element;"parent"===this._config.reference?l=a:i.isElement(this._config.reference)&&(l=this._config.reference,void 0!==this._config.reference.jquery&&(l=this._config.reference[0])),"scrollParent"!==this._config.boundary&&e(a).addClass(_),this._popper=new t(l,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===e(a).closest(T).length&&e(document.body).children().on("mouseover",null,e.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),e(this._menu).toggleClass(f),e(a).toggleClass(f).trigger(e.Event(h.SHOWN,o))}}},O.hide=function(){if(!this._element.disabled&&!e(this._element).hasClass(p)&&e(this._menu).hasClass(f)){var t={relatedTarget:this._element},i=e.Event(h.HIDE,t),n=r._getParentFromElement(this._element);e(n).trigger(i),i.isDefaultPrevented()||(this._popper&&this._popper.destroy(),e(this._menu).toggleClass(f),e(n).toggleClass(f).trigger(e.Event(h.HIDDEN,t)))}},O.dispose=function(){e.removeData(this._element,l),e(this._element).off(u),this._element=null,this._menu=null,null!==this._popper&&(this._popper.destroy(),this._popper=null)},O.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},O._addEventListeners=function(){var t=this;e(this._element).on(h.CLICK,(function(e){e.preventDefault(),e.stopPropagation(),t.toggle()}))},O._getConfig=function(t){return t=s({},this.constructor.Default,{},e(this._element).data(),{},t),i.typeCheckConfig(a,t,this.constructor.DefaultType),t},O._getMenuElement=function(){if(!this._menu){var e=r._getParentFromElement(this._element);e&&(this._menu=e.querySelector(w))}return this._menu},O._getPlacement=function(){var t=e(this._element.parentNode),i=P;return t.hasClass(g)?(i=S,e(this._menu).hasClass(y)&&(i=k)):t.hasClass(m)?i=A:t.hasClass(v)?i=D:e(this._menu).hasClass(y)&&(i=E),i},O._detectNavbar=function(){return e(this._element).closest(".navbar").length>0},O._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=s({},t.offsets,{},e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},O._getPopperConfig=function(){var e={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(e.modifiers.applyStyle={enabled:!1}),s({},e,{},this._config.popperConfig)},r._jQueryInterface=function(t){return this.each((function(){var i=e(this).data(l);if(i||(i=new r(this,"object"==typeof t?t:null),e(this).data(l,i)),"string"==typeof t){if(void 0===i[t])throw new TypeError('No method named "'+t+'"');i[t]()}}))},r._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var i=[].slice.call(document.querySelectorAll(x)),n=0,o=i.length;n<o;n++){var s=r._getParentFromElement(i[n]),a=e(i[n]).data(l),u={relatedTarget:i[n]};if(t&&"click"===t.type&&(u.clickEvent=t),a){var c=a._menu;if(e(s).hasClass(f)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&e.contains(s,t.target))){var d=e.Event(h.HIDE,u);e(s).trigger(d),d.isDefaultPrevented()||("ontouchstart"in document.documentElement&&e(document.body).children().off("mouseover",null,e.noop),i[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),e(c).removeClass(f),e(s).removeClass(f).trigger(e.Event(h.HIDDEN,u)))}}}},r._getParentFromElement=function(e){var t,n=i.getSelectorFromElement(e);return n&&(t=document.querySelector(n)),t||e.parentNode},r._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||e(t.target).closest(w).length)):d.test(t.which))&&(t.preventDefault(),t.stopPropagation(),!this.disabled&&!e(this).hasClass(p))){var i=r._getParentFromElement(this),n=e(i).hasClass(f);if(n||27!==t.which)if(n&&(!n||27!==t.which&&32!==t.which)){var o=[].slice.call(i.querySelectorAll(C)).filter((function(t){return e(t).is(":visible")}));if(0!==o.length){var s=o.indexOf(t.target);38===t.which&&s>0&&s--,40===t.which&&s<o.length-1&&s++,s<0&&(s=0),o[s].focus()}}else{if(27===t.which){var a=i.querySelector(x);e(a).trigger("focus")}e(this).trigger("click")}}},o=r,b=[{key:"VERSION",get:function(){return"4.4.1"}},{key:"Default",get:function(){return R}},{key:"DefaultType",get:function(){return M}}],(c=null)&&n(o.prototype,c),b&&n(o,b),r}();return e(document).on(h.KEYDOWN_DATA_API,x,O._dataApiKeydownHandler).on(h.KEYDOWN_DATA_API,w,O._dataApiKeydownHandler).on(h.CLICK_DATA_API+" "+h.KEYUP_DATA_API,O._clearMenus).on(h.CLICK_DATA_API,x,(function(t){t.preventDefault(),t.stopPropagation(),O._jQueryInterface.call(e(this),"toggle")})).on(h.CLICK_DATA_API,b,(function(e){e.stopPropagation()})),e.fn[a]=O._jQueryInterface,e.fn[a].Constructor=O,e.fn[a].noConflict=function(){return e.fn[a]=c,O._jQueryInterface},O})),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}((function(e){"use strict";var t,i=window.Slick||{};t=0,(i=function(i,n){var r,o=this;o.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(i),appendDots:e(i),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(t,i){return e('<button type="button" />').text(i+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},o.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(o,o.initials),o.activeBreakpoint=null,o.animType=null,o.animProp=null,o.breakpoints=[],o.breakpointSettings=[],o.cssTransitions=!1,o.focussed=!1,o.interrupted=!1,o.hidden="hidden",o.paused=!0,o.positionProp=null,o.respondTo=null,o.rowCount=1,o.shouldClick=!0,o.$slider=e(i),o.$slidesCache=null,o.transformType=null,o.transitionType=null,o.visibilityChange="visibilitychange",o.windowWidth=0,o.windowTimer=null,r=e(i).data("slick")||{},o.options=e.extend({},o.defaults,n,r),o.currentSlide=o.options.initialSlide,o.originalSettings=o.options,void 0!==document.mozHidden?(o.hidden="mozHidden",o.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(o.hidden="webkitHidden",o.visibilityChange="webkitvisibilitychange"),o.autoPlay=e.proxy(o.autoPlay,o),o.autoPlayClear=e.proxy(o.autoPlayClear,o),o.autoPlayIterator=e.proxy(o.autoPlayIterator,o),o.changeSlide=e.proxy(o.changeSlide,o),o.clickHandler=e.proxy(o.clickHandler,o),o.selectHandler=e.proxy(o.selectHandler,o),o.setPosition=e.proxy(o.setPosition,o),o.swipeHandler=e.proxy(o.swipeHandler,o),o.dragHandler=e.proxy(o.dragHandler,o),o.keyHandler=e.proxy(o.keyHandler,o),o.instanceUid=t++,o.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,o.registerBreakpoints(),o.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},i.prototype.addSlide=i.prototype.slickAdd=function(t,i,n){var r=this;if("boolean"==typeof i)n=i,i=null;else if(i<0||i>=r.slideCount)return!1;r.unload(),"number"==typeof i?0===i&&0===r.$slides.length?e(t).appendTo(r.$slideTrack):n?e(t).insertBefore(r.$slides.eq(i)):e(t).insertAfter(r.$slides.eq(i)):!0===n?e(t).prependTo(r.$slideTrack):e(t).appendTo(r.$slideTrack),r.$slides=r.$slideTrack.children(this.options.slide),r.$slideTrack.children(this.options.slide).detach(),r.$slideTrack.append(r.$slides),r.$slides.each((function(t,i){e(i).attr("data-slick-index",t)})),r.$slidesCache=r.$slides,r.reinit()},i.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},i.prototype.animateSlide=function(t,i){var n={},r=this;r.animateHeight(),!0===r.options.rtl&&!1===r.options.vertical&&(t=-t),!1===r.transformsEnabled?!1===r.options.vertical?r.$slideTrack.animate({left:t},r.options.speed,r.options.easing,i):r.$slideTrack.animate({top:t},r.options.speed,r.options.easing,i):!1===r.cssTransitions?(!0===r.options.rtl&&(r.currentLeft=-r.currentLeft),e({animStart:r.currentLeft}).animate({animStart:t},{duration:r.options.speed,easing:r.options.easing,step:function(e){e=Math.ceil(e),!1===r.options.vertical?(n[r.animType]="translate("+e+"px, 0px)",r.$slideTrack.css(n)):(n[r.animType]="translate(0px,"+e+"px)",r.$slideTrack.css(n))},complete:function(){i&&i.call()}})):(r.applyTransition(),t=Math.ceil(t),!1===r.options.vertical?n[r.animType]="translate3d("+t+"px, 0px, 0px)":n[r.animType]="translate3d(0px,"+t+"px, 0px)",r.$slideTrack.css(n),i&&setTimeout((function(){r.disableTransition(),i.call()}),r.options.speed))},i.prototype.getNavTarget=function(){var t=this.options.asNavFor;return t&&null!==t&&(t=e(t).not(this.$slider)),t},i.prototype.asNavFor=function(t){var i=this.getNavTarget();null!==i&&"object"==typeof i&&i.each((function(){var i=e(this).slick("getSlick");i.unslicked||i.slideHandler(t,!0)}))},i.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},i.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},i.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},i.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},i.prototype.buildArrows=function(){var t=this;!0===t.options.arrows&&(t.$prevArrow=e(t.options.prevArrow).addClass("slick-arrow"),t.$nextArrow=e(t.options.nextArrow).addClass("slick-arrow"),t.slideCount>t.options.slidesToShow?(t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.prependTo(t.options.appendArrows),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.appendTo(t.options.appendArrows),!0!==t.options.infinite&&t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},i.prototype.buildDots=function(){var t,i,n=this;if(!0===n.options.dots&&n.slideCount>n.options.slidesToShow){for(n.$slider.addClass("slick-dotted"),i=e("<ul />").addClass(n.options.dotsClass),t=0;t<=n.getDotCount();t+=1)i.append(e("<li />").append(n.options.customPaging.call(this,n,t)));n.$dots=i.appendTo(n.options.appendDots),n.$dots.find("li").first().addClass("slick-active")}},i.prototype.buildOut=function(){var t=this;t.$slides=t.$slider.children(t.options.slide+":not(.slick-cloned)").addClass("slick-slide"),t.slideCount=t.$slides.length,t.$slides.each((function(t,i){e(i).attr("data-slick-index",t).data("originalStyling",e(i).attr("style")||"")})),t.$slider.addClass("slick-slider"),t.$slideTrack=0===t.slideCount?e('<div class="slick-track"/>').appendTo(t.$slider):t.$slides.wrapAll('<div class="slick-track"/>').parent(),t.$list=t.$slideTrack.wrap('<div class="slick-list"/>').parent(),t.$slideTrack.css("opacity",0),!0!==t.options.centerMode&&!0!==t.options.swipeToSlide||(t.options.slidesToScroll=1),e("img[data-lazy]",t.$slider).not("[src]").addClass("slick-loading"),t.setupInfinite(),t.buildArrows(),t.buildDots(),t.updateDots(),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),!0===t.options.draggable&&t.$list.addClass("draggable")},i.prototype.buildRows=function(){var e,t,i,n,r,o,s,a=this;if(n=document.createDocumentFragment(),o=a.$slider.children(),a.options.rows>0){for(s=a.options.slidesPerRow*a.options.rows,r=Math.ceil(o.length/s),e=0;e<r;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var u=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*s+(t*a.options.slidesPerRow+i);o.get(c)&&u.appendChild(o.get(c))}l.appendChild(u)}n.appendChild(l)}a.$slider.empty().append(n),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},i.prototype.checkResponsive=function(t,i){var n,r,o,s=this,a=!1,l=s.$slider.width(),u=window.innerWidth||e(window).width();if("window"===s.respondTo?o=u:"slider"===s.respondTo?o=l:"min"===s.respondTo&&(o=Math.min(u,l)),s.options.responsive&&s.options.responsive.length&&null!==s.options.responsive){for(n in r=null,s.breakpoints)s.breakpoints.hasOwnProperty(n)&&(!1===s.originalSettings.mobileFirst?o<s.breakpoints[n]&&(r=s.breakpoints[n]):o>s.breakpoints[n]&&(r=s.breakpoints[n]));null!==r?null!==s.activeBreakpoint?(r!==s.activeBreakpoint||i)&&(s.activeBreakpoint=r,"unslick"===s.breakpointSettings[r]?s.unslick(r):(s.options=e.extend({},s.originalSettings,s.breakpointSettings[r]),!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),a=r):(s.activeBreakpoint=r,"unslick"===s.breakpointSettings[r]?s.unslick(r):(s.options=e.extend({},s.originalSettings,s.breakpointSettings[r]),!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),a=r):null!==s.activeBreakpoint&&(s.activeBreakpoint=null,s.options=s.originalSettings,!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t),a=r),t||!1===a||s.$slider.trigger("breakpoint",[s,a])}},i.prototype.changeSlide=function(t,i){var n,r,o=this,s=e(t.currentTarget);switch(s.is("a")&&t.preventDefault(),s.is("li")||(s=s.closest("li")),n=o.slideCount%o.options.slidesToScroll!=0?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,t.data.message){case"previous":r=0===n?o.options.slidesToScroll:o.options.slidesToShow-n,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-r,!1,i);break;case"next":r=0===n?o.options.slidesToScroll:n,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+r,!1,i);break;case"index":var a=0===t.data.index?0:t.data.index||s.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(a),!1,i),s.children().trigger("focus");break;default:return}},i.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},i.prototype.cleanUpEvents=function(){var t=this;t.options.dots&&null!==t.$dots&&(e("li",t.$dots).off("click.slick",t.changeSlide).off("mouseenter.slick",e.proxy(t.interrupt,t,!0)).off("mouseleave.slick",e.proxy(t.interrupt,t,!1)),!0===t.options.accessibility&&t.$dots.off("keydown.slick",t.keyHandler)),t.$slider.off("focus.slick blur.slick"),!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow&&t.$prevArrow.off("click.slick",t.changeSlide),t.$nextArrow&&t.$nextArrow.off("click.slick",t.changeSlide),!0===t.options.accessibility&&(t.$prevArrow&&t.$prevArrow.off("keydown.slick",t.keyHandler),t.$nextArrow&&t.$nextArrow.off("keydown.slick",t.keyHandler))),t.$list.off("touchstart.slick mousedown.slick",t.swipeHandler),t.$list.off("touchmove.slick mousemove.slick",t.swipeHandler),t.$list.off("touchend.slick mouseup.slick",t.swipeHandler),t.$list.off("touchcancel.slick mouseleave.slick",t.swipeHandler),t.$list.off("click.slick",t.clickHandler),e(document).off(t.visibilityChange,t.visibility),t.cleanUpSlideEvents(),!0===t.options.accessibility&&t.$list.off("keydown.slick",t.keyHandler),!0===t.options.focusOnSelect&&e(t.$slideTrack).children().off("click.slick",t.selectHandler),e(window).off("orientationchange.slick.slick-"+t.instanceUid,t.orientationChange),e(window).off("resize.slick.slick-"+t.instanceUid,t.resize),e("[draggable!=true]",t.$slideTrack).off("dragstart",t.preventDefault),e(window).off("load.slick.slick-"+t.instanceUid,t.setPosition)},i.prototype.cleanUpSlideEvents=function(){var t=this;t.$list.off("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.off("mouseleave.slick",e.proxy(t.interrupt,t,!1))},i.prototype.cleanUpRows=function(){var e,t=this;t.options.rows>0&&((e=t.$slides.children().children()).removeAttr("style"),t.$slider.empty().append(e))},i.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},i.prototype.destroy=function(t){var i=this;i.autoPlayClear(),i.touchObject={},i.cleanUpEvents(),e(".slick-cloned",i.$slider).detach(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.$prevArrow.length&&(i.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove()),i.$nextArrow&&i.$nextArrow.length&&(i.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove()),i.$slides&&(i.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each((function(){e(this).attr("style",e(this).data("originalStyling"))})),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.detach(),i.$list.detach(),i.$slider.append(i.$slides)),i.cleanUpRows(),i.$slider.removeClass("slick-slider"),i.$slider.removeClass("slick-initialized"),i.$slider.removeClass("slick-dotted"),i.unslicked=!0,t||i.$slider.trigger("destroy",[i])},i.prototype.disableTransition=function(e){var t=this,i={};i[t.transitionType]="",!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},i.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout((function(){i.disableTransition(e),t.call()}),i.options.speed))},i.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},i.prototype.filterSlides=i.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},i.prototype.focusHandler=function(){var t=this;t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",(function(i){i.stopImmediatePropagation();var n=e(this);setTimeout((function(){t.options.pauseOnFocus&&(t.focussed=n.is(":focus"),t.autoPlay())}),0)}))},i.prototype.getCurrent=i.prototype.slickCurrentSlide=function(){return this.currentSlide},i.prototype.getDotCount=function(){var e=this,t=0,i=0,n=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++n;else for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)n=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else n=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return n-1},i.prototype.getLeft=function(e){var t,i,n,r,o=this,s=0;return o.slideOffset=0,i=o.$slides.first().outerHeight(!0),!0===o.options.infinite?(o.slideCount>o.options.slidesToShow&&(o.slideOffset=o.slideWidth*o.options.slidesToShow*-1,r=-1,!0===o.options.vertical&&!0===o.options.centerMode&&(2===o.options.slidesToShow?r=-1.5:1===o.options.slidesToShow&&(r=-2)),s=i*o.options.slidesToShow*r),o.slideCount%o.options.slidesToScroll!=0&&e+o.options.slidesToScroll>o.slideCount&&o.slideCount>o.options.slidesToShow&&(e>o.slideCount?(o.slideOffset=(o.options.slidesToShow-(e-o.slideCount))*o.slideWidth*-1,s=(o.options.slidesToShow-(e-o.slideCount))*i*-1):(o.slideOffset=o.slideCount%o.options.slidesToScroll*o.slideWidth*-1,s=o.slideCount%o.options.slidesToScroll*i*-1))):e+o.options.slidesToShow>o.slideCount&&(o.slideOffset=(e+o.options.slidesToShow-o.slideCount)*o.slideWidth,s=(e+o.options.slidesToShow-o.slideCount)*i),o.slideCount<=o.options.slidesToShow&&(o.slideOffset=0,s=0),!0===o.options.centerMode&&o.slideCount<=o.options.slidesToShow?o.slideOffset=o.slideWidth*Math.floor(o.options.slidesToShow)/2-o.slideWidth*o.slideCount/2:!0===o.options.centerMode&&!0===o.options.infinite?o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)-o.slideWidth:!0===o.options.centerMode&&(o.slideOffset=0,o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)),t=!1===o.options.vertical?e*o.slideWidth*-1+o.slideOffset:e*i*-1+s,!0===o.options.variableWidth&&(n=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow),t=!0===o.options.rtl?n[0]?-1*(o.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,!0===o.options.centerMode&&(n=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow+1),t=!0===o.options.rtl?n[0]?-1*(o.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,t+=(o.$list.width()-n.outerWidth())/2)),t},i.prototype.getOption=i.prototype.slickGetOption=function(e){return this.options[e]},i.prototype.getNavigableIndexes=function(){var e,t=this,i=0,n=0,r=[];for(!1===t.options.infinite?e=t.slideCount:(i=-1*t.options.slidesToScroll,n=-1*t.options.slidesToScroll,e=2*t.slideCount);i<e;)r.push(i),i=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return r},i.prototype.getSlick=function(){return this},i.prototype.getSlideCount=function(){var t,i,n=this;return i=!0===n.options.centerMode?n.slideWidth*Math.floor(n.options.slidesToShow/2):0,!0===n.options.swipeToSlide?(n.$slideTrack.find(".slick-slide").each((function(r,o){if(o.offsetLeft-i+e(o).outerWidth()/2>-1*n.swipeLeft)return t=o,!1})),Math.abs(e(t).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},i.prototype.goTo=i.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},i.prototype.init=function(t){var i=this;e(i.$slider).hasClass("slick-initialized")||(e(i.$slider).addClass("slick-initialized"),i.buildRows(),i.buildOut(),i.setProps(),i.startLoad(),i.loadSlider(),i.initializeEvents(),i.updateArrows(),i.updateDots(),i.checkResponsive(!0),i.focusHandler()),t&&i.$slider.trigger("init",[i]),!0===i.options.accessibility&&i.initADA(),i.options.autoplay&&(i.paused=!1,i.autoPlay())},i.prototype.initADA=function(){var t=this,i=Math.ceil(t.slideCount/t.options.slidesToShow),n=t.getNavigableIndexes().filter((function(e){return e>=0&&e<t.slideCount}));t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==t.$dots&&(t.$slides.not(t.$slideTrack.find(".slick-cloned")).each((function(i){var r=n.indexOf(i);if(e(this).attr({role:"tabpanel",id:"slick-slide"+t.instanceUid+i,tabindex:-1}),-1!==r){var o="slick-slide-control"+t.instanceUid+r;e("#"+o).length&&e(this).attr({"aria-describedby":o})}})),t.$dots.attr("role","tablist").find("li").each((function(r){var o=n[r];e(this).attr({role:"presentation"}),e(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+t.instanceUid+r,"aria-controls":"slick-slide"+t.instanceUid+o,"aria-label":r+1+" of "+i,"aria-selected":null,tabindex:"-1"})})).eq(t.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var r=t.currentSlide,o=r+t.options.slidesToShow;r<o;r++)t.options.focusOnChange?t.$slides.eq(r).attr({tabindex:"0"}):t.$slides.eq(r).removeAttr("tabindex");t.activateADA()},i.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},i.prototype.initDotEvents=function(){var t=this;!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&(e("li",t.$dots).on("click.slick",{message:"index"},t.changeSlide),!0===t.options.accessibility&&t.$dots.on("keydown.slick",t.keyHandler)),!0===t.options.dots&&!0===t.options.pauseOnDotsHover&&t.slideCount>t.options.slidesToShow&&e("li",t.$dots).on("mouseenter.slick",e.proxy(t.interrupt,t,!0)).on("mouseleave.slick",e.proxy(t.interrupt,t,!1))},i.prototype.initSlideEvents=function(){var t=this;t.options.pauseOnHover&&(t.$list.on("mouseenter.slick",e.proxy(t.interrupt,t,!0)),t.$list.on("mouseleave.slick",e.proxy(t.interrupt,t,!1)))},i.prototype.initializeEvents=function(){var t=this;t.initArrowEvents(),t.initDotEvents(),t.initSlideEvents(),t.$list.on("touchstart.slick mousedown.slick",{action:"start"},t.swipeHandler),t.$list.on("touchmove.slick mousemove.slick",{action:"move"},t.swipeHandler),t.$list.on("touchend.slick mouseup.slick",{action:"end"},t.swipeHandler),t.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},t.swipeHandler),t.$list.on("click.slick",t.clickHandler),e(document).on(t.visibilityChange,e.proxy(t.visibility,t)),!0===t.options.accessibility&&t.$list.on("keydown.slick",t.keyHandler),!0===t.options.focusOnSelect&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),e(window).on("orientationchange.slick.slick-"+t.instanceUid,e.proxy(t.orientationChange,t)),e(window).on("resize.slick.slick-"+t.instanceUid,e.proxy(t.resize,t)),e("[draggable!=true]",t.$slideTrack).on("dragstart",t.preventDefault),e(window).on("load.slick.slick-"+t.instanceUid,t.setPosition),e(t.setPosition)},i.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},i.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},i.prototype.lazyLoad=function(){var t,i,n,r=this;function o(t){e("img[data-lazy]",t).each((function(){var t=e(this),i=e(this).attr("data-lazy"),n=e(this).attr("data-srcset"),o=e(this).attr("data-sizes")||r.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){t.animate({opacity:0},100,(function(){n&&(t.attr("srcset",n),o&&t.attr("sizes",o)),t.attr("src",i).animate({opacity:1},200,(function(){t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")})),r.$slider.trigger("lazyLoaded",[r,t,i])}))},s.onerror=function(){t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i])},s.src=i}))}if(!0===r.options.centerMode?!0===r.options.infinite?n=(i=r.currentSlide+(r.options.slidesToShow/2+1))+r.options.slidesToShow+2:(i=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),n=r.options.slidesToShow/2+1+2+r.currentSlide):(i=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,n=Math.ceil(i+r.options.slidesToShow),!0===r.options.fade&&(i>0&&i--,n<=r.slideCount&&n++)),t=r.$slider.find(".slick-slide").slice(i,n),"anticipated"===r.options.lazyLoad)for(var s=i-1,a=n,l=r.$slider.find(".slick-slide"),u=0;u<r.options.slidesToScroll;u++)s<0&&(s=r.slideCount-1),t=(t=t.add(l.eq(s))).add(l.eq(a)),s--,a++;o(t),r.slideCount<=r.options.slidesToShow?o(r.$slider.find(".slick-slide")):r.currentSlide>=r.slideCount-r.options.slidesToShow?o(r.$slider.find(".slick-cloned").slice(0,r.options.slidesToShow)):0===r.currentSlide&&o(r.$slider.find(".slick-cloned").slice(-1*r.options.slidesToShow))},i.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},i.prototype.next=i.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},i.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},i.prototype.pause=i.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},i.prototype.play=i.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},i.prototype.postSlide=function(t){var i=this;i.unslicked||(i.$slider.trigger("afterChange",[i,t]),i.animating=!1,i.slideCount>i.options.slidesToShow&&i.setPosition(),i.swipeLeft=null,i.options.autoplay&&i.autoPlay(),!0===i.options.accessibility&&(i.initADA(),i.options.focusOnChange&&e(i.$slides.get(i.currentSlide)).attr("tabindex",0).focus()))},i.prototype.prev=i.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},i.prototype.preventDefault=function(e){e.preventDefault()},i.prototype.progressiveLazyLoad=function(t){t=t||1;var i,n,r,o,s,a=this,l=e("img[data-lazy]",a.$slider);l.length?(i=l.first(),n=i.attr("data-lazy"),r=i.attr("data-srcset"),o=i.attr("data-sizes")||a.$slider.attr("data-sizes"),(s=document.createElement("img")).onload=function(){r&&(i.attr("srcset",r),o&&i.attr("sizes",o)),i.attr("src",n).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===a.options.adaptiveHeight&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,i,n]),a.progressiveLazyLoad()},s.onerror=function(){t<3?setTimeout((function(){a.progressiveLazyLoad(t+1)}),500):(i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,i,n]),a.progressiveLazyLoad())},s.src=n):a.$slider.trigger("allImagesLoaded",[a])},i.prototype.refresh=function(t){var i,n,r=this;n=r.slideCount-r.options.slidesToShow,!r.options.infinite&&r.currentSlide>n&&(r.currentSlide=n),r.slideCount<=r.options.slidesToShow&&(r.currentSlide=0),i=r.currentSlide,r.destroy(!0),e.extend(r,r.initials,{currentSlide:i}),r.init(),t||r.changeSlide({data:{message:"index",index:i}},!1)},i.prototype.registerBreakpoints=function(){var t,i,n,r=this,o=r.options.responsive||null;if("array"===e.type(o)&&o.length){for(t in r.respondTo=r.options.respondTo||"window",o)if(n=r.breakpoints.length-1,o.hasOwnProperty(t)){for(i=o[t].breakpoint;n>=0;)r.breakpoints[n]&&r.breakpoints[n]===i&&r.breakpoints.splice(n,1),n--;r.breakpoints.push(i),r.breakpointSettings[i]=o[t].settings}r.breakpoints.sort((function(e,t){return r.options.mobileFirst?e-t:t-e}))}},i.prototype.reinit=function(){var t=this;t.$slides=t.$slideTrack.children(t.options.slide).addClass("slick-slide"),t.slideCount=t.$slides.length,t.currentSlide>=t.slideCount&&0!==t.currentSlide&&(t.currentSlide=t.currentSlide-t.options.slidesToScroll),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),t.registerBreakpoints(),t.setProps(),t.setupInfinite(),t.buildArrows(),t.updateArrows(),t.initArrowEvents(),t.buildDots(),t.updateDots(),t.initDotEvents(),t.cleanUpSlideEvents(),t.initSlideEvents(),t.checkResponsive(!1,!0),!0===t.options.focusOnSelect&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.setPosition(),t.focusHandler(),t.paused=!t.options.autoplay,t.autoPlay(),t.$slider.trigger("reInit",[t])},i.prototype.resize=function(){var t=this;e(window).width()!==t.windowWidth&&(clearTimeout(t.windowDelay),t.windowDelay=window.setTimeout((function(){t.windowWidth=e(window).width(),t.checkResponsive(),t.unslicked||t.setPosition()}),50))},i.prototype.removeSlide=i.prototype.slickRemove=function(e,t,i){var n=this;if(e="boolean"==typeof e?!0===(t=e)?0:n.slideCount-1:!0===t?--e:e,n.slideCount<1||e<0||e>n.slideCount-1)return!1;n.unload(),!0===i?n.$slideTrack.children().remove():n.$slideTrack.children(this.options.slide).eq(e).remove(),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slidesCache=n.$slides,n.reinit()},i.prototype.setCSS=function(e){var t,i,n=this,r={};!0===n.options.rtl&&(e=-e),t="left"==n.positionProp?Math.ceil(e)+"px":"0px",i="top"==n.positionProp?Math.ceil(e)+"px":"0px",r[n.positionProp]=e,!1===n.transformsEnabled?n.$slideTrack.css(r):(r={},!1===n.cssTransitions?(r[n.animType]="translate("+t+", "+i+")",n.$slideTrack.css(r)):(r[n.animType]="translate3d("+t+", "+i+", 0px)",n.$slideTrack.css(r)))},i.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},i.prototype.setFade=function(){var t,i=this;i.$slides.each((function(n,r){t=i.slideWidth*n*-1,!0===i.options.rtl?e(r).css({position:"relative",right:t,top:0,zIndex:i.options.zIndex-2,opacity:0}):e(r).css({position:"relative",left:t,top:0,zIndex:i.options.zIndex-2,opacity:0})})),i.$slides.eq(i.currentSlide).css({zIndex:i.options.zIndex-1,opacity:1})},i.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},i.prototype.setOption=i.prototype.slickSetOption=function(){var t,i,n,r,o,s=this,a=!1;if("object"===e.type(arguments[0])?(n=arguments[0],a=arguments[1],o="multiple"):"string"===e.type(arguments[0])&&(n=arguments[0],r=arguments[1],a=arguments[2],"responsive"===arguments[0]&&"array"===e.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)s.options[n]=r;else if("multiple"===o)e.each(n,(function(e,t){s.options[e]=t}));else if("responsive"===o)for(i in r)if("array"!==e.type(s.options.responsive))s.options.responsive=[r[i]];else{for(t=s.options.responsive.length-1;t>=0;)s.options.responsive[t].breakpoint===r[i].breakpoint&&s.options.responsive.splice(t,1),t--;s.options.responsive.push(r[i])}a&&(s.unload(),s.reinit())},i.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},i.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},i.prototype.setSlideClasses=function(e){var t,i,n,r,o=this;if(i=o.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),o.$slides.eq(e).addClass("slick-current"),!0===o.options.centerMode){var s=o.options.slidesToShow%2==0?1:0;t=Math.floor(o.options.slidesToShow/2),!0===o.options.infinite&&(e>=t&&e<=o.slideCount-1-t?o.$slides.slice(e-t+s,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(n=o.options.slidesToShow+e,i.slice(n-t+1+s,n+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-o.options.slidesToShow).addClass("slick-center"):e===o.slideCount-1&&i.eq(o.options.slidesToShow).addClass("slick-center")),o.$slides.eq(e).addClass("slick-center")}else e>=0&&e<=o.slideCount-o.options.slidesToShow?o.$slides.slice(e,e+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=o.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(r=o.slideCount%o.options.slidesToShow,n=!0===o.options.infinite?o.options.slidesToShow+e:e,o.options.slidesToShow==o.options.slidesToScroll&&o.slideCount-e<o.options.slidesToShow?i.slice(n-(o.options.slidesToShow-r),n+r).addClass("slick-active").attr("aria-hidden","false"):i.slice(n,n+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==o.options.lazyLoad&&"anticipated"!==o.options.lazyLoad||o.lazyLoad()},i.prototype.setupInfinite=function(){var t,i,n,r=this;if(!0===r.options.fade&&(r.options.centerMode=!1),!0===r.options.infinite&&!1===r.options.fade&&(i=null,r.slideCount>r.options.slidesToShow)){for(n=!0===r.options.centerMode?r.options.slidesToShow+1:r.options.slidesToShow,t=r.slideCount;t>r.slideCount-n;t-=1)i=t-1,e(r.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i-r.slideCount).prependTo(r.$slideTrack).addClass("slick-cloned");for(t=0;t<n+r.slideCount;t+=1)i=t,e(r.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i+r.slideCount).appendTo(r.$slideTrack).addClass("slick-cloned");r.$slideTrack.find(".slick-cloned").find("[id]").each((function(){e(this).attr("id","")}))}},i.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},i.prototype.selectHandler=function(t){var i=this,n=e(t.target).is(".slick-slide")?e(t.target):e(t.target).parents(".slick-slide"),r=parseInt(n.attr("data-slick-index"));r||(r=0),i.slideCount<=i.options.slidesToShow?i.slideHandler(r,!1,!0):i.slideHandler(r)},i.prototype.slideHandler=function(e,t,i){var n,r,o,s,a,l,u=this;if(t=t||!1,!(!0===u.animating&&!0===u.options.waitForAnimate||!0===u.options.fade&&u.currentSlide===e))if(!1===t&&u.asNavFor(e),n=e,a=u.getLeft(n),s=u.getLeft(u.currentSlide),u.currentLeft=null===u.swipeLeft?s:u.swipeLeft,!1===u.options.infinite&&!1===u.options.centerMode&&(e<0||e>u.getDotCount()*u.options.slidesToScroll))!1===u.options.fade&&(n=u.currentSlide,!0!==i&&u.slideCount>u.options.slidesToShow?u.animateSlide(s,(function(){u.postSlide(n)})):u.postSlide(n));else if(!1===u.options.infinite&&!0===u.options.centerMode&&(e<0||e>u.slideCount-u.options.slidesToScroll))!1===u.options.fade&&(n=u.currentSlide,!0!==i&&u.slideCount>u.options.slidesToShow?u.animateSlide(s,(function(){u.postSlide(n)})):u.postSlide(n));else{if(u.options.autoplay&&clearInterval(u.autoPlayTimer),r=n<0?u.slideCount%u.options.slidesToScroll!=0?u.slideCount-u.slideCount%u.options.slidesToScroll:u.slideCount+n:n>=u.slideCount?u.slideCount%u.options.slidesToScroll!=0?0:n-u.slideCount:n,u.animating=!0,u.$slider.trigger("beforeChange",[u,u.currentSlide,r]),o=u.currentSlide,u.currentSlide=r,u.setSlideClasses(u.currentSlide),u.options.asNavFor&&(l=(l=u.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(u.currentSlide),u.updateDots(),u.updateArrows(),!0===u.options.fade)return!0!==i?(u.fadeSlideOut(o),u.fadeSlide(r,(function(){u.postSlide(r)}))):u.postSlide(r),void u.animateHeight();!0!==i&&u.slideCount>u.options.slidesToShow?u.animateSlide(a,(function(){u.postSlide(r)})):u.postSlide(r)}},i.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},i.prototype.swipeDirection=function(){var e,t,i,n,r=this;return e=r.touchObject.startX-r.touchObject.curX,t=r.touchObject.startY-r.touchObject.curY,i=Math.atan2(t,e),(n=Math.round(180*i/Math.PI))<0&&(n=360-Math.abs(n)),n<=45&&n>=0?!1===r.options.rtl?"left":"right":n<=360&&n>=315?!1===r.options.rtl?"left":"right":n>=135&&n<=225?!1===r.options.rtl?"right":"left":!0===r.options.verticalSwiping?n>=35&&n<=135?"down":"up":"vertical"},i.prototype.swipeEnd=function(e){var t,i,n=this;if(n.dragging=!1,n.swiping=!1,n.scrolling)return n.scrolling=!1,!1;if(n.interrupted=!1,n.shouldClick=!(n.touchObject.swipeLength>10),void 0===n.touchObject.curX)return!1;if(!0===n.touchObject.edgeHit&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe){switch(i=n.swipeDirection()){case"left":case"down":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.currentDirection=0;break;case"right":case"up":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.currentDirection=1}"vertical"!=i&&(n.slideHandler(t),n.touchObject={},n.$slider.trigger("swipe",[n,i]))}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},i.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},i.prototype.swipeMove=function(e){var t,i,n,r,o,s,a=this;return o=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||o&&1!==o.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==o?o[0].pageX:e.clientX,a.touchObject.curY=void 0!==o?o[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),s=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&s>4?(a.scrolling=!0,!1):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=s),i=a.swipeDirection(),void 0!==e.originalEvent&&a.touchObject.swipeLength>4&&(a.swiping=!0,e.preventDefault()),r=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(r=a.touchObject.curY>a.touchObject.startY?1:-1),n=a.touchObject.swipeLength,a.touchObject.edgeHit=!1,!1===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(n=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+n*r:a.swipeLeft=t+n*(a.$list.height()/a.listWidth)*r,!0===a.options.verticalSwiping&&(a.swipeLeft=t+n*r),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},i.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return i.touchObject={},!1;void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},i.prototype.unfilterSlides=i.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},i.prototype.unload=function(){var t=this;e(".slick-cloned",t.$slider).remove(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove(),t.$nextArrow&&t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove(),t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},i.prototype.unslick=function(e){var t=this;t.$slider.trigger("unslick",[t,e]),t.destroy()},i.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},i.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},i.prototype.visibility=function(){var e=this;e.options.autoplay&&(document[e.hidden]?e.interrupted=!0:e.interrupted=!1)},e.fn.slick=function(){var e,t,n=this,r=arguments[0],o=Array.prototype.slice.call(arguments,1),s=n.length;for(e=0;e<s;e++)if("object"==typeof r||void 0===r?n[e].slick=new i(n[e],r):t=n[e].slick[r].apply(n[e].slick,o),void 0!==t)return t;return n}})),$(document).ready((function(){"use strict";$(".sliders").slick({arrows:!0,slidesToShow:1,autoplay:!0,swipeToSlide:!0,infinite:!0,adaptiveHeight:!0,speed:500,autoplaySpeed:3e3,prevArrow:".arrows__arrow--next1",nextArrow:".arrows__arrow--prev1",responsive:[{breakpoint:576,settings:{slidesToShow:1,dots:!1}}]})}));const shader={vertex:"\t\t\t#ifdef GL_ES\n\t\tprecision mediump float;\n\t\t#endif\n\t\t\n\t\t\n\t\t// Simplex 2D noise\n\t\t//\n\t\tvec3 permute(vec3 x) {\n\t\treturn mod(((x*34.0)+1.0)*x, 289.0);\n\t\t}\n\t\t\n\t\tfloat snoise(vec2 v){\n\t\tconst vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\n\t\tvec2 i  = floor(v + dot(v, C.yy) );\n\t\tvec2 x0 = v -   i + dot(i, C.xx);\n\t\tvec2 i1;\n\t\ti1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n\t\tvec4 x12 = x0.xyxy + C.xxzz;\n\t\tx12.xy -= i1;\n\t\ti = mod(i, 289.0);\n\t\tvec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\t\tvec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n\t\tdot(x12.zw,x12.zw)), 0.0);\n\t\tm = m*m ;\n\t\tm = m*m ;\n\t\tvec3 x = 2.0 * fract(p * C.www) - 1.0;\n\t\tvec3 h = abs(x) - 0.5;\n\t\tvec3 ox = floor(x + 0.5);\n\t\tvec3 a0 = x - ox;\n\t\tm *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\t\tvec3 g;\n\t\tg.x  = a0.x  * x0.x  + h.x  * x0.y;\n\t\tg.yz = a0.yz * x12.xz + h.yz * x12.yw;\n\t\treturn 130.0 * dot(m, g);\n\t\t}\n\t\t\n\t\t// those are the mandatory attributes that the lib sets\n\t\tattribute vec3 aVertexPosition;\n\t\tattribute vec2 aTextureCoord;\n\t\t\n\t\t// those are mandatory uniforms that the lib sets and that contain our model view and projection matrix\n\t\tuniform mat4 uMVMatrix;\n\t\tuniform mat4 uPMatrix;\n\t\t\n\t\tuniform mat4 uTextureMatrix0;\n\t\t\n\t\t// our time uniform\n\t\tuniform float uTime;\n\t\t\n\t\t// if you want to pass your vertex and texture coords to the fragment shader\n\t\tvarying vec3 vVertexPosition;\n\t\tvarying vec2 vTextureCoord;\n\t\t\n\t\tvoid main() {\n\t\tvec3 vertexPosition = aVertexPosition;\n\t\t\n\t\tvec4 position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);\n\t\t\n\t\t// calculate a screen space uv\n\t\tvec2 screenUV = position.xy / position.ww; // (from -1 to 1)\n\t\tscreenUV = screenUV * 0.5 + 0.5; // remap to (0 to 1)\n\t\t\n\t\t// the bigger the more waves\n\t\tfloat noiseRatio = 2.0;\n\t\t\n\t\t// apply simplex noise based on time\n\t\tvec3 simplexNoise = vec3(snoise((screenUV * noiseRatio) - (uTime / 360.0)));\n\t\t\n\t\t// displace vertices\n\t\tvertexPosition.z += simplexNoise.r;\n\t\t\n\t\tgl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);\n\t\t\n\t\t// varyings\n\t\tvTextureCoord = (uTextureMatrix0 * vec4(aTextureCoord, 0.0, 1.0)).xy;\n\t\tvVertexPosition = vertexPosition;\n\t\t}",fragment:"\t#ifdef GL_ES\n\t\tprecision mediump float;\n\t\t#endif\n\t\t\n\t\t// get our varyings\n\t\tvarying vec3 vVertexPosition;\n\t\tvarying vec2 vTextureCoord;\n\t\t\n\t\t// our texture sampler (this is the lib default name, but it could be changed)\n\t\tuniform sampler2D uSampler0;\n\t\t\n\t\tvoid main() {\n\t\t// get our texture coords\n\t\tvec2 textureCoords = vTextureCoord;\n\t\t\n\t\t// apply our texture\n\t\tvec4 finalColor = texture2D(uSampler0, textureCoords);\n\t\t\n\t\t// uncomment this line to get a b&w version of what's happening\n\t\t// finalColor = vec4(0.3, 0.3, 0.3, 1.0);\n\t\t\n\t\t// fake shadows based on vertex position along Z axis\n\t\tfinalColor.rgb -= clamp(-vVertexPosition.z / 5.0, 0.0, 1.0);\n\t\t// fake lights based on vertex position along Z axis\n\t\tfinalColor.rgb += clamp(vVertexPosition.z / 5.0, 0.0, 1.0);\n\t\t\n\t\t// handling premultiplied alpha (useful if we were using a png with transparency)\n\t\tfinalColor = vec4(finalColor.rgb * finalColor.a, finalColor.a);\n\t\t\n\t\tgl_FragColor = finalColor;\n\t\t}"};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
